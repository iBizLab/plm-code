{"version":3,"file":"index.system.min.js","sources":["../src/ContextMenuMutex.ts","../src/ContextMenuDefine.ts","../src/ContextMenuUtils.ts","../src/ContextMenuIconCheck.vue","../src/ContextMenuIconRight.vue","../src/ContextMenuItem.vue","../src/ContextMenuSeparator.vue","../src/ContextSubMenu.vue","../src/ContextSubMenuWrapper.vue","../src/ContextMenu.vue","../src/ContextMenuGroup.vue","../src/ContextMenuInstance.ts","../src/MenuBarIconMenu.vue","../src/MenuBar.vue"],"sourcesContent":["import { ContextMenuInstance } from \"./ContextMenuDefine\";\n\nlet currentOpenedContextMenu : ContextMenuInstance|null = null;\n\nexport function addOpenedContextMenu(inst: ContextMenuInstance) : void {\n  if (currentOpenedContextMenu)\n    closeContextMenu();\n  currentOpenedContextMenu = inst;\n}\nexport function removeOpenedContextMenu(inst: ContextMenuInstance) : void {\n  if (inst === currentOpenedContextMenu)\n    currentOpenedContextMenu = null;\n}  \n/**\n * Close the currently open menu\n */\nexport function closeContextMenu() : void {\n  if (currentOpenedContextMenu) {\n    currentOpenedContextMenu.closeMenu();\n    currentOpenedContextMenu = null;\n  }\n}\n","import { SVGAttributes, VNode } from \"vue\";\n\n/**\n * Default config\n */\nexport const MenuConstOptions = {\n  defaultDirection: 'br',\n  defaultMinWidth: 100,\n  defaultMaxWidth: 600,\n  defaultZindex: 100,\n  defaultAdjustPadding: {\n    x: 0,\n    y: 10.\n  },\n}\n\n/**\n * ContextMenu Component ref interface, \n * You can use `(this.$refs.myMenu as ContextMenuInstance)` or `const mymenu = ref<ContextMenuInstance>()`\n */\nexport interface ContextMenuInstance {\n  /**\n   * Close this menu.\n   * @param fromItem The last clicked menu item, will pass to `MenuOptions.onClose` callback, if user does not click any item, can be `undefined`.\n   */\n  closeMenu(fromItem?: MenuItem|undefined): void;\n}\n\nexport type MenuPopDirection = 'br'|'b'|'bl'|'tr'|'t'|'tl'|'l'|'r';\n\nexport interface MenuOptions {\n  /**\n   * The items for this menu.\n   */\n  items\t?:\tMenuItem[];\n  /**\n   * Menu display x position.\n   */\n  x: number;\n  /**\n   * Menu display y position.\n   */\n  y: number;\n  /**\n  * X-coordinate offset of submenu and parent menu.\n  */\n  xOffset\t?: number;\n  /**\n  * Y-coordinate offset of submenu and parent menu.\n  */\n  yOffset ?: number;\n  /**\n   * Set the mian menu pop-up direction relative to coordinates.\n   * \n   * Default is `'br'`, if `adjustPosition` is true then the menu will determine\n   * the pop-up direction based on its distance from the screen edge.\n   * \n   * @default 'br'\n   */\n  direction ?: MenuPopDirection,\n  /**\n   * The z-index of this menu.\n   */\n  zIndex ?: number;\n  /**\n   * Custom menu class.\n   */\n  customClass\t?:\tstring;\n  /**\n   * Theme for this menu. Default is 'default'\n   * \n   * |theme|explain|example image|\n   * |--|--|--|\n   * |`default`|Default theme|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-default.jpg)|\n   * |`default dark`|Default theme with dark|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-default-dark.jpg)|\n   * |`flat`|Simple flat theme|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-flat.jpg)|\n   * |`flat dark`|Simple flat theme with dark|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-flat-dark.jpg)|\n   * |`win10`|Win10 like theme|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-win10.jpg)|\n   * |`win10 dark`|Win10 like theme with dark|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-win10-dark.jpg)|\n   * |`mac`|Mac like theme|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-mac.jpg)|\n   * |`mac dark`|Mac like theme with dark|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-mac-dark.jpg)|\n   * \n   * You can write new theme in your own css, \n   * customize your theme by overriding the default styles, for example:\n   * ```scss\n   * .mx-context-menu.my-theme-name {\n      & {\n        //Here can override css vars\n        --mx-menu-backgroud: #ececec;\n        --mx-menu-hover-backgroud: #0165e1;\n      }\n      \n      //Customize the style of the menu here\n      padding: 8px 0;\n      box-shadow: 0px 5px 7px 1px var(--mx-menu-shadow-color);\n      border: 1px solid var(--mx-menu-border-color);\n\n      //Customize the style of the menu item\n      .mx-context-menu-item {\n        border-radius: 5px;\n        margin: 0 6px;\n        padding: 3px 6px;\n      }\n    }\n   * ```\n   */\n  theme\t?: string;\n  /**\n   * If your element in menu item has this className, click it will ignore event. \n   */\n  ignoreClickClassName?: string,\n  /**\n   * If your element in menu item has this className, click it will ignore event and close hole menu. \n   */\n  clickCloseClassName?: string,\n  /**\n   * Custom icon library font class name. (global)\n   * \n   * Only for css font icon, If you use the svg icon, you do not need to use this.\n   */\n  iconFontClass ?:\tstring;\n  /**\n   * Should a fixed-width icon area be reserved for menu items without icon. (global)\n   * \n   * Default is true.\n   * \n   * The width of icon area can be override with css var `--mx-menu-placeholder-width`.\n   */\n  preserveIconWidth ?: boolean;\n  /**\n   * Set whether the user can use keyboard keys to control the current menu.\n   * \n   * Default: true\n   * \n   * The control logic is consistent with the Windows right-click menu:\n   * * Escape : Close current menu\n   * * Enter : Click current menu item\n   * * ArrowDown : Select the down menu item\n   * * ArrowUp : Select the up menu item\n   * * ArrowLeft : Back previous submenu\n   * * ArrowRight : Open current menu item submenu\n   * * Home : Select the first menu item\n   * * End : Select the last menu item\n   */\n  keyboardControl ?: boolean;\n  /**\n   * Maximum width of main menu (in pixels)\n   */\n  maxWidth ?: number;\n  /**\n   * Minimum width of main menu (pixels)\n   */\n  minWidth ?: number;\n  /**\n   * Close when user scroll mouse ? Default is true.\n   */\n  closeWhenScroll ?: boolean;\n  /**\n   * Padding for submenu position adjust. Default is `{ x：0, y: 10 }`.\n   */\n  adjustPadding?: { x: number, y: number }|number,\n  /**\n   * By default, the menu will automatically adjust its position to prevent it overflow the container.\n   * \n   * If you allow menu overflow containers, you can set this to false.\n   * \n   * Default is true.\n   */\n  adjustPosition?: boolean,\n  /**\n   * Return the mounted node for MenuRoot.\n   * \n   * Note: After you change the mount node, the menu display position may be incorrect. \n   * \n   * * The MenuOptions.x is the distance from the menu to the left edge of the container (container should `position: relative;`);\n   * * The MenuOptions.y is the distance from the menu to the top edge of the container (container should `position: relative;`);;\n   * \n   * So, you need to change the x and y values you passed in to ensure that the display position is correct.\n   * \n   * You may need to use `ContextMenu.transformMenuPosition` to transform the menu display position:\n   * \n   * ```\n   * function onContextMenu(e: MouseEvent) {\n      //MyContainerElement is the MenuRoot\n      const scaledPosition = ContextMenu.transformMenuPosition(e.target as HTMLElement, e.offsetX, e.offsetY, MyContainerElement);\n      menuData.x = scaledPosition.x;\n      menuData.y = scaledPosition.y;\n      //show menu\n      ContextMenu.showContextMenu(menuData);\n    }\n   * ```\n   */\n  getContainer ?: HTMLElement | (() => HTMLElement);\n  /**\n   * This event emit when this menu is closing. (Usually used in function mode)\n   * @param lastClickItem The last clicked menu item, if user does not click any item, it is `undefined`. This param only valid in function mode.\n   */\n  onClose ?: ((lastClickItem: MenuItem|undefined) => void) | undefined;\n\n  /**\n   * Event for MenuBar component\n   */\n  onKeyFocusMoveLeft ?:  (() => void) | undefined;\n  /**\n   * Event for MenuBar component\n   */\n  onKeyFocusMoveRight ?:  (() => void) | undefined;\n}\nexport interface MenuItem {\n  /**\n   * The label of this menu item.\n   * \n   * Can be a callback. Use `h` to render custom content.\n   * \n   * ```js\n   * { \n   *   label: h('div', {\n   *     style: {\n   *       fontSize: '20px',\n   *       color: '#f98',\n   *     }\n   *   }, \"Item with custom render\"),\n   * },\n   * ```\n   */\n  label ?: string|VNode|((label: string) => VNode),\n  /**\n   * The icon for this menu item.\n   */\n  icon ?: string|VNode|((icon: string) => VNode),\n  /**\n   * Custom icon library font class name.\n   * \n   * Only for css font icon, If you use the svg icon, you do not need to use this.\n   */\n  iconFontClass ?: string,\n  /**\n   * Should a fixed-width icon area be reserved for menu items without icon. (this item)\n   * \n   * Default is inherit from `MenuOptions.preserveIconWidth` .\n   * \n   * The width of icon area can be override with css var `--mx-menu-placeholder-width`.\n   */\n  preserveIconWidth ?: boolean;\n  /**\n   * Display icons use svg symbol (`<use xlink:href=\"#icon-symbol-name\">`) ， only valid when icon attribute is empty.\n   */\n  svgIcon ?: string,\n  /**\n   * The user-defined attribute of the svg tag, which is valid when using `svgIcon`.\n   */\n  svgProps ?: SVGAttributes,\n  /**\n   * Disable menu item?\n   */\n  disabled ?: boolean,\n  /**\n   * Hide menu item?\n   */\n  hidden ?: boolean,\n  /**\n   * Is this menu item checked?\n   * \n   * The check mark are displayed on the left side of the icon, so it is not recommended to display the icon at the same time.\n   */\n  checked ?: boolean,\n  /**\n   * Shortcut key text display on the right.\n   * \n   * The shortcut keys here are only for display. You need to handle the key events by yourself.\n   */\n  shortcut ?: string|string,\n  /**\n   * Set the submenu pop-up direction relative to coordinates.\n   * \n   * Default is inherted from `MenuOptions.direction`, if `adjustSubMenuPosition` is true then the submenu will determine\n   * the pop-up direction based on its distance from the screen edge.\n   * \n   */\n  direction ?: MenuPopDirection,\n  /**\n   * By default, the submenu will automatically adjust its position to prevent it overflow the container.\n   * \n   * If you allow menu overflow containers, you can set this to false.\n   * \n   * Default is inherit from `MenuOptions.adjustPosition`.\n   */\n  adjustSubMenuPosition ?: boolean,\n  /**\n   * When there are subitems in this item, is it allowed to trigger its own click event? Default is false\n   */\n  clickableWhenHasChildren ?: boolean,\n  /**\n   * Should close menu when Click this menu item ?\n   */\n  clickClose ?: boolean,\n  /**\n   * Is this menu item separated from the menu item?\n   * \n   * * `true` or `'down'`: Separator is show below menu.\n   * * `'up'`: Separator is show above menu.\n   * * `'self'`: Mark this item is a Separator.\n   * * `false`: No Separator.\n   */\n  divided ?: boolean|'up'|'down'|'self',\n  /**\n   * Custom css class for submenu\n   */\n  customClass ?: string,\n  /**\n   * Submenu maximum width (in pixels).\n   */\n  maxWidth ?: number|string,\n  /**\n   * Submenu minimum width (in pixels).\n   */\n  minWidth ?: number|string,\n  /**\n   * Menu item click event handler.\n   * \n   * @param e The current event of `click` or `keydown` (when user use keyboard press this menu)\n   */\n  onClick ?: (e?: MouseEvent|KeyboardEvent) => void,\n  /**\n   * This event emit when submenu of this item is closing.\n   */\n  onSubMenuClose ?: (() => void) | undefined;\n  /**\n   * This event emit when submenu of this item is showing.\n   */\n  onSubMenuOpen ?: (() => void) | undefined;\n  /**\n   * A custom render callback that allows you to customize the rendering\n   *  of the current item.\n   */\n  customRender ?: VNode|((item: MenuItem) => VNode),\n  /**\n   * Child menu items (Valid in function mode).\n   */\n  children ?: MenuItem[],\n}\n\nexport interface ContextMenuPositionData {\n  x: number;\n  y: number;\n}\n\nexport declare interface MenuItemRenderData extends Omit<MenuItem, 'children'|'customRender'|'onClick'> {\n  /**\n   * Global theme\n   */\n  theme: 'light'|'dark',\n  /**\n   * This value indicates whether the current menu submenu is open\n   */\n  isOpen: boolean,\n  /**\n   * This value indicates whether the current menu has submenus\n   */\n  hasChildren: boolean,\n  /**\n   * Click event callback of custom element, which is used for menu internal event\n   */\n  onClick: (e: MouseEvent) => void,\n  /**\n   * MouseEnter event callback of custom element, which is used for menu internal event\n   */\n  onMouseEnter: (e: MouseEvent) => void,\n}","import { defineComponent, toRefs, VNode } from \"vue\";\nimport { MenuConstOptions, MenuOptions } from \"./ContextMenuDefine\";\n\nexport function getTop(e: HTMLElement, stopNode?: HTMLElement): number {\n  let offset = e.offsetTop;\n  if (e.offsetParent != null && e.offsetParent != stopNode) {\n    offset -= e.offsetParent.scrollTop;\n    offset += getTop(e.offsetParent as HTMLElement, stopNode);\n  }\n  return offset;\n}\nexport function getLeft(e: HTMLElement, stopNode?: HTMLElement): number {\n  let offset = e.offsetLeft;\n  if (e.offsetParent != null && e.offsetParent != stopNode) {\n    offset -= e.offsetParent.scrollLeft;\n    offset += getLeft(e.offsetParent as HTMLElement, stopNode);\n  }\n  return offset;\n}\n\n/**\n * If your `body` element is in a scaled state (e.g. `transform: scale(0.5)`), \n * this may lead to the wrong position of the menu display. \n * You can use this function to transform the menu display position:\n * \n * ```ts\n * \n  import ContextMenu from '@imengyu/vue3-context-menu'\n\n  function onContextMenu(e: MouseEvent) {\n    const scaledPosition = ContextMenu.transformMenuPosition(e.target as HTMLElement, e.offsetX, e.offsetY);\n    //Full code of menuData is in `/examples/views/InScaledBody.vue`\n    menuData.x = scaledPosition.x;\n    menuData.y = scaledPosition.y;\n    //show menu\n    ContextMenu.showContextMenu(menuData);\n  }\n  * ```\n  * @param e Current click element\n  * @param offsetX MouseEvent.offsetX\n  * @param offsetY MouseEvent.offsetY\n  */\nexport function transformMenuPosition(e: HTMLElement, offsetX: number, offsetY: number, container?: HTMLElement): {\n  x: number,\n  y: number,\n} {\n  return {\n    x: getLeft(e, container) + offsetX,\n    y: getTop(e, container) + offsetY,\n  };\n}\n\n\nexport function removeContainer(container: HTMLElement) :void {\n  container.parentNode?.removeChild(container);\n}\n\nconst DEFAULT_CONTAINER_ID = 'mx-menu-default-container';\nconst GEN_CONTAINER_ID = 'mx-menu-container-';\nlet containerId = 0;\n\nexport function genContainer(options: MenuOptions) : {\n  eleId: string,\n  container: HTMLElement,\n  isNew: boolean,\n} {\n  const { getContainer, zIndex } = options;\n\n  if (getContainer) {\n    const container = typeof getContainer === 'function' ? getContainer() : getContainer;\n    if (container) {\n      let eleId = container.getAttribute('id');\n      if (!eleId) {\n        eleId = GEN_CONTAINER_ID + (containerId++);\n        container.setAttribute('id', eleId);\n      }\n      container.style.zIndex = zIndex?.toString() || MenuConstOptions.defaultZindex.toString();\n      return {\n        eleId,\n        container,\n        isNew: false,\n      };\n    }\n  }\n\n  let container = document.getElementById(DEFAULT_CONTAINER_ID);\n  if (!container) {\n    container = document.createElement('div');\n    container.setAttribute('id', DEFAULT_CONTAINER_ID);\n    container.setAttribute('class', 'mx-menu-ghost-host fullscreen');\n    document.body.appendChild(container);\n  }\n  container.style.zIndex = zIndex?.toString() || MenuConstOptions.defaultZindex.toString();\n  return {\n    eleId: DEFAULT_CONTAINER_ID,\n    container,\n    isNew: true,\n  };\n}\n\nexport function solveNumberOrStringSize(value: string|number) : string {\n  return typeof value === 'number' ? `${value}px` : value;\n}\n\n/**\n * Render a VNode\n */\nexport const VNodeRender = defineComponent({\n  props: {\n    vnode: {\n      type: [ Object, Function ],\n      default: null,\n    },\n    data: {\n      type: Object,\n      default: null,\n    },\n  },\n  setup(props) {\n    const { vnode, data } = toRefs(props);\n    return () => typeof vnode.value === 'function' ? (vnode.value as unknown as (data: unknown) => VNode)(data.value) : vnode.value as unknown as VNode;\n  },\n})","<template>\n  <svg class=\"mx-checked-mark\" aria-hidden=\"true\" viewBox=\"0 0 1024 1024\">\n    <path d=\"M129.3,428.6L52,512l345,372.5l575-620.8l-69.5-75L400.4,718.2L129.3,428.6z\"></path>\n  </svg>\n</template>","<template>\n  <svg class=\"mx-right-arrow\" aria-hidden=\"true\" viewBox=\"0 0 1024 1024\">\n    <path d=\"M307.018 49.445c11.517 0 23.032 4.394 31.819 13.18L756.404 480.18c8.439 8.438 13.181 19.885 13.181 31.82s-4.741 23.38-13.181 31.82L338.838 961.376c-17.574 17.573-46.065 17.573-63.64-0.001-17.573-17.573-17.573-46.065 0.001-63.64L660.944 512 275.198 126.265c-17.574-17.573-17.574-46.066-0.001-63.64C283.985 53.839 295.501 49.445 307.018 49.445z\"></path>\n  </svg>\n</template>","<template>\n  <div v-if=\"!hidden\" class=\"mx-context-menu-item-wrapper\" ref=\"menuItemRef\" data-type=\"ContextMenuItem\">\n    <!--Custom render-->\n    <VNodeRender v-if=\"globalHasSlot('itemRender')\" :vnode=\"() => globalRenderSlot('itemRender', getItemDataForChildren())\" />\n    <VNodeRender v-else-if=\"customRender\" :vnode=\"customRender\" :data=\"getItemDataForChildren()\" />\n    <!--Default item-->\n    <div \n      v-else\n      :class=\"[\n        'mx-context-menu-item',\n        (disabled ? 'disabled' : ''),\n        (keyBoardFocusMenu ? 'keyboard-focus' : ''),\n        (customClass ? (' ' + customClass) : ''),\n        (showSubMenu ? 'open' : ''),\n      ]\"\n      @click=\"onClick\"\n      @mouseenter=\"onMouseEnter\"\n    >\n      <slot>\n        <div class=\"mx-item-row\">\n          <div :class=\"[\n            'mx-icon-placeholder',\n            preserveIconWidth ? 'preserve-width': '',\n          ]\">\n            <slot name=\"icon\">\n              <VNodeRender v-if=\"globalHasSlot('itemIconRender')\" :vnode=\"() => globalRenderSlot('itemIconRender', getItemDataForChildren())\" />\n              <svg v-else-if=\"typeof svgIcon === 'string' && svgIcon\" class=\"icon svg\" v-bind=\"svgProps\">\n                <use :xlink:href=\"svgIcon\"></use>\n              </svg>\n              <VNodeRender v-else-if=\"(typeof icon !== 'string')\" :vnode=\"icon\" :data=\"icon\" />\n              <i v-else-if=\"typeof icon === 'string' && icon !== ''\" :class=\"icon + ' icon '+ iconFontClass + ' ' + globalIconFontClass\"></i>\n            </slot>\n            <slot v-if=\"checked\" name=\"check\">\n              <VNodeRender v-if=\"globalHasSlot('itemCheckRender')\" :vnode=\"() => globalRenderSlot('itemCheckRender', getItemDataForChildren())\" />\n              <ContextMenuIconCheck />\n            </slot>\n          </div>\n          <slot name=\"label\">\n            <VNodeRender v-if=\"globalHasSlot('itemLabelRender')\" :vnode=\"() => globalRenderSlot('itemLabelRender', getItemDataForChildren())\" />\n            <span class=\"label\" v-else-if=\"typeof label === 'string'\">{{ label }}</span>\n            <VNodeRender v-else :vnode=\"label\" :data=\"label\" />\n          </slot>\n        </div>\n        <div class=\"mx-item-row\">\n          <slot v-if=\"shortcut\" name=\"shortcut\">\n            <VNodeRender v-if=\"globalHasSlot('itemShortcutRender')\" :vnode=\"() => globalRenderSlot('itemShortcutRender', getItemDataForChildren())\" />\n            <span class=\"mx-shortcut\">{{ shortcut }}</span>\n          </slot>\n          <slot v-if=\"showRightArrow\" name=\"rightArrow\">\n            <VNodeRender v-if=\"globalHasSlot('itemRightArrowRender')\" :vnode=\"() => globalRenderSlot('itemRightArrowRender', getItemDataForChildren())\" />\n            <ContextMenuIconRight />\n          </slot>\n        </div>\n      </slot>\n    </div>\n    \n    <!--Sub menu render-->\n    <slot v-if=\"showSubMenu\" name=\"submenu\"></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject, nextTick, onBeforeUnmount, onMounted, PropType, ref, SVGAttributes, toRefs } from 'vue'\nimport { MenuItemContext, SubMenuParentContext } from './ContextSubMenu.vue'\nimport { GlobalHasSlot, GlobalRenderSlot } from './ContextMenu.vue'\nimport { VNodeRender } from './ContextMenuUtils'\nimport ContextMenuIconCheck from './ContextMenuIconCheck.vue'\nimport ContextMenuIconRight from './ContextMenuIconRight.vue'\nimport { MenuItem } from './ContextMenuDefine'\n\n/**\n * Menu Item\n */\nexport default defineComponent({\n  name: 'ContextMenuItem',\n  components: {\n    VNodeRender,\n    ContextMenuIconCheck,\n    ContextMenuIconRight\n  },\n  props: {\n    /**\n     * Is this menu disabled? \n     */\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Is this menu hidden? \n     */\n    hidden: {\n      type: Boolean,\n      default: false\n    },\n    customRender: {\n      type: Function,\n      default: null\n    },\n    /**\n     * Custom css class for submenu\n     */\n    customClass: {\n      type: String,\n      default: ''\n    },\n    clickHandler: {\n      type: Function as PropType<(e: MouseEvent|KeyboardEvent) => void>,\n      default: null\n    },\n    /**\n     * Menu label\n     */\n    label: {\n      type: [String, Object, Function],\n      default: ''\n    },\n    /**\n     * Menu icon (for icon class)\n     */\n    icon: {\n      type: [String, Object, Function],\n      default: ''\n    },\n    /**\n     * Custom icon library font class name.\n     * \n     * Only for css font icon, If you use the svg icon, you do not need to use this.\n     */\n    iconFontClass: {\n      type: String,\n      default: 'iconfont'\n    },\n    /**\n     * Is this menu item checked?\n     * \n     * The check mark are displayed on the left side of the icon, so it is not recommended to display the icon at the same time.\n     */\n    checked: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Shortcut key text display on the right.\n     * \n     * The shortcut keys here are only for display. You need to handle the key events by yourself.\n     */\n    shortcut: {\n      type: String,\n      default: ''\n    },\n    /**\n     * Display icons use svg symbol (`<use xlink:href=\"#icon-symbol-name\">`) ， only valid when icon attribute is empty.\n     */\n    svgIcon: {\n      type: String,\n      default: ''\n    },\n    /**\n     * The user-defined attribute of the svg tag, which is valid when using `svgIcon`.\n     */\n    svgProps: {\n      type: Object as PropType<SVGAttributes>,\n      default: null\n    },\n    /**\n     * Should a fixed-width icon area be reserved for menu items without icon. (this item)\n     * \n     * Default is true .\n     * \n     * The width of icon area can be override with css var `--mx-menu-placeholder-width`.\n     */\n    preserveIconWidth: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Show right arrow on this menu?\n     */\n    showRightArrow: {\n      type: Boolean,\n      default: false\n    },\n    hasChildren: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Should close menu when Click this menu item ?\n     */\n    clickClose: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * When there are subitems in this item, is it allowed to trigger its own click event? Default is false\n     */\n    clickableWhenHasChildren: {\n      type: Boolean,\n      default: false\n    },\n    rawMenuItem: {\n      type: Object as PropType<MenuItem>,\n      default: undefined\n    },\n  },\n  emits: [\n    'click',\n    'subMenuOpen',\n    'subMenuClose',\n  ],\n  setup(props, context) {\n\n    const { \n      clickHandler, clickClose, clickableWhenHasChildren, disabled, hidden,\n      label, icon, iconFontClass,\n      showRightArrow, shortcut,\n      hasChildren,\n    } = toRefs(props);\n    const showSubMenu = ref(false);\n    const keyBoardFocusMenu = ref(false);\n\n    const menuItemRef = ref<HTMLElement>();\n\n    const globalHasSlot = inject('globalHasSlot') as GlobalHasSlot;\n    const globalRenderSlot = inject('globalRenderSlot') as GlobalRenderSlot;\n    const globalTheme = inject('globalTheme') as string;\n    const globalIconFontClass = inject('globalIconFontClass') as string;\n    const globalClickCloseClassName = inject('globalClickCloseClassName') as string;\n    const globalIgnoreClickClassName = inject('globalIgnoreClickClassName') as string;\n    const globalCloseMenu = inject('globalCloseMenu') as (fromItem: MenuItem|undefined) => void;\n\n    const menuContext = inject('menuContext') as SubMenuParentContext;\n\n    //Instance Contet for keyboadr control\n    const menuItemInstance : MenuItemContext = {\n      showSubMenu: () => {\n        if (showSubMenu.value) {\n          //Mark current item\n          menuContext.markActiveMenuItem(menuItemInstance, true);\n          return true;\n        } else if (hasChildren.value) {\n          onMouseEnter();\n          return true;\n        }\n        return false;\n      },\n      isDisabledOrHidden: () => disabled.value || hidden.value,\n      getElement: () => menuItemRef.value,\n      focus: () => keyBoardFocusMenu.value = true,\n      blur: () => keyBoardFocusMenu.value = false,\n      click: onClick,\n    }\n\n    onMounted(() => {\n      if (menuContext.isMenuItemDataCollectedFlag()) {\n        //当前菜单条目是在整体加载完成后才显示的，此时菜单顺序已经无法知道，\n        //所以这里需要在父级元素中查找得出当前菜单的位置。\n        //\n        //The current menu item is displayed after the overall loading is completed. \n        //At this time, the menu order cannot be known, so here we need to \n        //find the position of the current menu in the parent element.\n        nextTick(() => {\n          let index = 0;\n          const parentEl = menuContext.getElement();\n          if (parentEl) {\n            let indexCounting = 0;\n            for (let i = 0; i < parentEl.children.length; i++) {\n              const el = parentEl.children[i];\n              if (el.getAttribute('data-type') === 'ContextMenuItem') {\n                if (el === menuItemRef.value) {\n                  index = indexCounting;\n                  break;\n                }\n                indexCounting++;\n              }\n            }\n          }\n          //Insert to pos\n          menuContext.addChildMenuItem(menuItemInstance, index);\n        });\n      } else\n        menuContext.addChildMenuItem(menuItemInstance);\n    });\n    onBeforeUnmount(() => {\n      menuContext.removeChildMenuItem(menuItemInstance);\n    });\n\n    //Click handler\n    function onClick(e: MouseEvent|KeyboardEvent) {\n      //Ignore clicking when disabled\n      if (disabled.value)\n        return;\n      //Ignore clicking when click on some special elements\n      if (e) {\n        const currentTarget = e.target as HTMLElement;\n        if (currentTarget.classList.contains('mx-context-no-clickable'))\n          return;\n        if (globalIgnoreClickClassName && currentTarget.classList.contains(globalIgnoreClickClassName))\n          return;\n        if (globalClickCloseClassName && currentTarget.classList.contains(globalClickCloseClassName)) {\n          e.stopPropagation();\n          globalCloseMenu(props.rawMenuItem);\n          return;\n        }\n      }\n      //Has submenu?\n      if (hasChildren.value) {\n        if (clickableWhenHasChildren.value) {\n          if (typeof clickHandler.value === 'function')\n            clickHandler.value(e);\n          context.emit('click', e);\n        }\n        else if (!showSubMenu.value)\n          onMouseEnter();\n      } else {\n        //Call hander from options\n        if (typeof clickHandler.value === 'function') \n          clickHandler.value(e);\n        context.emit('click', e);\n        if (clickClose.value) {\n          //emit close\n          globalCloseMenu(props.rawMenuItem);\n        }\n      }\n    }\n    //MouseEnter handler: show item submenu\n    function onMouseEnter(e?: MouseEvent) {\n      //Clear keyBoard focus style\n      keyBoardFocusMenu.value = false;\n\n      //等待一个延时，以防止用户过快移动鼠标导致菜单隐藏\n      //Wait for a delay to prevent the menu from being hidden due to the user moving the mouse too fast\n      if (!menuContext.checkCloseOtherSubMenuTimeOut())\n        menuContext.closeOtherSubMenu();\n\n      if (!disabled.value) {\n        //Mark current item\n        menuContext.markActiveMenuItem(menuItemInstance);\n\n        if (hasChildren.value) {\n          if (!e)\n            menuContext.markThisOpenedByKeyBoard();\n          //Open sub menu\n          menuContext.addOpenedSubMenu(() => {\n            keyBoardFocusMenu.value = false;\n            showSubMenu.value = false;\n            context.emit('subMenuClose');\n          });\n          showSubMenu.value = true;\n          context.emit('subMenuOpen');\n        }\n      }\n    }\n\n\n    return {\n      //Data for custom render\n      getItemDataForChildren() {\n        return {\n          disabled: disabled.value,\n          label: label.value,\n          icon: icon.value,\n          iconFontClass: iconFontClass.value,\n          showRightArrow: showRightArrow.value,\n          clickClose: clickClose.value,\n          clickableWhenHasChildren: clickableWhenHasChildren.value,\n          shortcut: shortcut.value,\n          theme: globalTheme,\n          isOpen: showSubMenu,\n          hasChildren: hasChildren,\n          onClick,\n          onMouseEnter,\n          closeMenu: globalCloseMenu,\n        }\n      },\n      showSubMenu,\n      keyBoardFocusMenu,\n      menuItemRef,\n      globalHasSlot,\n      globalRenderSlot,\n      globalIconFontClass,\n      onMouseEnter,\n      onClick,\n    }\n  },\n})\n</script>\n\n<style>\n</style>\n","<template>\n  <VNodeRender v-if=\"globalHasSlot('separatorRender')\" :vnode=\"() => globalRenderSlot('separatorRender', {})\" />\n  <div v-else class=\"mx-context-menu-item-sperator mx-context-no-clickable\"></div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject } from 'vue'\nimport { GlobalHasSlot, GlobalRenderSlot } from './ContextSubMenuWrapper.vue';\nimport { VNodeRender } from './ContextMenuUtils';\n\nexport default defineComponent({\n  name: 'ContextMenuSperator',\n  components: {\n    VNodeRender\n  },\n  setup() {\n      \n    const globalHasSlot = inject('globalHasSlot') as GlobalHasSlot;\n    const globalRenderSlot = inject('globalRenderSlot') as GlobalRenderSlot;\n\n    return {\n      globalHasSlot,\n      globalRenderSlot,\n    };\n  },\n})\n</script>","<template>\n  <div\n    :class=\"'mx-context-menu ' + (options.customClass ? options.customClass : '') + ' ' + globalTheme\"\n    :style=\"{\n      maxWidth: (maxWidth ? solveNumberOrStringSize(maxWidth) : `${constOptions.defaultMaxWidth}px`),\n      minWidth: minWidth ? solveNumberOrStringSize(minWidth) : `${constOptions.defaultMinWidth}px`,\n      maxHeight: overflow && maxHeight > 0 ? `${maxHeight}px` : undefined,\n      zIndex: zIndex,\n      left: `${position.x}px`,\n      top: `${position.y}px`,\n    }\"\n    data-type=\"ContextSubMenu\"\n    @click=\"onSubMenuBodyClick\"\n  >\n    <!--Child menu items-->\n    <div \n      class=\"mx-context-menu-items\"\n      ref=\"menu\"\n      :style=\"{\n        top: `${scrollValue}px`,\n      }\"\n    >\n      <slot>\n        <template v-for=\"(item, i) in items\" :key=\"i\" >\n          <ContextMenuSeparator v-if=\"item.hidden !== true && item.divided === 'up'\" />\n          <ContextMenuSeparator v-if=\"item.hidden !== true && item.divided === 'self'\" />\n          <!--Menu Item-->\n          <ContextMenuItem\n            v-else\n            :clickHandler=\"item.onClick ? (e) => item.onClick!(e) : undefined\"\n            :disabled=\"item.disabled\"\n            :hidden=\"item.hidden\"\n            :icon=\"item.icon\"\n            :iconFontClass=\"item.iconFontClass\"\n            :svgIcon=\"item.svgIcon\"\n            :svgProps=\"item.svgProps\"\n            :label=\"item.label\"\n            :customRender=\"(item.customRender as Function)\"\n            :customClass=\"item.customClass\"\n            :checked=\"item.checked\"\n            :shortcut=\"item.shortcut\"\n            :clickClose=\"item.clickClose\"\n            :clickableWhenHasChildren=\"item.clickableWhenHasChildren\"\n            :preserveIconWidth=\"item.preserveIconWidth !== undefined ? item.preserveIconWidth : options.preserveIconWidth\"\n            :showRightArrow=\"item.children && item.children.length > 0\"\n            :hasChildren=\"item.children && item.children.length > 0\"\n            :rawMenuItem=\"item\"\n            @sub-menu-open=\"item.onSubMenuOpen\"\n            @sub-menu-close=\"item.onSubMenuClose\"\n          >\n            <template v-if=\"item.children && item.children.length > 0\" #submenu>\n              <!--Sub menu-->\n              <ContextSubMenu \n                :items=\"item.children\"\n                :maxWidth=\"item.maxWidth\"\n                :minWidth=\"item.minWidth\"\n                :adjustPosition=\"item.adjustSubMenuPosition !== undefined ? item.adjustSubMenuPosition : options.adjustPosition\"\n                :direction=\"item.direction !== undefined ? item.direction : options.direction\"\n              />\n            </template>\n          </ContextMenuItem>\n          <!--Separator-->\n          <!--Custom render-->\n          <ContextMenuSeparator v-if=\"item.hidden !== true && (item.divided === 'down' || item.divided === true)\" />\n        </template>\n      </slot>\n    </div>\n        \n    <!--Scroll button host-->\n    <div \n      class=\"mx-context-menu-scroll\"\n      ref=\"scroll\"\n    >\n      <!--Updown scroll button-->\n      <div v-show=\"overflow && scrollValue < 0\" class=\"mx-context-menu-updown mx-context-no-clickable up\" @click=\"onScroll(false)\">\n        <ContextMenuIconRight />\n      </div>\n      <div v-show=\"overflow && scrollValue > -scrollHeight\" class=\"mx-context-menu-updown mx-context-no-clickable down\" @click=\"onScroll(true)\">\n        <ContextMenuIconRight />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject, nextTick, onMounted, PropType, provide, ref, toRefs } from 'vue'\nimport { MenuOptions, MenuItem, ContextMenuPositionData, MenuConstOptions, MenuPopDirection } from './ContextMenuDefine'\nimport { getLeft, getTop, solveNumberOrStringSize } from './ContextMenuUtils'\nimport { GlobalHasSlot, GlobalRenderSlot } from './ContextMenu.vue'\nimport ContextMenuItem from './ContextMenuItem.vue'\nimport ContextMenuSeparator from './ContextMenuSeparator.vue'\nimport ContextMenuIconRight from './ContextMenuIconRight.vue'\n\n//The internal info context for menu item\nexport interface MenuItemContext {\n  focus: () => void,\n  blur: () => void,\n  showSubMenu: () => boolean,\n  getElement: () => HTMLElement|undefined,\n  isDisabledOrHidden: () => boolean,\n  click: (e: MouseEvent|KeyboardEvent) => void,\n}\n\n//The internal info context for submenu instance\nexport interface SubMenuContext {\n  isTopLevel: () => boolean;\n  closeSelfAndActiveParent: () => boolean,\n  openCurrentItemSubMenu: () => boolean,\n  closeCurrentSubMenu: () => void,\n  moveCurrentItemFirst: () => void,\n  moveCurrentItemLast: () => void,\n  moveCurrentItemDown: () => void,\n  moveCurrentItemUp: () => void,\n  focusCurrentItem: () => void,\n  triggerCurrentItemClick: (e: KeyboardEvent|MouseEvent) => void,\n}\n\n//The internal info context for submenu\nexport interface SubMenuParentContext {\n  //Props\n  container: HTMLElement;\n  zIndex: number;\n  adjustPadding: { x: number, y: number },\n\n  //Position control\n  getParentWidth: () => number;\n  getParentHeight: () => number;\n  getParentX: () => number;\n  getParentY: () => number;\n  getParentAbsX: () => number;\n  getParentAbsY: () => number;\n  getPositon: () => [number,number];\n\n  //SubMenu mutex\n  addOpenedSubMenu: (closeFn: () => void) => void;\n  closeOtherSubMenu: () => void;\n  closeOtherSubMenuWithTimeOut: () => void;\n  checkCloseOtherSubMenuTimeOut: () => boolean;\n\n  //Item control\n  addChildMenuItem: (item: MenuItemContext, index?: number) => void;\n  removeChildMenuItem: (item: MenuItemContext) => void;\n  markActiveMenuItem: (item: MenuItemContext, updateState?: boolean) => void;\n  markThisOpenedByKeyBoard: () => void;\n  isOpenedByKeyBoardFlag: () => boolean;\n  isMenuItemDataCollectedFlag: () => boolean;\n\n  //Other\n  getSubMenuInstanceContext: () => SubMenuContext|null;\n  getParentContext: () => SubMenuParentContext|null;\n  getElement: () => HTMLElement|null;\n}\n\n/**\n * Submenu container\n */\nexport default defineComponent({\n  name: 'ContextSubMenu',\n  components: {\n    ContextMenuItem,\n    ContextMenuSeparator,\n    ContextMenuIconRight\n  },\n  props: {\n    /**\n     * Items from options\n     */\n    items: { \n      type: Object as PropType<Array<MenuItem>>,\n      default: null\n    },\n    /**\n     * Max width for this submenu\n     */\n    maxWidth: {\n      type: [String, Number],\n      default: 0,\n    },\n    /**\n     * Min width for this submenu\n     */\n    minWidth: {\n      type: [String, Number],\n      default: 0,\n    },\n    /**\n     * Specifies should submenu adjust it position \n     * when the menu exceeds the screen. The default is true\n     */\n    adjustPosition: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Menu direction\n     */\n    direction: {\n      type: String as PropType<MenuPopDirection>,\n      default: 'br',\n    },\n  },\n  setup(props) {\n\n    //#region Injects\n\n    const parentContext = inject('menuContext') as SubMenuParentContext;\n    const options = inject('globalOptions') as MenuOptions;\n    const globalHasSlot = inject('globalHasSlot') as GlobalHasSlot;\n    const globalRenderSlot = inject('globalRenderSlot') as GlobalRenderSlot;\n    const globalTheme = inject('globalTheme') as string;\n\n    //#endregion\n    \n    const { zIndex, getParentWidth, getParentHeight } = parentContext;\n    const { adjustPosition } = toRefs(props);\n\n    const menu = ref<HTMLElement>();\n    const scroll = ref<HTMLElement>();\n    const openedSubMenuClose = [] as (() => void)[];\n\n    //#region Keyboard control context\n\n    const globalSetCurrentSubMenu = inject('globalSetCurrentSubMenu') as (menu: SubMenuContext|null) => void;\n\n    const menuItems = [] as MenuItemContext[];\n    let currentItem = null as MenuItemContext|null;\n    let leaveTimeout = 0;\n\n    function blurCurrentMenu() {\n      if (currentItem)\n        currentItem.blur();\n    }\n\n    function setAndFocusNotDisableItem(isDown: boolean, startIndex?: number) {\n      if (isDown) {\n        for(let i = startIndex !== undefined ? startIndex : 0; i < menuItems.length; i++) {\n          if (!menuItems[i].isDisabledOrHidden()) {\n            setAndFocusCurrentMenu(i);\n            break;\n          }\n        }\n      } else {\n        for(let i = startIndex !== undefined ? startIndex : (menuItems.length - 1); i >= 0; i--) {\n          if (!menuItems[i].isDisabledOrHidden()) {\n            setAndFocusCurrentMenu(i);\n            break;\n          }\n        }\n      }\n    }\n    function setAndFocusCurrentMenu(index?: number) {\n      if (currentItem)\n        blurCurrentMenu();\n      if (index !== undefined)\n        currentItem = menuItems[Math.max(0, Math.min(index, menuItems.length - 1))];\n      if (!currentItem)\n        return;\n\n      //Focus item\n      currentItem.focus();\n\n      //Scroll to current item\n      if (overflow.value) {\n        const element = currentItem.getElement();\n        if (element) {\n          scrollValue.value = Math.min(Math.max(-scrollHeight.value, -element.offsetTop - element.offsetHeight + maxHeight.value), 0);\n        }\n      }\n    }\n    function onSubMenuBodyClick() {\n      //Mouse click can set current focused submenu \n      globalSetCurrentSubMenu(thisMenuInsContext);\n    }\n\n    const thisMenuInsContext : SubMenuContext = {\n      isTopLevel: () => parentContext.getParentContext() === null,\n      closeSelfAndActiveParent: () => {\n        const parent = thisMenuContext.getParentContext();\n        if (parent) {\n          parent.closeOtherSubMenu();\n          const conext = parent.getSubMenuInstanceContext()\n          if (conext) {\n            conext.focusCurrentItem();\n            return true;\n          }\n        }\n        return false;\n      },\n      closeCurrentSubMenu: () => thisMenuContext.getParentContext()?.closeOtherSubMenu(),\n      moveCurrentItemFirst: () => setAndFocusNotDisableItem(true),\n      moveCurrentItemLast: () => setAndFocusNotDisableItem(false),\n      moveCurrentItemDown: () => setAndFocusNotDisableItem(true, (currentItem ? (menuItems.indexOf(currentItem) + 1) : 0)),\n      moveCurrentItemUp: () => setAndFocusNotDisableItem(false, (currentItem ? (menuItems.indexOf(currentItem) - 1) : 0)),\n      focusCurrentItem: () => setAndFocusCurrentMenu(),\n      openCurrentItemSubMenu: () => {\n        if (currentItem)\n          return currentItem?.showSubMenu()\n        return false;\n      },\n      triggerCurrentItemClick: (e) => currentItem?.click(e),\n    };\n\n    let isOpenedByKeyBoardFlag = false;\n    let isMenuItemDataCollectedFlag = false;\n\n    //#endregion\n\n    //#region Menu control context\n\n    //provide menuContext for child use\n    const thisMenuContext : SubMenuParentContext = {\n      zIndex: zIndex + 1,\n      container: parentContext.container,\n      adjustPadding: options.adjustPadding as { x: number, y: number } || MenuConstOptions.defaultAdjustPadding,\n      getParentWidth: () => menu.value?.offsetWidth || 0,\n      getParentHeight: () => menu.value?.offsetHeight || 0,\n      getParentX: () => position.value.x,\n      getParentY: () => position.value.y,\n      getParentAbsX: () => menu.value ? getLeft(menu.value, parentContext.container) : 0,\n      getParentAbsY: () => menu.value ? getTop(menu.value, parentContext.container) : 0,\n      getPositon: () => [0,0],\n      addOpenedSubMenu(closeFn: () => void) {\n        openedSubMenuClose.push(closeFn);\n      },\n      closeOtherSubMenu() {\n        openedSubMenuClose.forEach(k => k());\n        openedSubMenuClose.splice(0, openedSubMenuClose.length);\n        globalSetCurrentSubMenu(thisMenuInsContext);\n      },\n      checkCloseOtherSubMenuTimeOut() {\n        if (leaveTimeout) {\n          clearTimeout(leaveTimeout);\n          leaveTimeout = 0;\n          return true;\n        }\n        return false;\n      },\n      closeOtherSubMenuWithTimeOut() {\n        leaveTimeout = setTimeout(() => {\n          leaveTimeout = 0;\n          this.closeOtherSubMenu();\n        }, 200) as unknown as number; //Add a delay, the user will not hide the menu when moving too fast\n      },\n      addChildMenuItem: (item: MenuItemContext, index?: number) => {\n        if (index === undefined)\n          menuItems.push(item);\n        else\n          menuItems.splice(index, 0, item);\n      },\n      removeChildMenuItem: (item: MenuItemContext) => {\n        menuItems.splice(menuItems.indexOf(item), 1);\n      },\n      markActiveMenuItem: (item: MenuItemContext, updateState = false) => {\n        blurCurrentMenu();\n        currentItem = item;\n        if (updateState)\n          setAndFocusCurrentMenu();\n      },\n      markThisOpenedByKeyBoard: () => {\n        isOpenedByKeyBoardFlag = true;\n      },\n      isOpenedByKeyBoardFlag: () => {\n        if (isOpenedByKeyBoardFlag) {\n          isOpenedByKeyBoardFlag = false;\n          return true;\n        }\n        return false;\n      },\n      isMenuItemDataCollectedFlag: () => isMenuItemDataCollectedFlag,\n      getElement: () => menu.value || null,\n      getParentContext: () => parentContext,\n      getSubMenuInstanceContext: () => thisMenuInsContext,\n    };\n    provide('menuContext', thisMenuContext);\n\n    //#endregion\n\n    const scrollValue = ref(0);\n    const scrollHeight = ref(0);\n\n    //Scroll the items\n    function onScroll(down : boolean) {\n      if (down)\n        scrollValue.value = Math.max(scrollValue.value - 50, -scrollHeight.value);\n      else \n        scrollValue.value = Math.min(scrollValue.value + 50, 0);\n    }\n\n    const overflow = ref(false);\n    const position = ref({ x: 0, y: 0 } as ContextMenuPositionData)\n    const maxHeight = ref(0);\n\n    onMounted(() => {\n      const pos = parentContext.getPositon();\n      position.value = {\n        x: pos[0] ?? options.xOffset ?? 0,\n        y: pos[1] ?? options.yOffset ?? 0,\n      };\n\n      //Mark current item submenu is open\n      globalSetCurrentSubMenu(thisMenuInsContext);\n\n      nextTick(() => {\n        const menuEl = menu.value;\n\n        //adjust submenu position\n        if (menuEl && scroll.value) {\n\n          const { container } = parentContext;\n\n          const parentWidth = getParentWidth?.() ?? 0;\n          const parentHeight = getParentHeight?.() ?? 0;\n\n          const fillPaddingX = typeof parentContext.adjustPadding === 'number' ? parentContext.adjustPadding : (parentContext.adjustPadding?.x ?? 0);\n          const fillPaddingYAlways = typeof parentContext.adjustPadding === 'number' ? parentContext.adjustPadding : (parentContext.adjustPadding?.y ?? 0);\n          const fillPaddingY = parentHeight > 0 ? fillPaddingYAlways : 0;\n\n          const windowHeight = document.documentElement.scrollHeight;\n          const windowWidth = document.documentElement.scrollWidth;\n\n          const avliableWidth = Math.min(windowWidth, container.offsetWidth);\n          const avliableHeight = Math.min(windowHeight, container.offsetHeight);\n\n          let absX = getLeft(menuEl, container), \n            absY = getTop(menuEl, container);\n          \n          //set x positon\n          if (props.direction.includes('l')) {\n            position.value.x -= menuEl.offsetWidth + fillPaddingX; //left\n          }\n          else if (props.direction.includes('r')) {\n            position.value.x += parentWidth + fillPaddingX; //right\n          }\n          else {\n            position.value.x += parentWidth / 2;\n            position.value.x -= (menuEl.offsetWidth + fillPaddingX) / 2; //center\n          }\n\n          //set y positon\n          if (props.direction.includes('t')) {\n            position.value.y -= menuEl.offsetHeight + fillPaddingYAlways * 2; //top\n          }\n          else if (props.direction.includes('b')) {\n            position.value.y -= fillPaddingYAlways;  //bottom\n          }\n          else {\n            position.value.y -= (menuEl.offsetHeight + fillPaddingYAlways) / 2; //center\n          }\n\n          //Overflow adjust\n          if (adjustPosition.value) {\n            nextTick(() => {\n              absX = getLeft(menuEl, container);\n              absY = getTop(menuEl, container);\n              \n              const xOverflow = (absX + menuEl.offsetWidth) - (avliableWidth);\n              const yOverflow = (absY + menuEl.offsetHeight) - (avliableHeight);\n\n              scrollHeight.value = menuEl.offsetHeight - avliableHeight - fillPaddingY * 2 /* Padding */;\n              overflow.value = yOverflow > 0;\n\n              if (xOverflow > 0) {//X overflow\n                const ox = parentWidth + menuEl.offsetWidth - fillPaddingX; \n                const maxSubWidth = absX;\n                if (ox > maxSubWidth)\n                  position.value.x -= maxSubWidth;\n                else\n                  position.value.x -= ox;\n              }\n\n              if (overflow.value) { //Y overflow\n                const oy = yOverflow;\n                const maxSubHeight = absY;\n                if (oy > maxSubHeight)\n                  position.value.y -= maxSubHeight - fillPaddingY;\n                else\n                  position.value.y -= oy - fillPaddingY * 2;\n                maxHeight.value = (avliableHeight - fillPaddingY * 2);\n              } else {\n                maxHeight.value = 0;\n              }\n            });\n          }\n        }\n\n        //Focus this submenu\n        menuEl?.focus({\n          preventScroll: true\n        });\n\n        //Is this submenu opened by keyboard? If yes then select first item\n        if (parentContext.isOpenedByKeyBoardFlag())\n          setAndFocusNotDisableItem(true);\n\n        isMenuItemDataCollectedFlag = true;\n      });\n    });\n\n    return {\n      menu,\n      scroll,\n      options,\n      zIndex,\n      constOptions: MenuConstOptions,\n      scrollValue,\n      overflow,\n      position,\n      scrollHeight,\n      maxHeight,\n      globalHasSlot,\n      globalRenderSlot,\n      globalTheme,\n      onScroll,\n      onSubMenuBodyClick,\n      solveNumberOrStringSize,\n    }\n  }\n})\n</script>\n\n<style lang=\"scss\">\n@import \"./ContextMenu.scss\";\n</style>","<script lang=\"ts\">\nimport { defineComponent, h, onBeforeUnmount, onMounted, PropType, provide, ref, renderSlot, toRefs, VNode, watch } from 'vue'\nimport { MenuConstOptions, MenuItem, MenuOptions, MenuPopDirection } from './ContextMenuDefine'\nimport { addOpenedContextMenu, removeOpenedContextMenu } from './ContextMenuMutex';\nimport ContextSubMenuConstructor, { SubMenuContext, SubMenuParentContext } from './ContextSubMenu.vue';\n\nexport type GlobalHasSlot = (name: string) => boolean;\nexport type GlobalRenderSlot = (name: string, params: Record<string, unknown>) => VNode;\n\n/**\n * Context menu component\n */\nexport default defineComponent({\n  name: 'ContextMenu',\n  emits: [ 'update:show', 'close' ],\n  props: {\n    /**\n     * Menu options\n     */\n    options: {\n      type: Object as PropType<MenuOptions>,\n      default: null\n    },\n    /**\n     * Show menu?\n     */\n    show: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Current container, For calculation only\n     */\n    container: {\n      type: Object as PropType<HTMLElement>,\n      default: null\n    },\n    /**\n     * Make sure is user set the custom container.\n     */\n    isFullScreenContainer: {\n      type: Boolean,\n      default: true\n    },\n  },\n  setup(props, ctx) {\n    const {\n      options,\n      show,\n      container,\n    } = toRefs(props);\n\n    onMounted(() => {\n      if (show)\n        openMenu();\n    })\n    onBeforeUnmount(() => {\n      removeBodyEvents();\n    });\n\n    watch(show, (v: boolean) => {\n      if(v) {\n        openMenu();\n      } else {\n        removeBodyEvents();\n      }\n    });\n\n    const instance = { closeMenu };\n    \n    function openMenu() {\n      installBodyEvents();\n      addOpenedContextMenu(instance);\n    }\n    function closeMenu(fromItem?: MenuItem|undefined) {\n      ctx.emit(\"update:show\", false);\n      ctx.emit(\"close\", fromItem);\n      \n      removeOpenedContextMenu(instance);\n    }\n\n    //Expose instance function\n    ctx.expose({\n      closeMenu: closeMenu,\n    });\n\n    function installBodyEvents() {\n      setTimeout(() => {\n        document.addEventListener(\"click\", onBodyClick, true);\n        document.addEventListener(\"contextmenu\", onBodyClick, true);\n        document.addEventListener(\"scroll\", onBodyScroll, true);\n        if (!props.isFullScreenContainer && container.value)\n          container.value.addEventListener(\"scroll\", onBodyScroll, true);\n        if (options.value.keyboardControl !== false)\n          document.addEventListener('keydown', onMenuKeyDown);\n      }, 50);\n    }\n    function removeBodyEvents() {\n      document.removeEventListener(\"contextmenu\", onBodyClick, true);\n      document.removeEventListener(\"click\", onBodyClick, true);\n      document.removeEventListener(\"scroll\", onBodyScroll, true);\n      if (!props.isFullScreenContainer && container.value)\n        container.value.removeEventListener(\"scroll\", onBodyScroll, true);\n      if (options.value.keyboardControl !== false)\n        document.removeEventListener('keydown', onMenuKeyDown);\n    }\n\n    //For keyboard event, remember which submenu is active\n    const currentOpenedMenu = ref<SubMenuContext|null>();\n    provide('globalSetCurrentSubMenu', (menu: SubMenuContext|null) => currentOpenedMenu.value = menu);\n\n    function onMenuKeyDown(e: KeyboardEvent) {\n      let handled = true;\n      //Handle keyboard event\n      switch(e.key) {\n        case \"Escape\": {\n          if (currentOpenedMenu.value?.isTopLevel() === false) {\n            currentOpenedMenu.value?.closeCurrentSubMenu();\n          } else {\n            closeMenu();\n          }\n          break;\n        }\n        case \"ArrowDown\":\n          currentOpenedMenu.value?.moveCurrentItemDown();\n          break;\n        case \"ArrowUp\":\n          currentOpenedMenu.value?.moveCurrentItemUp();\n          break;\n        case \"Home\":\n          currentOpenedMenu.value?.moveCurrentItemFirst();\n          break;\n        case \"End\":\n          currentOpenedMenu.value?.moveCurrentItemLast();\n          break;\n        case \"ArrowLeft\": {\n          if (!currentOpenedMenu.value?.closeSelfAndActiveParent())\n            options.value.onKeyFocusMoveLeft?.();\n          break;\n        }\n        case \"ArrowRight\":\n          if (!currentOpenedMenu.value?.openCurrentItemSubMenu())\n            options.value.onKeyFocusMoveRight?.();\n          break;\n        case \"Enter\":\n          currentOpenedMenu.value?.triggerCurrentItemClick(e);\n          break;\n        default:\n          handled = false;\n          break;\n      }\n      if (handled && currentOpenedMenu.value) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n    function onBodyScroll() {\n      //close when docunment scroll\n      if (options.value.closeWhenScroll !== false)\n        closeMenu();\n    }\n    function onBodyClick(e: MouseEvent) {\n      checkTargetAndClose(e.target as HTMLElement);\n    }\n    function checkTargetAndClose(target: HTMLElement) {\n      //Loop target , Check whether the currently clicked element belongs to the current menu.\n      // If yes, it will not be closed\n      while (target) {\n        if (target.classList && target.classList.contains('mx-menu-host'))\n          return;\n        target = target.parentNode as HTMLElement;\n      }\n      \n      //Close menu\n      removeBodyEvents();\n      closeMenu();\n    }\n    \n    //provide globalOptions for child use\n    provide('globalOptions', options.value);\n    provide('globalCloseMenu', closeMenu);\n    provide('globalTheme', options.value?.theme || 'light');\n    provide('globalIsFullScreenContainer', props.isFullScreenContainer);\n    provide('globalClickCloseClassName', options.value?.clickCloseClassName);\n    provide('globalIgnoreClickClassName', options.value?.ignoreClickClassName);\n    provide('globalIconFontClass', options.value?.iconFontClass || 'iconfont');\n    //check slot exists\n    provide('globalHasSlot', (name: string) => {\n      return ctx.slots[name] !== undefined;\n    });\n    //render slot\n    provide('globalRenderSlot', (name: string, params: Record<string, unknown>) => {\n      return renderSlot(ctx.slots, name, { ...params }, () => [ h('span', 'Render slot failed') ], false);\n    });\n    //provide menuContext for child use\n    provide('menuContext', {\n      zIndex: options.value.zIndex || MenuConstOptions.defaultZindex,\n      container: container.value as unknown as HTMLElement,\n      adjustPadding: { x: 0, y: 0 },\n      getParentAbsY: () => options.value.x,\n      getParentAbsX: () => options.value.y,\n      getParentX: () => 0,\n      getParentY: () => 0,\n      getParentWidth: () => 0, \n      getParentHeight: () => 0, \n      getPositon: () => [options.value.x,options.value.y],\n      closeOtherSubMenuWithTimeOut: () => {/* Do nothing */}, \n      checkCloseOtherSubMenuTimeOut: () => false, \n      addOpenedSubMenu: () => {/* Do nothing */},\n      closeOtherSubMenu: () => {/* Do nothing */},\n      getParentContext: () => null,\n      getSubMenuInstanceContext: () => null,\n      getElement: () => null,\n      addChildMenuItem: () => {/* Do nothing */},\n      removeChildMenuItem: () => {/* Do nothing */},\n      markActiveMenuItem: () => {/* Do nothing */},\n      markThisOpenedByKeyBoard: () => {/* Do nothing */},\n      isOpenedByKeyBoardFlag: () => false,\n      isMenuItemDataCollectedFlag: () => false,\n    } as SubMenuParentContext);\n\n    return () => {\n      //Hidden\n      if (!show.value)\n        return [];\n\n      //Create SubMenu\n      return [\n        h('div', {\n          class: 'mx-menu-ghost-host', \n        }, [\n          h(ContextSubMenuConstructor, {\n            class: 'mx-menu-host',\n            items: options.value?.items,\n            adjustPosition: options.value?.adjustPosition,\n            maxWidth: options.value.maxWidth || MenuConstOptions.defaultMaxWidth,\n            minWidth: options.value.minWidth || MenuConstOptions.defaultMinWidth,\n            direction: options.value.direction || MenuConstOptions.defaultDirection as MenuPopDirection,\n          }, {\n            default: ctx.slots.default,\n          })\n        ])\n      ];\n    }\n  },\n})\n</script>\n\n<style>\n.mx-menu-ghost-host {\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  top: 0;\n  overflow: hidden;\n  pointer-events: none;\n}\n.mx-menu-ghost-host.fullscreen {\n  position: fixed;\n}\n</style>\n","<script lang=\"ts\">\nimport { defineComponent, h, PropType, Teleport, toRefs, VNode } from 'vue'\nimport { MenuOptions } from './ContextMenuDefine'\nimport { genContainer } from \"./ContextMenuUtils\";\nimport ContextSubMenuWrapperConstructor from './ContextSubMenuWrapper.vue'\n\nexport type GlobalHasSlot = (name: string) => boolean;\nexport type GlobalRenderSlot = (name: string, params: Record<string, unknown>) => VNode;\n\n/**\n * Context menu component\n */\nexport default defineComponent({\n  name: 'ContextMenu',\n  emits: [ 'update:show', 'close' ],\n  props: {\n    /**\n     * Menu options\n     */\n    options: {\n      type: Object as PropType<MenuOptions>,\n      default: null\n    },\n    /**\n     * Show menu?\n     */\n    show: {\n      type: Boolean,\n      default: false\n    },\n  },\n  setup(props, ctx) {\n\n    const {\n      options,\n      show,\n    } = toRefs(props);\n\n    ctx.expose({\n      closeMenu: () => ctx.emit('update:show', false),\n    });\n\n    return () => {  \n      const { isNew, container, eleId } = genContainer(options.value);\n      const vnode = show.value ? [ h(ContextSubMenuWrapperConstructor as unknown as string, { \n        options: options,\n        show: true,\n        container: container,\n        isFullScreenContainer: !isNew,\n        'onUpdate:show': (v: boolean) => ctx.emit('update:show', v),\n        onClose: (fromItem: undefined) => {\n          ctx.emit('update:show', false);\n          ctx.emit('close');\n          options.value.onClose?.(fromItem);\n        },\n      }, ctx.slots) ] : [];\n      \n      return [\n        h(\n          Teleport,\n          { to: `#${eleId}` },\n          vnode\n        )\n      ];\n    }\n  },\n})\n</script>\n","<script lang=\"ts\">\nimport { defineComponent, h, inject, toRefs, PropType, SVGAttributes } from 'vue'\nimport ContextSubMenuConstructor from './ContextSubMenu.vue';\nimport ContextMenuItemConstructor from './ContextMenuItem.vue';\nimport { MenuOptions } from './ContextMenuDefine';\n\nexport default defineComponent({\n  name: 'ContextMenuGroup',\n  props: {\n     /**\n     * Is this menu disabled? \n     */\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n     /**\n     * Is this menu hidden? \n     */\n    hidden: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Is this menu disabled? \n     */\n    clickHandler: {\n      type: Function as PropType<() => void>,\n      default: null\n    },\n    /**\n     * Menu label\n     */\n    label: {\n      type: String,\n      default: ''\n    },\n    /**\n     * Menu icon (for icon class)\n     */\n    icon: {\n      type: String,\n      default: ''\n    },\n    /**\n     * Custom icon library font class name.\n     * \n     * Only for css font icon, If you use the svg icon, you do not need to use this.\n     */\n    iconFontClass: {\n      type: String,\n      default: 'iconfont'\n    },\n    /**\n     * Is this menu item checked?\n     * \n     * The check mark are displayed on the left side of the icon, so it is not recommended to display the icon at the same time.\n     */\n     checked: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Shortcut key text display on the right.\n     * \n     * The shortcut keys here are only for display. You need to handle the key events by yourself.\n     */\n    shortcut: {\n      type: String,\n      default: ''\n    },\n    /**\n     * Display icons use svg symbol (`<use xlink:href=\"#icon-symbol-name\">`) ， only valid when icon attribute is empty.\n     */\n    svgIcon: {\n      type: String,\n      default: ''\n    },\n    /**\n     * The user-defined attribute of the svg tag, which is valid when using `svgIcon`.\n     */\n    svgProps: {\n      type: Object as PropType<SVGAttributes>,\n      default: null\n    },\n    /**\n     * Should a fixed-width icon area be reserved for menu items without icon. (this item)\n     * \n     * Default is true .\n     * \n     * The width of icon area can be override with css var `--mx-menu-placeholder-width`.\n     */\n    preserveIconWidth: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Show right arrow on this menu?\n     */\n    showRightArrow: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Should close menu when Click this menu item ?\n     */\n    clickClose: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * By default, the submenu will automatically adjust its position to prevent it overflow the container.\n     * \n     * If you allow menu overflow containers, you can set this to false.\n     * \n     * Default is inherit from `MenuOptions.adjustPosition`  .\n     */\n    adjustSubMenuPosition: {\n      type: Boolean,\n      default: undefined\n    },\n    /**\n     * Max width of submenu\n     */\n    maxWidth: {\n      type: [String, Number],\n      default: 0,\n    },\n    /**\n     * Min width of submenu\n     */\n    minWidth: {\n      type: [String, Number],\n      default: 0,\n    },\n  },\n  setup(props, ctx) {\n    \n    const options = inject('globalOptions') as MenuOptions;\n    const { adjustSubMenuPosition, maxWidth, minWidth } = toRefs(props);\n    const adjustSubMenuPositionValue = typeof adjustSubMenuPosition.value !== 'undefined' ? adjustSubMenuPosition.value : options.adjustPosition;\n\n    //Create Item\n    return () => h(ContextMenuItemConstructor, {\n      ...props,\n      showRightArrow: true,\n      maxWidth: undefined,\n      minWidth: undefined,\n      adjustSubMenuPosition: undefined,\n      hasChildren: typeof ctx.slots.default !== undefined,\n    }, ctx.slots.default ? {\n      //Create SubMenu\n      submenu: () => h(ContextSubMenuConstructor, {\n        maxWidth: maxWidth.value,\n        minWidth: minWidth.value,\n        adjustPosition: adjustSubMenuPositionValue,\n      }, {\n        default: ctx.slots.default,\n      })\n    } : undefined);\n  },\n})\n</script>","import { App, h, render, Slot } from \"vue\";\nimport { ContextMenuInstance, MenuOptions } from \"./ContextMenuDefine\";\nimport { closeContextMenu } from \"./ContextMenuMutex\";\nimport { genContainer, transformMenuPosition } from \"./ContextMenuUtils\";\nimport ContextMenuConstructor from './ContextMenu.vue'\nimport ContextSubMenuWrapperConstructor from './ContextSubMenuWrapper.vue'\nimport ContextSubMenuConstructor from './ContextSubMenu.vue'\nimport ContextMenuItemConstructor from './ContextMenuItem.vue'\nimport ContextMenuGroupConstructor from './ContextMenuGroup.vue'\nimport ContextMenuSeparatorConstructor from './ContextMenuSeparator.vue'\n\nfunction initInstance(\n  options: MenuOptions, \n  container: HTMLElement, \n  isNew: boolean, \n  customSlots?: Record<string, Slot>,\n) {\n  const vnode = h(ContextSubMenuWrapperConstructor, { \n    options: options,\n    show: true,\n    container: container,\n    isFullScreenContainer: !isNew,\n    onClose: (item: undefined) => {\n      render(null, container);\n      options.onClose?.(item);\n    },\n  }, customSlots);\n  render(vnode, container);\n  return vnode.component;\n}\n\n//Show global contextmenu\nfunction $contextmenu(options : MenuOptions, customSlots?: Record<string, Slot>) {\n  const container = genContainer(options);\n  const component = initInstance(options, container.container, container.isNew, customSlots);\n  return (component as unknown as Record<string, unknown>).exposed as ContextMenuInstance;\n}\n\nexport default {\n  /**\n   * For Vue install\n   * @param app \n   */\n  install(app: App<Element>) : void {\n    app.config.globalProperties.$contextmenu = $contextmenu;\n    app.component('ContextMenu', ContextMenuConstructor);\n    app.component('ContextMenuItem', ContextMenuItemConstructor);\n    app.component('ContextMenuGroup', ContextMenuGroupConstructor);\n    app.component('ContextMenuSperator', ContextMenuSeparatorConstructor);\n    app.component('ContextMenuSeparator', ContextMenuSeparatorConstructor);\n    app.component('ContextSubMenu', ContextSubMenuConstructor);\n  },\n  /**\n   * Show a ContextMenu in page, same as `this.$contextmenu`\n   * @param options The options of ContextMenu\n   * @param customSlots You can provide some custom slots to customize the rendering style of the menu. These slots are the same as the slots of component ContextMenu.\n   * @returns Menu instance \n   */\n  showContextMenu(options : MenuOptions, customSlots?: Record<string, Slot>) : ContextMenuInstance {\n    return $contextmenu(options, customSlots);\n  },\n  //Close the currently open menu\n  closeContextMenu,\n  //Tools\n  transformMenuPosition,\n}\n\n","<template>\n  <svg class=\"mx-menu-bar-icon-menu\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"200\"><path d=\"M133.310936 296.552327l757.206115 0c19.781623 0 35.950949-16.169326 35.950949-35.950949 0-19.781623-15.997312-35.950949-35.950949-35.950949L133.310936 224.650428c-19.781623 0-35.950949 16.169326-35.950949 35.950949C97.359987 280.383 113.529313 296.552327 133.310936 296.552327z\"></path><path d=\"M890.51705 476.135058 133.310936 476.135058c-19.781623 0-35.950949 16.169326-35.950949 35.950949 0 19.781623 16.169326 35.950949 35.950949 35.950949l757.206115 0c19.781623 0 35.950949-16.169326 35.950949-35.950949C926.467999 492.304384 910.298673 476.135058 890.51705 476.135058z\"></path><path d=\"M890.51705 727.447673 133.310936 727.447673c-19.781623 0-35.950949 15.997312-35.950949 35.950949s16.169326 35.950949 35.950949 35.950949l757.206115 0c19.781623 0 35.950949-15.997312 35.950949-35.950949S910.298673 727.447673 890.51705 727.447673z\"></path></svg>\n</template>","<template>\n  <div \n    :class=\"[ \n      'mx-menu-bar',\n      options.theme ?? '',\n      options.mini ? 'mini' : '',\n    ]\"\n    @focus=\"onFocus\"\n    @blur=\"onBlur\"\n  >\n    <slot name=\"prefix\" />\n    \n    <div \n      v-if=\"options.mini\"\n      ref=\"menuBarContent\"\n      class=\"mx-menu-bar-content\"\n    >\n      <div \n        class=\"mx-menu-bar-item\"\n        @click=\"onItemClick(0, null)\"\n      >\n        <MenuBarIconMenu />\n      </div>\n    </div>\n    <div \n      v-else\n      ref=\"menuBarContent\"\n      class=\"mx-menu-bar-content\"\n    >\n      <div \n        v-for=\"(item, key) in menuItems\" \n        :key=\"key\"\n        :class=\"[\n          'mx-menu-bar-item',\n          item == menuActive ? 'active' : '',\n        ]\"\n        @click=\"onItemClick(key, item)\"\n        @mouseenter=\"onItemEnter(key, item)\"\n      >\n        {{ item.label }}\n      </div>\n    </div>\n    <slot name=\"suffix\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, PropType, defineComponent, onMounted, watch } from 'vue';\nimport { MenuBarOptions } from './MenuBar';\nimport { ContextMenuInstance, MenuItem } from './ContextMenuDefine';\nimport { getTop, getLeft } from './ContextMenuUtils';\nimport ContextMenu from './ContextMenuInstance';\nimport MenuBarIconMenu from './MenuBarIconMenu.vue';\n\n/**\n * Menu bar component\n */\nexport default defineComponent({\n  name: 'MenuBar',\n  emits: [],\n  props: {\n    /**\n     * Menu options\n     */\n    options: {\n      type: Object as PropType<MenuBarOptions>,\n      default: null\n    },\n  },\n  components: {\n    MenuBarIconMenu,\n  },\n  setup(props) {\n    const menuBarContent = ref<HTMLDivElement>();\n    const menuBarActive = ref(false);\n    const menuItems = ref<MenuItem[]>([]);\n    const menuActive = ref<MenuItem|null>(null);\n\n    function onFocus() {\n      menuBarActive.value = true;\n    }\n    function onBlur() {\n      menuBarActive.value = false;\n    }\n\n    onMounted(() => {\n      menuItems.value = props.options.items || [];\n    });\n    watch(() => props.options, () => {\n      menuItems.value = props.options.items || [];\n    });\n\n    let currentMenu : ContextMenuInstance|null = null;\n    let currentMenuIndex = -1;\n\n    function showNextSubMenu() {\n      if (currentMenuIndex < menuItems.value.length - 1)\n        currentMenuIndex++;\n      else \n        currentMenuIndex = 0;\n      showSubMenu(currentMenuIndex, menuItems.value[currentMenuIndex]);\n    }\n    function showPrevSubMenu() {\n      if (currentMenuIndex > 0)\n        currentMenuIndex--;\n      else \n        currentMenuIndex = menuItems.value.length - 1;\n      showSubMenu(currentMenuIndex, menuItems.value[currentMenuIndex]);\n    }\n    function showSubMenu(index: number, item: MenuItem) {\n      currentMenuIndex = index;\n      if (!item.children)\n        return;\n      if (currentMenu) {\n        currentMenu.closeMenu();\n        currentMenu = null;\n        menuBarActive.value = true;\n      }\n      menuActive.value = item;\n      const ele = menuBarContent.value?.children[index] as HTMLElement;\n      if (ele) {\n        currentMenu = ContextMenu.showContextMenu({\n          ...props.options,\n          items: item.children,\n          x: getLeft(ele),\n          y: getTop(ele) + ele.offsetHeight,\n          onKeyFocusMoveLeft() {\n            showPrevSubMenu();\n          },\n          onKeyFocusMoveRight() {\n            showNextSubMenu();\n          },\n          onClose() {\n            if (menuActive.value == item) {\n              menuBarActive.value = false;\n              menuActive.value = null;\n            }\n          },\n        });\n      }\n    }\n    function showAllSubMenu() {\n      currentMenuIndex = 0;\n      const ele = menuBarContent.value as HTMLElement;\n      if (ele) {\n        currentMenu = ContextMenu.showContextMenu({\n          ...props.options,\n          x: getLeft(ele),\n          y: getTop(ele) + ele.offsetHeight,\n        });\n      }\n    }\n\n    function onItemClick(index: number, item: MenuItem|null) {\n      if (item) {\n        menuBarActive.value = true;\n        showSubMenu(index, item);\n        if (\n          item.onClick && (\n          (item.clickableWhenHasChildren === true && item.children && item.children.length > 0)\n          || !item.children || item.children.length === 0)\n        )\n          item.onClick();\n      } else {\n        showAllSubMenu();\n      }\n    }\n    function onItemEnter(index: number, item: MenuItem) {\n      if (menuBarActive.value) {\n        showSubMenu(index, item);\n      }\n    }\n\n    return {\n      menuItems,\n      menuActive,\n      menuBarContent,\n      menuBarActive,\n      onFocus,\n      onBlur,\n      onItemClick,\n      onItemEnter,\n    };\n  }\n});\n\n</script>\n\n<style lang=\"scss\">\n@import './MenuBar.scss';\n</style>"],"names":["currentOpenedContextMenu","addOpenedContextMenu","inst","closeContextMenu","removeOpenedContextMenu","MenuConstOptions","getTop","stopNode","offset","getLeft","transformMenuPosition","offsetX","offsetY","container","DEFAULT_CONTAINER_ID","GEN_CONTAINER_ID","containerId","genContainer","options","getContainer","zIndex","container2","eleId","solveNumberOrStringSize","value","VNodeRender","defineComponent","props","vnode","data","toRefs","_createElementVNode","_sfc_main$7","ContextMenuIconRight","context","clickHandler","clickClose","clickableWhenHasChildren","disabled","hidden","label","icon","showRightArrow","shortcut","hasChildren","showSubMenu","ref","keyBoardFocusMenu","menuItemRef","globalHasSlot","inject","globalTheme","globalClickCloseClassName","globalIgnoreClickClassName","globalCloseMenu","menuContext","menuItemInstance","onMouseEnter","onClick","nextTick","index","parentEl","indexCounting","i","el","e","currentTarget","iconFontClass","_hoisted_1","_hoisted_4","_component_ContextMenuIconRight","_resolveComponent","_ctx","_openBlock","_createElementBlock","_createCommentVNode","_createBlock","_component_VNodeRender","_Fragment","_normalizeClass","_cache","args","_hoisted_2","_mergeProps","_hoisted_3","_renderSlot","_hoisted_5","_sfc_main$6","globalRenderSlot","_sfc_main$5","ContextMenuItem","ContextMenuSeparator","parentContext","getParentWidth","getParentHeight","adjustPosition","menu","scroll","openedSubMenuClose","menuItems","currentItem","leaveTimeout","blurCurrentMenu","setAndFocusNotDisableItem","isDown","startIndex","setAndFocusCurrentMenu","overflow","element","scrollValue","scrollHeight","maxHeight","onSubMenuBodyClick","globalSetCurrentSubMenu","thisMenuInsContext","parent","thisMenuContext","conext","_a","isMenuItemDataCollectedFlag","position","closeFn","k","item","updateState","isOpenedByKeyBoardFlag","onScroll","down","onMounted","_b","_c","_d","pos","_a2","_b2","_d2","_e","_f","menuEl","parentWidth","parentHeight","fillPaddingX","_c2","fillPaddingYAlways","fillPaddingY","windowHeight","windowWidth","avliableWidth","avliableHeight","absX","absY","xOverflow","yOverflow","ox","maxSubWidth","oy","maxSubHeight","_normalizeStyle","_renderList","_component_ContextMenuSeparator","_createVNode","_component_ContextMenuItem","_createSlots","_withCtx","_component_ContextSubMenu","_withDirectives","$event","_sfc_main$4","ctx","show","openMenu","removeBodyEvents","v","instance","closeMenu","installBodyEvents","fromItem","onBodyClick","onBodyScroll","onMenuKeyDown","currentOpenedMenu","_g","_h","_i","_j","_k","_l","_m","handled","checkTargetAndClose","target","provide","name","params","renderSlot","h","ContextSubMenuConstructor","_sfc_main$3","isNew","Teleport","_sfc_main$2","adjustSubMenuPosition","maxWidth","minWidth","adjustSubMenuPositionValue","initInstance","customSlots","ContextSubMenuWrapperConstructor","render","$contextmenu","Inst","exports","app","ContextMenuConstructor","ContextMenuItemConstructor","ContextMenuGroupConstructor","ContextMenuSeparatorConstructor","_sfc_main","menuBarContent","menuBarActive","menuActive","onFocus","onBlur","currentMenu","currentMenuIndex","ele","ContextMenu","showPrevSubMenu","showNextSubMenu","showAllSubMenu","onItemClick","onItemEnter","key","_toDisplayString"],"mappings":"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"}