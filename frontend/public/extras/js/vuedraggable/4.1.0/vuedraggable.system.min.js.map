{"version":3,"file":"index.system.min.js","sources":["../src/util/htmlHelper.js","../src/util/console.js","../src/util/string.js","../src/core/sortableEvents.js","../src/util/tags.js","../src/core/componentBuilderHelper.js","../src/core/componentStructure.js","../src/core/renderHelper.js","../src/vuedraggable.js"],"sourcesContent":["function removeNode(node) {\n  if (node.parentElement !== null) {\n    node.parentElement.removeChild(node);\n  }\n}\n\nfunction insertNodeAt(fatherNode, node, position) {\n  const refNode =\n    position === 0\n      ? fatherNode.children[0]\n      : fatherNode.children[position - 1].nextSibling;\n  fatherNode.insertBefore(node, refNode);\n}\n\nexport { insertNodeAt, removeNode };\n","function getConsole() {\n  if (typeof window !== \"undefined\") {\n    return window.console;\n  }\n  return global.console;\n}\nconst console = getConsole();\n\nexport { console };\n","function cached(fn) {\n  const cache = Object.create(null);\n  return function cachedFn(str) {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n}\n\nconst regex = /-(\\w)/g;\nconst camelize = cached(str => str.replace(regex, (_, c) => c.toUpperCase()));\n\nexport { camelize };\n","const manageAndEmit = [\"Start\", \"Add\", \"Remove\", \"Update\", \"End\"];\nconst emit = [\"Choose\", \"Unchoose\", \"Sort\", \"Filter\", \"Clone\"];\nconst manage = [\"Move\"];\nconst eventHandlerNames = [manage, manageAndEmit, emit]\n  .flatMap(events => events)\n  .map(evt => `on${evt}`);\n\nconst events = {\n  manage,\n  manageAndEmit,\n  emit\n};\n\nfunction isReadOnly(eventName) {\n  return eventHandlerNames.indexOf(eventName) !== -1;\n}\n\nexport { events, isReadOnly };\n","const tags = [\n  \"a\",\n  \"abbr\",\n  \"address\",\n  \"area\",\n  \"article\",\n  \"aside\",\n  \"audio\",\n  \"b\",\n  \"base\",\n  \"bdi\",\n  \"bdo\",\n  \"blockquote\",\n  \"body\",\n  \"br\",\n  \"button\",\n  \"canvas\",\n  \"caption\",\n  \"cite\",\n  \"code\",\n  \"col\",\n  \"colgroup\",\n  \"data\",\n  \"datalist\",\n  \"dd\",\n  \"del\",\n  \"details\",\n  \"dfn\",\n  \"dialog\",\n  \"div\",\n  \"dl\",\n  \"dt\",\n  \"em\",\n  \"embed\",\n  \"fieldset\",\n  \"figcaption\",\n  \"figure\",\n  \"footer\",\n  \"form\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\",\n  \"head\",\n  \"header\",\n  \"hgroup\",\n  \"hr\",\n  \"html\",\n  \"i\",\n  \"iframe\",\n  \"img\",\n  \"input\",\n  \"ins\",\n  \"kbd\",\n  \"label\",\n  \"legend\",\n  \"li\",\n  \"link\",\n  \"main\",\n  \"map\",\n  \"mark\",\n  \"math\",\n  \"menu\",\n  \"menuitem\",\n  \"meta\",\n  \"meter\",\n  \"nav\",\n  \"noscript\",\n  \"object\",\n  \"ol\",\n  \"optgroup\",\n  \"option\",\n  \"output\",\n  \"p\",\n  \"param\",\n  \"picture\",\n  \"pre\",\n  \"progress\",\n  \"q\",\n  \"rb\",\n  \"rp\",\n  \"rt\",\n  \"rtc\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"script\",\n  \"section\",\n  \"select\",\n  \"slot\",\n  \"small\",\n  \"source\",\n  \"span\",\n  \"strong\",\n  \"style\",\n  \"sub\",\n  \"summary\",\n  \"sup\",\n  \"svg\",\n  \"table\",\n  \"tbody\",\n  \"td\",\n  \"template\",\n  \"textarea\",\n  \"tfoot\",\n  \"th\",\n  \"thead\",\n  \"time\",\n  \"title\",\n  \"tr\",\n  \"track\",\n  \"u\",\n  \"ul\",\n  \"var\",\n  \"video\",\n  \"wbr\"\n];\n\nfunction isHtmlTag(name) {\n  return tags.includes(name);\n}\n\nfunction isTransition(name) {\n  return [\"transition-group\", \"TransitionGroup\"].includes(name);\n}\n\nfunction isHtmlAttribute(value) {\n  return (\n    [\"id\", \"class\", \"role\", \"style\"].includes(value) ||\n    value.startsWith(\"data-\") ||\n    value.startsWith(\"aria-\") ||\n    value.startsWith(\"on\")\n  );\n}\n\nexport { isHtmlTag, isHtmlAttribute, isTransition };\n","import { camelize } from \"../util/string\";\nimport { events, isReadOnly } from \"./sortableEvents\";\nimport { isHtmlAttribute } from \"../util/tags\";\n\nfunction project(entries) {\n  return entries.reduce((res, [key, value]) => {\n    res[key] = value;\n    return res;\n  }, {});\n}\n\nfunction getComponentAttributes({ $attrs, componentData = {} }) {\n  const attributes = project(\n    Object.entries($attrs).filter(([key, _]) => isHtmlAttribute(key))\n  );\n  return {\n    ...attributes,\n    ...componentData\n  };\n}\n\nfunction createSortableOption({ $attrs, callBackBuilder }) {\n  const options = project(getValidSortableEntries($attrs));\n  Object.entries(callBackBuilder).forEach(([eventType, eventBuilder]) => {\n    events[eventType].forEach(event => {\n      options[`on${event}`] = eventBuilder(event);\n    });\n  });\n  const draggable = `[data-draggable]${options.draggable || \"\"}`;\n  return {\n    ...options,\n    draggable\n  };\n}\n\nfunction getValidSortableEntries(value) {\n  return Object.entries(value)\n    .filter(([key, _]) => !isHtmlAttribute(key))\n    .map(([key, value]) => [camelize(key), value])\n    .filter(([key, _]) => !isReadOnly(key));\n}\n\nexport {\n  getComponentAttributes,\n  createSortableOption,\n  getValidSortableEntries\n};\n","const getHtmlElementFromNode = ({ el }) => el;\nconst addContext = (domElement, context) =>\n  (domElement.__draggable_context = context);\nconst getContext = domElement => domElement.__draggable_context;\n\nclass ComponentStructure {\n  constructor({\n    nodes: { header, default: defaultNodes, footer },\n    root,\n    realList\n  }) {\n    this.defaultNodes = defaultNodes;\n    this.children = [...header, ...defaultNodes, ...footer];\n    this.externalComponent = root.externalComponent;\n    this.rootTransition = root.transition;\n    this.tag = root.tag;\n    this.realList = realList;\n  }\n\n  get _isRootComponent() {\n    return this.externalComponent || this.rootTransition;\n  }\n\n  render(h, attributes) {\n    const { tag, children, _isRootComponent } = this;\n    const option = !_isRootComponent ? children : { default: () => children };\n    return h(tag, attributes, option);\n  }\n\n  updated() {\n    const { defaultNodes, realList } = this;\n    defaultNodes.forEach((node, index) => {\n      addContext(getHtmlElementFromNode(node), {\n        element: realList[index],\n        index\n      });\n    });\n  }\n\n  getUnderlyingVm(domElement) {\n    return getContext(domElement);\n  }\n\n  getVmIndexFromDomIndex(domIndex, element) {\n    const { defaultNodes } = this;\n    const { length } = defaultNodes;\n    const domChildren = element.children;\n    const domElement = domChildren.item(domIndex);\n\n    if (domElement === null) {\n      return length;\n    }\n    const context = getContext(domElement);\n    if (context) {\n      return context.index;\n    }\n\n    if (length === 0) {\n      return 0;\n    }\n    const firstDomListElement = getHtmlElementFromNode(defaultNodes[0]);\n    const indexFirstDomListElement = [...domChildren].findIndex(\n      element => element === firstDomListElement\n    );\n    return domIndex < indexFirstDomListElement ? 0 : length;\n  }\n}\n\nexport { ComponentStructure };\n","import { ComponentStructure } from \"./componentStructure\";\nimport { isHtmlTag, isTransition } from \"../util/tags\";\nimport { resolveComponent, TransitionGroup } from \"vue\";\n\nfunction getSlot(slots, key) {\n  const slotValue = slots[key];\n  return slotValue ? slotValue() : [];\n}\n\nfunction computeNodes({ $slots, realList, getKey }) {\n  const normalizedList = realList || [];\n  const [header, footer] = [\"header\", \"footer\"].map(name =>\n    getSlot($slots, name)\n  );\n  const { item } = $slots;\n  if (!item) {\n    throw new Error(\"draggable element must have an item slot\");\n  }\n  const defaultNodes = normalizedList.flatMap((element, index) =>\n    item({ element, index }).map(node => {\n      node.key = getKey(element);\n      node.props = { ...(node.props || {}), \"data-draggable\": true };\n      return node;\n    })\n  );\n  if (defaultNodes.length !== normalizedList.length) {\n    throw new Error(\"Item slot must have only one child\");\n  }\n  return {\n    header,\n    footer,\n    default: defaultNodes\n  };\n}\n\nfunction getRootInformation(tag) {\n  const transition = isTransition(tag);\n  const externalComponent = !isHtmlTag(tag) && !transition;\n  return {\n    transition,\n    externalComponent,\n    tag: externalComponent\n      ? resolveComponent(tag)\n      : transition\n      ? TransitionGroup\n      : tag\n  };\n}\n\nfunction computeComponentStructure({ $slots, tag, realList, getKey }) {\n  const nodes = computeNodes({ $slots, realList, getKey });\n  const root = getRootInformation(tag);\n  return new ComponentStructure({ nodes, root, realList });\n}\n\nexport { computeComponentStructure };\n","import Sortable from \"sortablejs\";\nimport { insertNodeAt, removeNode } from \"./util/htmlHelper\";\nimport { console } from \"./util/console\";\nimport {\n  getComponentAttributes,\n  createSortableOption,\n  getValidSortableEntries\n} from \"./core/componentBuilderHelper\";\nimport { computeComponentStructure } from \"./core/renderHelper\";\nimport { events } from \"./core/sortableEvents\";\nimport { h, defineComponent, nextTick } from \"vue\";\n\nfunction emit(evtName, evtData) {\n  nextTick(() => this.$emit(evtName.toLowerCase(), evtData));\n}\n\nfunction manage(evtName) {\n  return (evtData, originalElement) => {\n    if (this.realList !== null) {\n      return this[`onDrag${evtName}`](evtData, originalElement);\n    }\n  };\n}\n\nfunction manageAndEmit(evtName) {\n  const delegateCallBack = manage.call(this, evtName);\n  return (evtData, originalElement) => {\n    delegateCallBack.call(this, evtData, originalElement);\n    emit.call(this, evtName, evtData);\n  };\n}\n\nlet draggingElement = null;\n\nconst props = {\n  list: {\n    type: Array,\n    required: false,\n    default: null\n  },\n  modelValue: {\n    type: Array,\n    required: false,\n    default: null\n  },\n  itemKey: {\n    type: [String, Function],\n    required: true\n  },\n  clone: {\n    type: Function,\n    default: original => {\n      return original;\n    }\n  },\n  tag: {\n    type: String,\n    default: \"div\"\n  },\n  move: {\n    type: Function,\n    default: null\n  },\n  componentData: {\n    type: Object,\n    required: false,\n    default: null\n  }\n};\n\nconst emits = [\n  \"update:modelValue\",\n  \"change\",\n  ...[...events.manageAndEmit, ...events.emit].map(evt => evt.toLowerCase())\n];\n\nconst draggableComponent = defineComponent({\n  name: \"draggable\",\n\n  inheritAttrs: false,\n\n  props,\n\n  emits,\n\n  data() {\n    return {\n      error: false\n    };\n  },\n\n  render() {\n    try {\n      this.error = false;\n      const { $slots, $attrs, tag, componentData, realList, getKey } = this;\n      const componentStructure = computeComponentStructure({\n        $slots,\n        tag,\n        realList,\n        getKey\n      });\n      this.componentStructure = componentStructure;\n      const attributes = getComponentAttributes({ $attrs, componentData });\n      return componentStructure.render(h, attributes);\n    } catch (err) {\n      this.error = true;\n      return h(\"pre\", { style: { color: \"red\" } }, err.stack);\n    }\n  },\n\n  created() {\n    if (this.list !== null && this.modelValue !== null) {\n      console.error(\n        \"modelValue and list props are mutually exclusive! Please set one or another.\"\n      );\n    }\n  },\n\n  mounted() {\n    if (this.error) {\n      return;\n    }\n\n    const { $attrs, $el, componentStructure } = this;\n    componentStructure.updated();\n\n    const sortableOptions = createSortableOption({\n      $attrs,\n      callBackBuilder: {\n        manageAndEmit: event => manageAndEmit.call(this, event),\n        emit: event => emit.bind(this, event),\n        manage: event => manage.call(this, event)\n      }\n    });\n    const targetDomElement = $el.nodeType === 1 ? $el : $el.parentElement;\n    this._sortable = new Sortable(targetDomElement, sortableOptions);\n    this.targetDomElement = targetDomElement;\n    targetDomElement.__draggable_component__ = this;\n  },\n\n  updated() {\n    this.componentStructure.updated();\n  },\n\n  beforeUnmount() {\n    if (this._sortable !== undefined) this._sortable.destroy();\n  },\n\n  computed: {\n    realList() {\n      const { list } = this;\n      return list ? list : this.modelValue;\n    },\n\n    getKey() {\n      const { itemKey } = this;\n      if (typeof itemKey === \"function\") {\n        return itemKey;\n      }\n      return element => element[itemKey];\n    }\n  },\n\n  watch: {\n    $attrs: {\n      handler(newOptionValue) {\n        const { _sortable } = this;\n        if (!_sortable) return;\n        getValidSortableEntries(newOptionValue).forEach(([key, value]) => {\n          _sortable.option(key, value);\n        });\n      },\n      deep: true\n    }\n  },\n\n  methods: {\n    getUnderlyingVm(domElement) {\n      return this.componentStructure.getUnderlyingVm(domElement) || null;\n    },\n\n    getUnderlyingPotencialDraggableComponent(htmElement) {\n      //TODO check case where you need to see component children\n      return htmElement.__draggable_component__;\n    },\n\n    emitChanges(evt) {\n      nextTick(() => this.$emit(\"change\", evt));\n    },\n\n    alterList(onList) {\n      if (this.list) {\n        onList(this.list);\n        return;\n      }\n      const newList = [...this.modelValue];\n      onList(newList);\n      this.$emit(\"update:modelValue\", newList);\n    },\n\n    spliceList() {\n      // @ts-ignore\n      const spliceList = list => list.splice(...arguments);\n      this.alterList(spliceList);\n    },\n\n    updatePosition(oldIndex, newIndex) {\n      const updatePosition = list =>\n        list.splice(newIndex, 0, list.splice(oldIndex, 1)[0]);\n      this.alterList(updatePosition);\n    },\n\n    getRelatedContextFromMoveEvent({ to, related }) {\n      const component = this.getUnderlyingPotencialDraggableComponent(to);\n      if (!component) {\n        return { component };\n      }\n      const list = component.realList;\n      const context = { list, component };\n      if (to !== related && list) {\n        const destination = component.getUnderlyingVm(related) || {};\n        return { ...destination, ...context };\n      }\n      return context;\n    },\n\n    getVmIndexFromDomIndex(domIndex) {\n      return this.componentStructure.getVmIndexFromDomIndex(\n        domIndex,\n        this.targetDomElement\n      );\n    },\n\n    onDragStart(evt) {\n      this.context = this.getUnderlyingVm(evt.item);\n      evt.item._underlying_vm_ = this.clone(this.context.element);\n      draggingElement = evt.item;\n    },\n\n    onDragAdd(evt) {\n      const element = evt.item._underlying_vm_;\n      if (element === undefined) {\n        return;\n      }\n      removeNode(evt.item);\n      const newIndex = this.getVmIndexFromDomIndex(evt.newIndex);\n      // @ts-ignore\n      this.spliceList(newIndex, 0, element);\n      const added = { element, newIndex };\n      this.emitChanges({ added });\n    },\n\n    onDragRemove(evt) {\n      insertNodeAt(this.$el, evt.item, evt.oldIndex);\n      if (evt.pullMode === \"clone\") {\n        removeNode(evt.clone);\n        return;\n      }\n      const { index: oldIndex, element } = this.context;\n      // @ts-ignore\n      this.spliceList(oldIndex, 1);\n      const removed = { element, oldIndex };\n      this.emitChanges({ removed });\n    },\n\n    onDragUpdate(evt) {\n      removeNode(evt.item);\n      insertNodeAt(evt.from, evt.item, evt.oldIndex);\n      const oldIndex = this.context.index;\n      const newIndex = this.getVmIndexFromDomIndex(evt.newIndex);\n      this.updatePosition(oldIndex, newIndex);\n      const moved = { element: this.context.element, oldIndex, newIndex };\n      this.emitChanges({ moved });\n    },\n\n    computeFutureIndex(relatedContext, evt) {\n      if (!relatedContext.element) {\n        return 0;\n      }\n      const domChildren = [...evt.to.children].filter(\n        el => el.style[\"display\"] !== \"none\"\n      );\n      const currentDomIndex = domChildren.indexOf(evt.related);\n      const currentIndex = relatedContext.component.getVmIndexFromDomIndex(\n        currentDomIndex\n      );\n      const draggedInList = domChildren.indexOf(draggingElement) !== -1;\n      return draggedInList || !evt.willInsertAfter\n        ? currentIndex\n        : currentIndex + 1;\n    },\n\n    onDragMove(evt, originalEvent) {\n      const { move, realList } = this;\n      if (!move || !realList) {\n        return true;\n      }\n\n      const relatedContext = this.getRelatedContextFromMoveEvent(evt);\n      const futureIndex = this.computeFutureIndex(relatedContext, evt);\n      const draggedContext = {\n        ...this.context,\n        futureIndex\n      };\n      const sendEvent = {\n        ...evt,\n        relatedContext,\n        draggedContext\n      };\n      return move(sendEvent, originalEvent);\n    },\n\n    onDragEnd() {\n      draggingElement = null;\n    }\n  }\n});\n\nexport default draggableComponent;\n"],"names":["removeNode","node","insertNodeAt","fatherNode","position","refNode","getConsole","console","cached","fn","cache","str","regex","camelize","_","c","manageAndEmit","emit","manage","eventHandlerNames","events2","evt","events","isReadOnly","eventName","tags","isHtmlTag","name","isTransition","isHtmlAttribute","value","project","entries","res","key","getComponentAttributes","$attrs","componentData","createSortableOption","callBackBuilder","options","getValidSortableEntries","eventType","eventBuilder","event","draggable","value2","getHtmlElementFromNode","el","addContext","domElement","context","getContext","ComponentStructure","header","defaultNodes","footer","root","realList","h","attributes","tag","children","_isRootComponent","index","domIndex","element","length","domChildren","firstDomListElement","indexFirstDomListElement","element2","getSlot","slots","slotValue","computeNodes","$slots","getKey","normalizedList","item","getRootInformation","transition","externalComponent","resolveComponent","TransitionGroup","computeComponentStructure","nodes","evtName","evtData","nextTick","originalElement","delegateCallBack","draggingElement","props","original","emits","draggableComponent","exports","defineComponent","componentStructure","err","$el","sortableOptions","targetDomElement","Sortable","list","itemKey","newOptionValue","_sortable","htmElement","onList","newList","spliceList","oldIndex","newIndex","updatePosition","to","related","component","added","removed","moved","relatedContext","currentDomIndex","currentIndex","originalEvent","move","futureIndex","draggedContext","sendEvent"],"mappings":"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"}