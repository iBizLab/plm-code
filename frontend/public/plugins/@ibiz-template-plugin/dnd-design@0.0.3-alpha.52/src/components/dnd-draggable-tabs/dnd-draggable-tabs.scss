/* stylelint-disable selector-class-pattern */
$dnd-design-draggable-tabs: (
  hover-bg-color: getCssVar(color, primary, hover),
  hover-text-color: getCssVar(color, primary, hover, text),
  active-bg-color: getCssVar(color, primary, active),
  active-text-color: getCssVar(color, primary, active, text),
);

@include b(dnd-design-draggable-tabs) {
  @include set-component-css-var('dnd-design-draggable-tabs', $dnd-design-draggable-tabs);

  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
}

@include b(dnd-design-draggable-tabs-header) {
  flex: 0 0 auto;
  overflow: auto hidden;
}

@include b(dnd-design-draggable-tabs-nav) {
  display: flex;
  height: 43px;
  padding-top: getCssVar('spacing', 'extra-tight');
  border-bottom: 1px solid getCssVar(color, border);
}

@include b(dnd-design-draggable-tabs-content) {
  flex: 1 1 0;
  overflow: hidden;
}

@include b(dnd-design-draggable-tabs-item) {
  position: relative;
  flex: 0 0 auto;
  height: 38px;
  padding: 0 calc(getCssVar('spacing', 'tight') + 16px) 0 getCssVar('spacing', 'base');
  margin-right: getCssVar('spacing', 'super-tight');
  line-height: 38px;
  color: getCssVar(color, text, 1);
  cursor: move;
  background: getCssVar(color, bg, 0);
  border: 1px solid getCssVar(color, border);
  border-bottom: 0;
  border-radius: getCssVar(border, radius, small)
    getCssVar(border, radius, small) 0 0;
  transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);

  &:hover {
    color: getCssVar('dnd-design-draggable-tabs', 'hover-text-color');
    background-color: getCssVar('dnd-design-draggable-tabs', 'hover-bg-color');
  }

  @include when(active) {
    padding-bottom: 1px;
    color: getCssVar('dnd-design-draggable-tabs', 'active-text-color');
    background-color: getCssVar('dnd-design-draggable-tabs', 'active-bg-color');
    border-color: getCssVar(color, border);
  }

  @include e(text) {
    max-width: 150px;
    overflow: hidden;
    font-size: getCssVar('font-size', 'regular');
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  @include e(remove-button) {
    position: absolute;
    top: 0;
    right: getCssVar('spacing', 'extra-tight');
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    font-size: getCssVar('font-size', 'header-6');
    cursor: pointer;

    &:hover {
      color: getCssVar(color, primary);
    }
  }

  @include e(pop-confirm) {
    padding: getCssVar('spacing', 'base-tight') getCssVar('spacing', 'base');
    background-color: getCssVar(color, white);
    border-radius: getCssVar(border, radius, small);
    box-shadow: 0 getCssVar('spacing', 'super-tight')
      getCssVar('spacing', 'tight') rgba(var(#{getCssVarName(black)}), 0.15);

    --el-border-color-light: #{getCssVar(color, bg, 3)};
    --el-bg-color-overlay: #{getCssVar(color, bg, 3)};

    .el-popconfirm__main {
      padding: getCssVar('spacing', 'extra-tight') 0
        getCssVar('spacing', 'base-tight');
      font-size: getCssVar('font-size', 'regular');
      color: getCssVar(color, text, 2);
    }

    .el-popconfirm__action {
      .el-button.el-button--primary {
        --el-button-text-color: #{getCssVar(color, primary, text)};
      }
    }

    .el-popconfirm__icon {
      font-size: getCssVar('font-size', 'header-5');
      color: #faad14;
    }

    .el-button.is-text {
      border: 1px solid getCssVar(color, border);
    }

    .el-popper__arrow {
      display: block;
    }
  }
}

@include b(dnd-design-draggable-tabs-item-add-button) {
  display: flex;
  flex: 0 0 auto;
  align-items: center;
  justify-content: center;
  width: 38px;
  height: 38px;
  font-weight: getCssVar('font-weight', 'regular');
  color: getCssVar(color, text, 1);
  white-space: nowrap;
  cursor: pointer;
  user-select: none;
  background-color: transparent;
  border: 1px solid getCssVar(color, border);
  border-radius: getCssVar(border, radius, small)
    getCssVar(border, radius, small) 0 0;
  box-shadow: 0 getCssVar('spacing', 'super-tight') 0
    rgba(var(#{getCssVarName(black)}), 0.015);
  transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);

  &:hover {
    color: getCssVar(color, primary, hover, text);
    background-color: getCssVar(color, primary, hover);
  }

  @include e(icon) {
    font-size: getCssVar('font-size', 'header-4');
  }
}

@include b(dnd-design-draggable-tabs-item-content) {
  position: relative;
  width: calc(100% - 4px);
  height: calc(100% - 4px);
  min-height: 40px;
  margin: getCssVar('spacing', 'super-tight');
  overflow: hidden auto;
  border-radius: 1px;
  outline: 1px dashed getCssVar(color-border);

  &:hover {
    outline-color: getCssVar(color-primary);

    > .#{bem('dnd-design-draggable-tabs-item-content', 'mask')} {
      background: rgba(var(#{getCssVarName(black)}), 0.4);
    }
  }

  @include when(select) {
    outline: getCssVar('spacing', 'super-tight') solid getCssVar(color-primary);
  }

  @include when(hidden) {
    display: none;
  }

  > .#{bem(dnd-design-drag-container)} {
    min-height: calc(100% - 4px);
  }

  @include m(mask) {
    > * {
      pointer-events: none;
    }
  }

  @include e(mask) {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1;
    width: 100%;
    height: 100%;
  }
}
