export default {
  appDEACModes: [
    {
      actype: 'AUTOCOMPLETE',
      codeName: 'Default',
      logicName: 'DEFAULT',
      deacmodeDataItems: [
        {
          appDEFieldId: 'id',
          dataType: 25,
          id: 'value',
        },
        {
          appDEFieldId: 'title',
          dataType: 25,
          id: 'text',
        },
      ],
      pagingSize: 50,
      defaultMode: true,
      textAppDEFieldId: 'title',
      valueAppDEFieldId: 'id',
      name: 'DEFAULT',
      id: 'default',
    },
  ],
  appDEDataImports: [
    {
      batchSize: 1000,
      codeName: 'import_test_case',
      createDataAccessAction: 'CREATE',
      dedataImportItems: [
        {
          caption: '用例模块标识',
          appDEFieldId: 'suite_id',
          name: 'SUITE_ID',
          id: 'suite_id',
        },
        {
          caption: '编号',
          appDEFieldId: 'identifier',
          name: 'IDENTIFIER',
          id: 'identifier',
        },
        {
          caption: '标题',
          appDEFieldId: 'title',
          name: 'TITLE',
          id: 'title',
        },
        {
          caption: '维护人',
          appDEFieldId: 'maintenance_name',
          name: 'MAINTENANCE_NAME',
          id: 'maintenance_name',
        },
        {
          caption: '用例类型',
          codeListId: 'plmweb.testmgmt__test_case_type',
          appDEFieldId: 'type',
          name: 'TYPE',
          id: 'type',
        },
        {
          caption: '重要程度',
          codeListId: 'plmweb.testmgmt__test_case_level',
          appDEFieldId: 'level',
          name: 'LEVEL',
          id: 'level',
        },
        {
          caption: '测试类型',
          codeListId: 'plmweb.testmgmt__test_case_test_type',
          appDEFieldId: 'test_type',
          name: 'TEST_TYPE',
          id: 'test_type',
        },
        {
          caption: '前置条件',
          appDEFieldId: 'precondition',
          name: 'PRECONDITION',
          id: 'precondition',
        },
        {
          caption: '步骤',
          appDEFieldId: 'steps',
          name: 'STEPS',
          id: 'steps',
        },
        {
          caption: '关注',
          appDEFieldId: 'attentions',
          name: 'ATTENTIONS',
          id: 'attentions',
        },
      ],
      updateDataAccessAction: 'UPDATE',
      defaultMode: true,
      valid: true,
      createAppDEActionId: 'create',
      updateAppDEActionId: 'update',
      name: '测试用例导入',
      id: 'import_test_case',
    },
  ],
  appDEFields: [
    {
      codeName: 'Identifier',
      logicName: '编号',
      stdDataType: 25,
      stringLength: 100,
      enableQuickSearch: true,
      name: 'IDENTIFIER',
      id: 'identifier',
    },
    {
      codeName: 'Title',
      logicName: '标题',
      stdDataType: 25,
      stringLength: 500,
      enableQuickSearch: true,
      name: 'TITLE',
      id: 'title',
    },
    {
      codeName: 'Level',
      logicName: '重要程度',
      stdDataType: 25,
      stringLength: 60,
      name: 'LEVEL',
      id: 'level',
    },
    {
      codeName: 'Type',
      logicName: '用例类型',
      stdDataType: 25,
      stringLength: 60,
      name: 'TYPE',
      id: 'type',
    },
    {
      codeName: 'Test_type',
      logicName: '测试类型',
      stdDataType: 25,
      stringLength: 60,
      name: 'TEST_TYPE',
      id: 'test_type',
    },
    {
      codeName: 'Description',
      logicName: '描述',
      stdDataType: 25,
      stringLength: 2000,
      name: 'DESCRIPTION',
      id: 'description',
    },
    {
      codeName: 'Precondition',
      logicName: '前置条件',
      stdDataType: 25,
      stringLength: 2000,
      name: 'PRECONDITION',
      id: 'precondition',
    },
    {
      codeName: 'Is_archived',
      logicName: '是否已归档',
      stdDataType: 9,
      name: 'IS_ARCHIVED',
      id: 'is_archived',
    },
    {
      codeName: 'Is_deleted',
      logicName: '是否已删除',
      stdDataType: 9,
      name: 'IS_DELETED',
      id: 'is_deleted',
    },
    {
      codeName: 'State',
      logicName: '评审状态',
      stdDataType: 25,
      stringLength: 60,
      name: 'STATE',
      id: 'state',
    },
    {
      codeName: 'Steps',
      logicName: '步骤',
      stdDataType: 21,
      stringLength: 1048576,
      name: 'STEPS',
      id: 'steps',
    },
    {
      codeName: 'Maintenance_id',
      logicName: '维护人标识',
      stdDataType: 25,
      stringLength: 100,
      name: 'MAINTENANCE_ID',
      id: 'maintenance_id',
    },
    {
      codeName: 'Maintenance_name',
      logicName: '维护人',
      stdDataType: 25,
      stringLength: 100,
      name: 'MAINTENANCE_NAME',
      id: 'maintenance_name',
    },
    {
      codeName: 'Test_plan_name',
      logicName: '测试计划名称',
      stdDataType: 25,
      stringLength: 100,
      name: 'TEST_PLAN_NAME',
      id: 'test_plan_name',
    },
    {
      codeName: 'Executed_at',
      logicName: '执行时间',
      stdDataType: 5,
      valueFormat: 'YYYY-MM-DD HH:mm:ss',
      name: 'EXECUTED_AT',
      id: 'executed_at',
    },
    {
      codeName: 'Executor_name',
      logicName: '执行人',
      stdDataType: 25,
      stringLength: 100,
      name: 'EXECUTOR_NAME',
      id: 'executor_name',
    },
    {
      codeName: 'Run_status',
      logicName: '执行结果',
      stdDataType: 25,
      stringLength: 200,
      name: 'RUN_STATUS',
      id: 'run_status',
    },
    {
      codeName: 'Attachments',
      logicName: '附件',
      stdDataType: 21,
      stringLength: 1048576,
      name: 'ATTACHMENTS',
      id: 'attachments',
    },
    {
      codeName: 'Suites',
      logicName: '模块路径',
      stdDataType: 25,
      stringLength: 500,
      name: 'SUITES',
      id: 'suites',
    },
    {
      codeName: 'Target_library_id',
      logicName: '目标测试库',
      stdDataType: 25,
      stringLength: 100,
      name: 'TARGET_LIBRARY_ID',
      id: 'target_library_id',
    },
    {
      codeName: 'Show_identifier',
      logicName: '编号',
      stdDataType: 25,
      stringLength: 200,
      name: 'SHOW_IDENTIFIER',
      id: 'show_identifier',
    },
    {
      codeName: 'Library_identifier',
      logicName: '测试库标识',
      stdDataType: 25,
      stringLength: 15,
      name: 'LIBRARY_IDENTIFIER',
      id: 'library_identifier',
    },
    {
      codeName: 'Attentions',
      logicName: '关注',
      stdDataType: 21,
      stringLength: 1048576,
      name: 'ATTENTIONS',
      id: 'attentions',
    },
    {
      codeName: 'Workload_schedule',
      logicName: '工时进度',
      precision: 1,
      stdDataType: 6,
      name: 'WORKLOAD_SCHEDULE',
      id: 'workload_schedule',
    },
    {
      codeName: 'Estimated_workload',
      logicName: '预估工时',
      precision: 1,
      stdDataType: 6,
      name: 'ESTIMATED_WORKLOAD',
      id: 'estimated_workload',
    },
    {
      codeName: 'Remaining_workload',
      logicName: '剩余工时',
      precision: 1,
      stdDataType: 6,
      name: 'REMAINING_WORKLOAD',
      id: 'remaining_workload',
    },
    {
      codeName: 'Actual_workload',
      logicName: '实际工时',
      precision: 1,
      stdDataType: 6,
      name: 'ACTUAL_WORKLOAD',
      id: 'actual_workload',
    },
    {
      codeName: 'Id',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.ID',
      },
      logicName: '标识',
      stdDataType: 25,
      stringLength: 100,
      name: 'ID',
      id: 'id',
    },
    {
      codeName: 'Create_time',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.CREATE_TIME',
      },
      logicName: '建立时间',
      stdDataType: 5,
      valueFormat: 'YYYY-MM-DD HH:mm:ss',
      name: 'CREATE_TIME',
      id: 'create_time',
    },
    {
      codeName: 'Create_man',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.CREATE_MAN',
      },
      logicName: '建立人',
      stdDataType: 25,
      stringLength: 100,
      name: 'CREATE_MAN',
      id: 'create_man',
    },
    {
      codeName: 'Name',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.NAME',
      },
      logicName: '名称',
      stdDataType: 25,
      stringLength: 200,
      name: 'NAME',
      id: 'name',
    },
    {
      codeName: 'Update_time',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.UPDATE_TIME',
      },
      logicName: '更新时间',
      stdDataType: 5,
      valueFormat: 'YYYY-MM-DD HH:mm:ss',
      name: 'UPDATE_TIME',
      id: 'update_time',
    },
    {
      codeName: 'Update_man',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.UPDATE_MAN',
      },
      logicName: '更新人',
      stdDataType: 25,
      stringLength: 100,
      name: 'UPDATE_MAN',
      id: 'update_man',
    },
    {
      codeName: 'Test_library_id',
      logicName: '测试库标识',
      stdDataType: 25,
      stringLength: 100,
      name: 'TEST_LIBRARY_ID',
      id: 'test_library_id',
    },
    {
      codeName: 'Suite_id',
      logicName: '用例模块标识',
      stdDataType: 25,
      stringLength: 100,
      name: 'SUITE_ID',
      id: 'suite_id',
    },
    {
      codeName: 'Suite_name',
      logicName: '所属模块',
      stdDataType: 25,
      stringLength: 200,
      name: 'SUITE_NAME',
      id: 'suite_name',
    },
    {
      codeName: 'Test_library_name',
      logicName: '所属测试库',
      stdDataType: 25,
      stringLength: 200,
      name: 'TEST_LIBRARY_NAME',
      id: 'test_library_name',
    },
  ],
  appDELogics: [
    {
      codeName: 'nothing',
      defaultParamName: 'Default',
      logicName: '无操作',
      logicSubType: 'NONE',
      delogicNodes: [
        {
          codeName: 'Begin',
          leftPos: 200,
          logicNodeType: 'BEGIN',
          topPos: 200,
          parallelOutput: true,
          name: '开始',
          id: 'begin',
        },
      ],
      delogicParams: [
        {
          codeName: 'Default',
          default: true,
          entityParam: true,
          paramAppDataEntityId: 'plmweb.test_case',
          name: '传入变量',
          id: 'default',
        },
      ],
      startDELogicNodeId: 'begin',
      valid: true,
      name: '无操作',
      id: 'nothing',
    },
  ],
  appDEMethodDTOs: [
    {
      codeName: 'Test_caseDTO',
      appDEMethodDTOFields: [
        {
          codeName: 'Identifier',
          logicName: '编号',
          appDEFieldId: 'identifier',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Identifier',
          id: 'identifier',
        },
        {
          codeName: 'Title',
          logicName: '标题',
          appDEFieldId: 'title',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Title',
          id: 'title',
        },
        {
          codeName: 'Level',
          logicName: '重要程度',
          appDEFieldId: 'level',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Level',
          id: 'level',
        },
        {
          codeName: 'Type',
          logicName: '用例类型',
          appDEFieldId: 'type',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Type',
          id: 'type',
        },
        {
          codeName: 'Test_type',
          logicName: '测试类型',
          appDEFieldId: 'test_type',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Test_type',
          id: 'test_type',
        },
        {
          codeName: 'Description',
          logicName: '描述',
          appDEFieldId: 'description',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Description',
          id: 'description',
        },
        {
          codeName: 'Precondition',
          logicName: '前置条件',
          appDEFieldId: 'precondition',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Precondition',
          id: 'precondition',
        },
        {
          codeName: 'Is_archived',
          logicName: '是否已归档',
          appDEFieldId: 'is_archived',
          sourceType: 'DEFIELD',
          stdDataType: 9,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Is_archived',
          id: 'is_archived',
        },
        {
          codeName: 'Is_deleted',
          logicName: '是否已删除',
          appDEFieldId: 'is_deleted',
          sourceType: 'DEFIELD',
          stdDataType: 9,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Is_deleted',
          id: 'is_deleted',
        },
        {
          codeName: 'State',
          logicName: '评审状态',
          appDEFieldId: 'state',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'State',
          id: 'state',
        },
        {
          codeName: 'Steps',
          logicName: '步骤',
          appDEFieldId: 'steps',
          refAppDEMethodDTOId: 'stepdto',
          refAppDataEntityId: 'plmweb.step',
          refPickupAppDEFieldId: 'case_id',
          sourceType: 'DEFIELD',
          type: 'DTOS',
          allowEmpty: true,
          name: 'Steps',
          id: 'steps',
        },
        {
          codeName: 'Maintenance_id',
          logicName: '维护人标识',
          appDEFieldId: 'maintenance_id',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Maintenance_id',
          id: 'maintenance_id',
        },
        {
          codeName: 'Maintenance_name',
          logicName: '维护人',
          appDEFieldId: 'maintenance_name',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Maintenance_name',
          id: 'maintenance_name',
        },
        {
          codeName: 'Test_plan_name',
          logicName: '测试计划名称',
          appDEFieldId: 'test_plan_name',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Test_plan_name',
          id: 'test_plan_name',
        },
        {
          codeName: 'Executed_at',
          jsonFormat: 'yyyy-MM-dd HH:mm:ss',
          logicName: '执行时间',
          appDEFieldId: 'executed_at',
          sourceType: 'DEFIELD',
          stdDataType: 5,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Executed_at',
          id: 'executed_at',
        },
        {
          codeName: 'Executor_name',
          logicName: '执行人',
          appDEFieldId: 'executor_name',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Executor_name',
          id: 'executor_name',
        },
        {
          codeName: 'Run_status',
          logicName: '执行结果',
          appDEFieldId: 'run_status',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Run_status',
          id: 'run_status',
        },
        {
          codeName: 'Attachments',
          logicName: '附件',
          appDEFieldId: 'attachments',
          refAppDEMethodDTOId: 'attachmentdto',
          refAppDataEntityId: 'plmweb.attachment',
          refPickupAppDEFieldId: 'owner_id',
          sourceType: 'DEFIELD',
          type: 'DTOS',
          allowEmpty: true,
          name: 'Attachments',
          id: 'attachments',
        },
        {
          codeName: 'Suites',
          logicName: '模块路径',
          appDEFieldId: 'suites',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Suites',
          id: 'suites',
        },
        {
          codeName: 'Target_library_id',
          logicName: '目标测试库',
          appDEFieldId: 'target_library_id',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Target_library_id',
          id: 'target_library_id',
        },
        {
          codeName: 'Show_identifier',
          logicName: '编号',
          appDEFieldId: 'show_identifier',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Show_identifier',
          id: 'show_identifier',
        },
        {
          codeName: 'Library_identifier',
          logicName: '测试库标识',
          appDEFieldId: 'library_identifier',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Library_identifier',
          id: 'library_identifier',
        },
        {
          codeName: 'Attentions',
          logicName: '关注',
          appDEFieldId: 'attentions',
          refAppDEMethodDTOId: 'attentiondto',
          refAppDataEntityId: 'plmweb.attention',
          refPickupAppDEFieldId: 'owner_id',
          sourceType: 'DEFIELD',
          type: 'DTOS',
          allowEmpty: true,
          name: 'Attentions',
          id: 'attentions',
        },
        {
          codeName: 'Workload_schedule',
          logicName: '工时进度',
          appDEFieldId: 'workload_schedule',
          sourceType: 'DEFIELD',
          stdDataType: 6,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Workload_schedule',
          id: 'workload_schedule',
        },
        {
          codeName: 'Estimated_workload',
          logicName: '预估工时',
          appDEFieldId: 'estimated_workload',
          sourceType: 'DEFIELD',
          stdDataType: 6,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Estimated_workload',
          id: 'estimated_workload',
        },
        {
          codeName: 'Remaining_workload',
          logicName: '剩余工时',
          appDEFieldId: 'remaining_workload',
          sourceType: 'DEFIELD',
          stdDataType: 6,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Remaining_workload',
          id: 'remaining_workload',
        },
        {
          codeName: 'Actual_workload',
          logicName: '实际工时',
          appDEFieldId: 'actual_workload',
          sourceType: 'DEFIELD',
          stdDataType: 6,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Actual_workload',
          id: 'actual_workload',
        },
        {
          codeName: 'Create_man',
          logicName: '建立人',
          appDEFieldId: 'create_man',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          name: 'Create_man',
          id: 'create_man',
        },
        {
          codeName: 'Create_time',
          jsonFormat: 'yyyy-MM-dd HH:mm:ss',
          logicName: '建立时间',
          appDEFieldId: 'create_time',
          sourceType: 'DEFIELD',
          stdDataType: 5,
          type: 'SIMPLE',
          name: 'Create_time',
          id: 'create_time',
        },
        {
          codeName: 'Id',
          logicName: '标识',
          appDEFieldId: 'id',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          name: 'Id',
          id: 'id',
        },
        {
          codeName: 'Name',
          logicName: '名称',
          appDEFieldId: 'name',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Name',
          id: 'name',
        },
        {
          codeName: 'Suite_id',
          logicName: '用例模块标识',
          appDEFieldId: 'suite_id',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Suite_id',
          id: 'suite_id',
        },
        {
          codeName: 'Suite_name',
          logicName: '所属模块',
          appDEFieldId: 'suite_name',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Suite_name',
          id: 'suite_name',
        },
        {
          codeName: 'Test_library_id',
          logicName: '测试库标识',
          appDEFieldId: 'test_library_id',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Test_library_id',
          id: 'test_library_id',
        },
        {
          codeName: 'Test_library_name',
          logicName: '所属测试库',
          appDEFieldId: 'test_library_name',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Test_library_name',
          id: 'test_library_name',
        },
        {
          codeName: 'Update_man',
          logicName: '更新人',
          appDEFieldId: 'update_man',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          name: 'Update_man',
          id: 'update_man',
        },
        {
          codeName: 'Update_time',
          jsonFormat: 'yyyy-MM-dd HH:mm:ss',
          logicName: '更新时间',
          appDEFieldId: 'update_time',
          sourceType: 'DEFIELD',
          stdDataType: 5,
          type: 'SIMPLE',
          name: 'Update_time',
          id: 'update_time',
        },
      ],
      sourceType: 'DE',
      type: 'DEFAULT',
      name: 'Test_caseDTO',
      id: 'test_casedto',
    },
    {
      codeName: 'Test_caseFilterDTO',
      appDEMethodDTOFields: [
        {
          codeName: 'N_CREATE_MAN_EQ',
          logicName: '建立人',
          appDEFieldId: 'create_man',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_CREATE_MAN_EQ',
          id: 'n_create_man_eq',
        },
        {
          codeName: 'N_IDENTIFIER_LIKE',
          logicName: '编号',
          appDEFieldId: 'identifier',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_IDENTIFIER_LIKE',
          id: 'n_identifier_like',
        },
        {
          codeName: 'N_ID_EQ',
          logicName: '标识',
          appDEFieldId: 'id',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_ID_EQ',
          id: 'n_id_eq',
        },
        {
          codeName: 'N_IS_ARCHIVED_EQ',
          logicName: '是否已归档',
          appDEFieldId: 'is_archived',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 9,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_IS_ARCHIVED_EQ',
          id: 'n_is_archived_eq',
        },
        {
          codeName: 'N_IS_DELETED_EQ',
          logicName: '是否已删除',
          appDEFieldId: 'is_deleted',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 9,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_IS_DELETED_EQ',
          id: 'n_is_deleted_eq',
        },
        {
          codeName: 'N_LEVEL_EQ',
          logicName: '重要程度',
          appDEFieldId: 'level',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_LEVEL_EQ',
          id: 'n_level_eq',
        },
        {
          codeName: 'N_MAINTENANCE_ID_EQ',
          logicName: '维护人标识',
          appDEFieldId: 'maintenance_id',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_MAINTENANCE_ID_EQ',
          id: 'n_maintenance_id_eq',
        },
        {
          codeName: 'N_NAME_LIKE',
          logicName: '名称',
          appDEFieldId: 'name',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_NAME_LIKE',
          id: 'n_name_like',
        },
        {
          codeName: 'N_RUN_STATUS_EQ',
          logicName: '执行结果',
          appDEFieldId: 'run_status',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_RUN_STATUS_EQ',
          id: 'n_run_status_eq',
        },
        {
          codeName: 'N_SHOW_IDENTIFIER_LIKE',
          logicName: '编号',
          appDEFieldId: 'show_identifier',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_SHOW_IDENTIFIER_LIKE',
          id: 'n_show_identifier_like',
        },
        {
          codeName: 'N_STATE_EQ',
          logicName: '评审状态',
          appDEFieldId: 'state',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_STATE_EQ',
          id: 'n_state_eq',
        },
        {
          codeName: 'N_STATE_NOTIN',
          logicName: '评审状态',
          appDEFieldId: 'state',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_STATE_NOTIN',
          id: 'n_state_notin',
        },
        {
          codeName: 'N_SUITES_LIKE',
          logicName: '模块路径',
          appDEFieldId: 'suites',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_SUITES_LIKE',
          id: 'n_suites_like',
        },
        {
          codeName: 'N_SUITE_ID_EQ',
          logicName: '用例模块标识',
          appDEFieldId: 'suite_id',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_SUITE_ID_EQ',
          id: 'n_suite_id_eq',
        },
        {
          codeName: 'N_SUITE_ID_ISNULL',
          logicName: '用例模块标识',
          appDEFieldId: 'suite_id',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_SUITE_ID_ISNULL',
          id: 'n_suite_id_isnull',
        },
        {
          codeName: 'N_SUITE_NAME_EQ',
          logicName: '所属模块',
          appDEFieldId: 'suite_name',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_SUITE_NAME_EQ',
          id: 'n_suite_name_eq',
        },
        {
          codeName: 'N_SUITE_NAME_LIKE',
          logicName: '所属模块',
          appDEFieldId: 'suite_name',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_SUITE_NAME_LIKE',
          id: 'n_suite_name_like',
        },
        {
          codeName: 'N_TEST_LIBRARY_ID_EQ',
          logicName: '测试库标识',
          appDEFieldId: 'test_library_id',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_TEST_LIBRARY_ID_EQ',
          id: 'n_test_library_id_eq',
        },
        {
          codeName: 'N_TEST_LIBRARY_NAME_EQ',
          logicName: '所属测试库',
          appDEFieldId: 'test_library_name',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_TEST_LIBRARY_NAME_EQ',
          id: 'n_test_library_name_eq',
        },
        {
          codeName: 'N_TEST_LIBRARY_NAME_LIKE',
          logicName: '所属测试库',
          appDEFieldId: 'test_library_name',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_TEST_LIBRARY_NAME_LIKE',
          id: 'n_test_library_name_like',
        },
        {
          codeName: 'N_TEST_TYPE_EQ',
          logicName: '测试类型',
          appDEFieldId: 'test_type',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_TEST_TYPE_EQ',
          id: 'n_test_type_eq',
        },
        {
          codeName: 'N_TITLE_LIKE',
          logicName: '标题',
          appDEFieldId: 'title',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_TITLE_LIKE',
          id: 'n_title_like',
        },
        {
          codeName: 'N_TYPE_EQ',
          logicName: '用例类型',
          appDEFieldId: 'type',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_TYPE_EQ',
          id: 'n_type_eq',
        },
      ],
      sourceType: 'DE',
      type: 'DEFILTER',
      name: 'Test_caseFilterDTO',
      id: 'test_casefilterdto',
    },
    {
      codeName: 'Test_casemaintenanceDTO',
      appDEMethodDTOFields: [
        {
          codeName: 'Id',
          logicName: '标识',
          appDEFieldId: 'id',
          sourceType: 'DEFGROUPDETAIL',
          stdDataType: 25,
          type: 'SIMPLE',
          name: 'Id',
          id: 'id',
        },
        {
          codeName: 'Maintenance_id',
          logicName: '维护人标识',
          appDEFieldId: 'maintenance_id',
          sourceType: 'DEFGROUPDETAIL',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Maintenance_id',
          id: 'maintenance_id',
        },
        {
          codeName: 'Maintenance_name',
          logicName: '维护人',
          appDEFieldId: 'maintenance_name',
          sourceType: 'DEFGROUPDETAIL',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Maintenance_name',
          id: 'maintenance_name',
        },
      ],
      sourceType: 'DE',
      type: 'DEFAULT',
      name: 'Test_casemaintenanceDTO',
      id: 'test_casemaintenancedto',
    },
  ],
  appDEMethods: [
    {
      codeName: 'Case_move_plan',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        type: 'VOID',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/case_move_plan',
      needResourceKey: true,
      actionMode: 'CUSTOM',
      actionName: 'case_move_plan',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Case_move_plan',
      id: 'case_move_plan',
    },
    {
      codeName: 'CheckKey',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        stdDataType: 9,
        type: 'SIMPLE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/checkkey',
      actionMode: 'CHECKKEY',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'CheckKey',
      id: 'checkkey',
    },
    {
      codeName: 'Copy_case',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        type: 'VOID',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/copy_case',
      needResourceKey: true,
      actionMode: 'CUSTOM',
      actionName: 'copy_case',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Copy_case',
      id: 'copy_case',
    },
    {
      codeName: 'Create',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        output: true,
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      noServiceCodeName: true,
      actionMode: 'CREATE',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Create',
      id: 'create',
    },
    {
      codeName: 'Del_relation',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        type: 'VOID',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/del_relation',
      needResourceKey: true,
      actionMode: 'CUSTOM',
      actionName: 'del_relation',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Del_relation',
      id: 'del_relation',
    },
    {
      codeName: 'Delete',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        type: 'VOID',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/delete',
      needResourceKey: true,
      actionMode: 'CUSTOM',
      actionName: 'delete',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Delete',
      id: 'delete',
    },
    {
      codeName: 'Get',
      methodType: 'DEACTION',
      appDEMethodInput: {
        keyAppDEFieldId: 'id',
        type: 'KEYFIELD',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        id: '返回对象',
      },
      requestField: 'ID',
      requestMethod: 'GET',
      requestParamType: 'FIELD',
      needResourceKey: true,
      noServiceCodeName: true,
      actionMode: 'READ',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Get',
      id: 'get',
    },
    {
      codeName: 'GetDraft',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        id: '返回对象',
      },
      requestMethod: 'GET',
      requestParamType: 'NONE',
      requestPath: '/getdraft',
      actionMode: 'GETDRAFT',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'GetDraft',
      id: 'getdraft',
    },
    {
      codeName: 'Get_actual_workload',
      methodType: 'DEACTION',
      appDEMethodInput: {
        keyAppDEFieldId: 'id',
        type: 'KEYFIELD',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        id: '返回对象',
      },
      requestField: 'ID',
      requestMethod: 'GET',
      requestParamType: 'FIELD',
      requestPath: '/get_actual_workload',
      needResourceKey: true,
      actionMode: 'READ',
      actionName: 'get_actual_workload',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Get_actual_workload',
      id: 'get_actual_workload',
    },
    {
      codeName: 'Move_case',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        type: 'VOID',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/move_case',
      needResourceKey: true,
      actionMode: 'CUSTOM',
      actionName: 'move_case',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Move_case',
      id: 'move_case',
    },
    {
      codeName: 'Newest_run',
      methodType: 'DEACTION',
      appDEMethodInput: {
        keyAppDEFieldId: 'id',
        type: 'KEYFIELD',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        id: '返回对象',
      },
      requestMethod: 'GET',
      requestParamType: 'ENTITY',
      requestPath: '/newest_run',
      needResourceKey: true,
      actionMode: 'READ',
      actionName: 'newest_run',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Newest_run',
      id: 'newest_run',
    },
    {
      codeName: 'Nothing',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        name: 'NothingInput',
        id: 'nothinginput',
      },
      appDEMethodReturn: {
        type: 'VOID',
        name: 'NothingResult',
        id: 'nothingresult',
      },
      actionMode: 'CUSTOM',
      actionType: 'DELOGIC',
      appDELogicId: 'nothing',
      dataSetType: 'REMOTE',
      id: 'nothing',
    },
    {
      codeName: 'Others_relation_case',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        output: true,
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/others_relation_case',
      actionMode: 'CREATE',
      actionName: 'others_relation_case',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Others_relation_case',
      id: 'others_relation_case',
    },
    {
      codeName: 'Recover',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        type: 'VOID',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/recover',
      needResourceKey: true,
      actionMode: 'CUSTOM',
      actionName: 'recover',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Recover',
      id: 'recover',
    },
    {
      codeName: 'Remove',
      methodType: 'DEACTION',
      appDEMethodInput: {
        keyAppDEFieldId: 'id',
        type: 'KEYFIELDS',
        id: '输入对象',
      },
      appDEMethodReturn: {
        type: 'VOID',
        id: '返回对象',
      },
      requestField: 'ID',
      requestMethod: 'DELETE',
      requestParamType: 'FIELD',
      needResourceKey: true,
      noServiceCodeName: true,
      actionMode: 'DELETE',
      actionType: 'REMOTE',
      batchActionMode: 1,
      enableBatchAction: true,
      dataSetType: 'REMOTE',
      name: 'Remove',
      id: 'remove',
    },
    {
      codeName: 'Save',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        type: 'VOID',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/save',
      needResourceKey: true,
      actionMode: 'UNKNOWN',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Save',
      id: 'save',
    },
    {
      codeName: 'Set_level',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        type: 'VOID',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/set_level',
      needResourceKey: true,
      actionMode: 'CUSTOM',
      actionName: 'set_level',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Set_level',
      id: 'set_level',
    },
    {
      codeName: 'Set_maintenance',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        type: 'VOID',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/set_maintenance',
      needResourceKey: true,
      actionMode: 'CUSTOM',
      actionName: 'set_maintenance',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Set_maintenance',
      id: 'set_maintenance',
    },
    {
      codeName: 'Set_state',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        type: 'VOID',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/set_state',
      needResourceKey: true,
      actionMode: 'CUSTOM',
      actionName: 'set_state',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Set_state',
      id: 'set_state',
    },
    {
      codeName: 'Test_case_re_counters',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        type: 'VOID',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/test_case_re_counters',
      needResourceKey: true,
      actionMode: 'CUSTOM',
      actionName: 'test_case_re_counters',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Test_case_re_counters',
      id: 'test_case_re_counters',
    },
    {
      codeName: 'Update',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        output: true,
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'DTO',
        id: '返回对象',
      },
      requestMethod: 'PUT',
      requestParamType: 'ENTITY',
      needResourceKey: true,
      noServiceCodeName: true,
      actionMode: 'UPDATE',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Update',
      id: 'update',
    },
    {
      codeName: 'FetchComment_notify_maintenance',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casefilterdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casemaintenancedto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetchcomment_notify_maintenance',
      actionType: 'REMOTE',
      dataSetName: 'comment_notify_maintenance',
      dataSetTag: 'Comment_notify_maintenance',
      dataSetType: 'REMOTE',
      name: 'FetchComment_notify_maintenance',
      id: 'fetchcomment_notify_maintenance',
    },
    {
      codeName: 'FetchDefault',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casefilterdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetchdefault',
      actionType: 'REMOTE',
      dataSetName: 'DEFAULT',
      dataSetTag: 'Default',
      dataSetType: 'REMOTE',
      name: 'FetchDefault',
      id: 'fetchdefault',
    },
    {
      codeName: 'FetchDeleted',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casefilterdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetchdeleted',
      actionType: 'REMOTE',
      dataSetName: 'deleted',
      dataSetTag: 'Deleted',
      dataSetType: 'REMOTE',
      name: 'FetchDeleted',
      id: 'fetchdeleted',
    },
    {
      codeName: 'FetchIdea_relation_test_case',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casefilterdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetchidea_relation_test_case',
      actionType: 'REMOTE',
      dataSetName: 'idea_relation_test_case',
      dataSetTag: 'Idea_relation_test_case',
      dataSetType: 'REMOTE',
      name: 'FetchIdea_relation_test_case',
      id: 'fetchidea_relation_test_case',
    },
    {
      codeName: 'FetchMy_assign',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casefilterdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetchmy_assign',
      actionType: 'REMOTE',
      dataSetName: 'my_assign',
      dataSetTag: 'My_assign',
      dataSetType: 'REMOTE',
      name: 'FetchMy_assign',
      id: 'fetchmy_assign',
    },
    {
      codeName: 'FetchMy_assignee_count_test_case',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casefilterdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetchmy_assignee_count_test_case',
      actionType: 'REMOTE',
      dataSetName: 'my_assignee_count_test_case',
      dataSetTag: 'My_assignee_count_test_case',
      dataSetType: 'REMOTE',
      name: 'FetchMy_assignee_count_test_case',
      id: 'fetchmy_assignee_count_test_case',
    },
    {
      codeName: 'FetchMy_attention',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casefilterdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetchmy_attention',
      actionType: 'REMOTE',
      dataSetName: 'my_attention',
      dataSetTag: 'My_attention',
      dataSetType: 'REMOTE',
      name: 'FetchMy_attention',
      id: 'fetchmy_attention',
    },
    {
      codeName: 'FetchMy_created',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casefilterdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetchmy_created',
      actionType: 'REMOTE',
      dataSetName: 'my_created',
      dataSetTag: 'My_created',
      dataSetType: 'REMOTE',
      name: 'FetchMy_created',
      id: 'fetchmy_created',
    },
    {
      codeName: 'FetchNormal',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casefilterdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetchnormal',
      actionType: 'REMOTE',
      dataSetName: 'normal',
      dataSetTag: 'Normal',
      dataSetType: 'REMOTE',
      name: 'FetchNormal',
      id: 'fetchnormal',
    },
    {
      codeName: 'FetchNosuite_test_case',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casefilterdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetchnosuite_test_case',
      actionType: 'REMOTE',
      dataSetName: 'nosuite_test_case',
      dataSetTag: 'Nosuite_test_case',
      dataSetType: 'REMOTE',
      name: 'FetchNosuite_test_case',
      id: 'fetchnosuite_test_case',
    },
    {
      codeName: 'FetchNot_add_case',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casefilterdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetchnot_add_case',
      actionType: 'REMOTE',
      dataSetName: 'not_add_case',
      dataSetTag: 'Not_add_case',
      dataSetType: 'REMOTE',
      name: 'FetchNot_add_case',
      id: 'fetchnot_add_case',
    },
    {
      codeName: 'FetchNot_exsists_relation',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casefilterdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetchnot_exsists_relation',
      actionType: 'REMOTE',
      dataSetName: 'not_exsists_relation',
      dataSetTag: 'Not_exsists_relation',
      dataSetType: 'REMOTE',
      name: 'FetchNot_exsists_relation',
      id: 'fetchnot_exsists_relation',
    },
    {
      codeName: 'FetchRecent_test_case',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casefilterdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetchrecent_test_case',
      actionType: 'REMOTE',
      dataSetName: 'recent_test_case',
      dataSetTag: 'Recent_test_case',
      dataSetType: 'REMOTE',
      name: 'FetchRecent_test_case',
      id: 'fetchrecent_test_case',
    },
    {
      codeName: 'FetchSuites_test_case',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casefilterdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetchsuites_test_case',
      actionType: 'REMOTE',
      dataSetName: 'this_suite_test_case',
      dataSetTag: 'Suites_test_case',
      dataSetType: 'REMOTE',
      name: 'FetchSuites_test_case',
      id: 'fetchsuites_test_case',
    },
    {
      codeName: 'FetchWork_item_relation_test_case',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_casefilterdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_casedto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetchwork_item_relation_test_case',
      actionType: 'REMOTE',
      dataSetName: 'work_item_relation_test_case',
      dataSetTag: 'Work_item_relation_test_case',
      dataSetType: 'REMOTE',
      name: 'FetchWork_item_relation_test_case',
      id: 'fetchwork_item_relation_test_case',
    },
    {
      codeName: 'FilterCreate',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERCREATE',
      id: 'filtercreate',
    },
    {
      codeName: 'FilterFetch',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERFETCH',
      id: 'filterfetch',
    },
    {
      codeName: 'FilterGet',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERGET',
      id: 'filterget',
    },
    {
      codeName: 'FilterGetDraft',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERGETDRAFT',
      id: 'filtergetdraft',
    },
    {
      codeName: 'FilterRemove',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERREMOVE',
      id: 'filterremove',
    },
    {
      codeName: 'FilterSearch',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERSEARCH',
      id: 'filtersearch',
    },
    {
      codeName: 'FilterUpdate',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERUPDATE',
      id: 'filterupdate',
    },
  ],
  appDEUIActions: [
    {
      actionLevel: 100,
      actionTarget: 'NONE',
      caption: '添加实际工时',
      codeName: 'add_actual_workload',
      frontAppViewId: 'plmweb.workloadquick_create_view',
      frontProcessType: 'WIZARD',
      fullCodeName: 'Test_case_add_actual_workload',
      navigateParams: [
        {
          key: 'estimated_workload',
          value: 'estimated_workload',
          id: 'estimated_workload',
        },
        {
          key: 'remaining_workload',
          value: 'remaining_workload',
          id: 'remaining_workload',
        },
        {
          key: 'name',
          value: 'title',
          id: 'name',
        },
        {
          key: 'principal_id',
          value: 'principal_id',
          id: 'principal_id',
        },
        {
          key: 'actual_workload',
          value: 'actual_workload',
          id: 'actual_workload',
        },
        {
          key: 'workload_kind',
          value: '测试用例',
          rawValue: true,
          id: 'workload_kind',
        },
      ],
      sysImage: {
        cssClass: 'fa fa-plus',
        glyph: 'xf067@FontAwesome',
      },
      refreshMode: 1,
      timeout: 60000,
      tooltip: '添加实际工时',
      uiactionMode: 'FRONT',
      uiactionTag: 'add_actual_workload',
      uiactionType: 'DEUIACTION',
      reloadData: true,
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDataEntityId: 'plmweb.test_case',
      name: '添加实际工时',
      id: 'add_actual_workload@test_case',
    },
    {
      actionLevel: 100,
      actionTarget: 'NONE',
      caption: '添加附件',
      codeName: 'add_attachments',
      frontProcessType: 'OTHER',
      fullCodeName: 'Test_case_add_attachments',
      sysImage: {
        cssClass: 'fa fa-plus',
        glyph: 'xf067@FontAwesome',
      },
      timeout: 60000,
      uiactionMode: 'FRONT',
      uiactionTag: 'add_attachments',
      uiactionType: 'DEUIACTION',
      uilogicAttachMode: 'REPLACE',
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDEUILogicId: 'add_attachment',
      appDataEntityId: 'plmweb.test_case',
      name: '添加附件',
      id: 'add_attachments@test_case',
    },
    {
      actionLevel: 100,
      actionTarget: 'MULTIKEY',
      caption: '移入计划',
      codeName: 'case_move_plan',
      frontAppViewId: 'plmweb.test_casecase_move_plan_view',
      frontProcessType: 'WIZARD',
      fullCodeName: 'Test_case_case_move_plan',
      appDEMethodId: 'case_move_plan',
      navigateParams: [
        {
          key: 'modaloption',
          value: '{"placement": "right-start", "offsetOpts": 16}',
          rawValue: true,
          id: 'modaloption',
        },
      ],
      sysImage: {
        cssClass: 'fa fa-send-o',
        glyph: 'xf1d9@FontAwesome',
      },
      refreshMode: 1,
      successMsg: '移入计划成功',
      timeout: 60000,
      uiactionMode: 'BACKEND',
      uiactionTag: 'case_move_plan',
      uiactionType: 'DEUIACTION',
      enableConfirm: true,
      reloadData: true,
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDataEntityId: 'plmweb.test_case',
      name: '移入计划（气泡）',
      id: 'case_move_plan@test_case',
    },
    {
      actionLevel: 100,
      actionTarget: 'NONE',
      caption: '查看工时明细',
      codeName: 'check_workload_detail',
      frontProcessType: 'OTHER',
      fullCodeName: 'Test_case_check_workload_detail',
      timeout: 60000,
      tooltip: '查看工时明细',
      uiactionMode: 'FRONT',
      uiactionTag: 'check_workload_detail',
      uiactionType: 'DEUIACTION',
      uilogicAttachMode: 'REPLACE',
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDEUILogicId: 'check_workload_detail',
      appDataEntityId: 'plmweb.test_case',
      name: '查看工时明细',
      id: 'check_workload_detail@test_case',
    },
    {
      actionLevel: 100,
      actionTarget: 'MULTIKEY',
      caption: '复制用例',
      codeName: 'copy_test_case',
      frontAppViewId: 'plmweb.test_casecopy_test_case_view',
      frontProcessType: 'WIZARD',
      fullCodeName: 'Test_case_copy_test_case',
      appDEMethodId: 'copy_case',
      sysImage: {
        cssClass: 'fa fa-copy',
        glyph: 'xf0c5@FontAwesome',
      },
      refreshMode: 1,
      successMsg: '复制成功',
      timeout: 60000,
      uiactionMode: 'BACKEND',
      uiactionTag: 'copy_test_case',
      uiactionType: 'DEUIACTION',
      enableConfirm: true,
      reloadData: true,
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDataEntityId: 'plmweb.test_case',
      name: '复制用例',
      id: 'copy_test_case@test_case',
    },
    {
      actionLevel: 100,
      actionTarget: 'SINGLEKEY',
      caption: '取消关联',
      codeName: 'del_relation',
      confirmMsg: '确定取消关联？',
      fullCodeName: 'Test_case_del_relation',
      appDEMethodId: 'del_relation',
      navigateParams: [
        {
          key: 'principal_id',
          value: 'principal_id',
          id: 'principal_id',
        },
      ],
      sysImage: {
        cssClass: 'fa fa-unlink',
        glyph: 'xf127@FontAwesome',
      },
      refreshMode: 1,
      successMsg: '取消关联成功',
      timeout: 60000,
      uiactionMode: 'BACKEND',
      uiactionTag: 'del_relation',
      uiactionType: 'DEUIACTION',
      uilogicAttachMode: 'AFTER',
      enableConfirm: true,
      reloadData: true,
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDEUILogicId: 'refresh_counter',
      appDataEntityId: 'plmweb.test_case',
      name: '取消关联',
      id: 'del_relation@test_case',
    },
    {
      actionLevel: 100,
      actionTarget: 'MULTIKEY',
      caption: '删除',
      codeName: 'delete',
      confirmMsg:
        '删除测试用例会一起删除未完成测试计划内的执行用例，删除后如果想找回测试用例，可以通过测试库设置内的回收站进行恢复。',
      fullCodeName: 'Test_case_delete',
      appDEMethodId: 'delete',
      sysImage: {
        cssClass: 'fa fa-trash-o',
        glyph: 'xf014@FontAwesome',
      },
      refreshMode: 1,
      successMsg: '删除成功',
      timeout: 60000,
      uiactionMode: 'BACKEND',
      uiactionTag: 'delete',
      uiactionType: 'DEUIACTION',
      enableConfirm: true,
      reloadData: true,
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDataEntityId: 'plmweb.test_case',
      name: '删除',
      id: 'delete@test_case',
    },
    {
      actionLevel: 100,
      actionTarget: 'SINGLEKEY',
      caption: '移动',
      codeName: 'move',
      frontAppViewId: 'plmweb.test_casemove_case_view',
      frontProcessType: 'WIZARD',
      fullCodeName: 'Test_case_move',
      navigateParams: [
        {
          key: 'modaloption',
          value: '{"placement": "right-start", "offsetOpts": 16}',
          rawValue: true,
          id: 'modaloption',
        },
      ],
      sysImage: {
        cssClass: 'fa fa-arrows',
        glyph: 'xf047@FontAwesome',
      },
      timeout: 60000,
      uiactionMode: 'FRONT',
      uiactionTag: 'move',
      uiactionType: 'DEUIACTION',
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDataEntityId: 'plmweb.test_case',
      name: '移动',
      id: 'move@test_case',
    },
    {
      actionLevel: 100,
      actionTarget: 'MULTIKEY',
      caption: '移动',
      codeName: 'move_idea',
      frontAppViewId: 'plmweb.test_casemove_test_case_view',
      frontProcessType: 'WIZARD',
      fullCodeName: 'Test_case_move_idea',
      appDEMethodId: 'move_case',
      sysImage: {
        cssClass: 'fa fa-arrows-alt',
        glyph: 'xf0b2@FontAwesome',
      },
      refreshMode: 1,
      successMsg: '移动成功',
      timeout: 60000,
      uiactionMode: 'BACKEND',
      uiactionTag: 'move_idea',
      uiactionType: 'DEUIACTION',
      enableConfirm: true,
      reloadData: true,
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDataEntityId: 'plmweb.test_case',
      name: '移动用例',
      id: 'move_idea@test_case',
    },
    {
      actionLevel: 100,
      actionTarget: 'NONE',
      caption: '添加用例',
      codeName: 'others_add_relation_test_case',
      frontProcessType: 'OTHER',
      fullCodeName: 'Test_case_others_add_relation_test_case',
      timeout: 60000,
      uiactionMode: 'FRONT',
      uiactionTag: 'others_add_relation_test_case',
      uiactionType: 'DEUIACTION',
      uilogicAttachMode: 'REPLACE',
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDEUILogicId: 'show_choose_area',
      appDataEntityId: 'plmweb.test_case',
      name: '添加测试用例（其他实体关联）',
      id: 'others_add_relation_test_case@test_case',
    },
    {
      actionLevel: 100,
      actionTarget: 'MULTIKEY',
      caption: '恢复',
      codeName: 'recover',
      confirmMsg: '确认恢复？',
      fullCodeName: 'Test_case_recover',
      appDEMethodId: 'recover',
      sysImage: {
        cssClass: 'fa fa-refresh',
        glyph: 'xf021@FontAwesome',
      },
      refreshMode: 1,
      successMsg: '恢复成功',
      timeout: 60000,
      uiactionMode: 'BACKEND',
      uiactionTag: 'recover',
      uiactionType: 'DEUIACTION',
      enableConfirm: true,
      reloadData: true,
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDataEntityId: 'plmweb.test_case',
      name: '恢复',
      id: 'recover@test_case',
    },
    {
      actionLevel: 100,
      actionTarget: 'MULTIKEY',
      caption: '设置重要程度',
      codeName: 'set_level',
      frontAppViewId: 'plmweb.test_caseset_level',
      frontProcessType: 'WIZARD',
      fullCodeName: 'Test_case_set_level',
      appDEMethodId: 'set_level',
      sysImage: {
        cssClass: 'fa fa-flag-o',
        glyph: 'xf11d@FontAwesome',
      },
      refreshMode: 1,
      successMsg: '设置重要程度成功',
      timeout: 60000,
      uiactionMode: 'BACKEND',
      uiactionTag: 'set_level',
      uiactionType: 'DEUIACTION',
      enableConfirm: true,
      reloadData: true,
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDataEntityId: 'plmweb.test_case',
      name: '设置重要程度',
      id: 'set_level@test_case',
    },
    {
      actionLevel: 100,
      actionTarget: 'MULTIKEY',
      caption: '设置维护人',
      codeName: 'set_maintenance',
      frontAppViewId: 'plmweb.test_caseset_maintenance_view',
      frontProcessType: 'WIZARD',
      fullCodeName: 'Test_case_set_maintenance',
      appDEMethodId: 'set_maintenance',
      sysImage: {
        cssClass: 'fa fa-user-plus',
        glyph: 'xf234@FontAwesome',
      },
      refreshMode: 1,
      successMsg: '设置维护人成功',
      timeout: 60000,
      uiactionMode: 'BACKEND',
      uiactionTag: 'set_maintenance',
      uiactionType: 'DEUIACTION',
      enableConfirm: true,
      reloadData: true,
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDataEntityId: 'plmweb.test_case',
      name: '设置维护人',
      id: 'set_maintenance@test_case',
    },
    {
      actionLevel: 100,
      actionTarget: 'MULTIKEY',
      caption: '设置评审状态',
      codeName: 'set_state',
      frontAppViewId: 'plmweb.test_caseset_state_view',
      frontProcessType: 'WIZARD',
      fullCodeName: 'Test_case_set_state',
      appDEMethodId: 'set_state',
      sysImage: {
        cssClass: 'fa fa-edit',
        glyph: 'xf044@FontAwesome',
      },
      refreshMode: 1,
      successMsg: '设置评审状态成功',
      timeout: 60000,
      uiactionMode: 'BACKEND',
      uiactionTag: 'set_state',
      uiactionType: 'DEUIACTION',
      enableConfirm: true,
      reloadData: true,
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDataEntityId: 'plmweb.test_case',
      name: '设置评审状态',
      id: 'set_state@test_case',
    },
    {
      actionLevel: 100,
      actionTarget: 'NONE',
      caption: '上传',
      codeName: 'upload_attachment',
      frontProcessType: 'OTHER',
      fullCodeName: 'Test_case_upload_attachment',
      sysPFPluginId: 'file_upload',
      timeout: 60000,
      uiactionMode: 'FRONT',
      uiactionTag: 'upload_attachment',
      uiactionType: 'DEUIACTION',
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDataEntityId: 'plmweb.test_case',
      name: '上传附件',
      id: 'upload_attachment@test_case',
    },
  ],
  appDEUILogics: [
    {
      codeName: 'add_attachment',
      defaultParamName: 'Default',
      logicName: '添加附件数据（通用）',
      deuilogicNodes: [
        {
          codeName: 'Begin',
          leftPos: 140,
          logicNodeType: 'BEGIN',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'deuiaction1',
              srcDEUILogicNodeId: 'begin',
              id: '连接名称',
            },
          ],
          topPos: -40,
          parallelOutput: true,
          name: '开始',
          id: 'begin',
        },
        {
          codeName: 'END1',
          leftPos: 398,
          logicNodeType: 'END',
          topPos: 370,
          name: '结束',
          id: 'end1',
        },
        {
          codeName: 'PREPAREJSPARAM1',
          leftPos: 358,
          logicNodeType: 'PREPAREJSPARAM',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'rawjscode4',
              srcDEUILogicNodeId: 'preparejsparam1',
              id: '连接名称',
            },
          ],
          deuilogicNodeParams: [
            {
              dstDEUILogicParamId: 'grid',
              paramAction: 'SETPARAMVALUE',
              srcFieldName: 'details.attachments.mdController',
              srcDEUILogicParamId: 'form',
              srcValueType: 'SRCDLPARAM',
              name: 'form[details.attachments.mdController] ==> grid',
              id: 'form[details.attachments.mdcontroller] ==> grid',
            },
          ],
          topPos: 148,
          name: '绑定表格部件',
          id: 'preparejsparam1',
        },
        {
          dstAppDEUIActionId: 'upload_attachment@test_case',
          dstAppDataEntityId: 'plmweb.test_case',
          codeName: 'DEUIACTION1',
          dstDEUILogicParamId: 'files',
          leftPos: 100,
          logicNodeType: 'DEUIACTION',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'preparejsparam1',
              srcDEUILogicNodeId: 'deuiaction1',
              id: '连接名称',
            },
          ],
          topPos: 148,
          name: '界面行为',
          id: 'deuiaction1',
        },
        {
          code: '// 计算新建默认值\r\nconst defaultData = uiLogic.grid.calcDefaultValue({}, true);\r\nuiLogic.attach = uiLogic.files.map(item => \r\n    {\r\n        return {\r\n            name: item.name,\r\n            file_id: item.id,\r\n            id: item.uuid,\r\n            ...defaultData,\r\n        }\r\n    }\r\n)',
          codeName: 'RAWJSCODE4',
          leftPos: 670,
          logicNodeType: 'RAWJSCODE',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'viewctrlinvoke2',
              srcDEUILogicNodeId: 'rawjscode4',
              id: '连接名称',
            },
          ],
          topPos: 140,
          name: '设置附件参数',
          id: 'rawjscode4',
        },
        {
          invokeCtrlId: 'grid',
          invokeMethod: 'addAttachMent',
          invokeParamId: 'attach',
          codeName: 'VIEWCTRLINVOKE2',
          leftPos: 670,
          logicNodeType: 'VIEWCTRLINVOKE',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'end1',
              srcDEUILogicNodeId: 'viewctrlinvoke2',
              id: '连接名称',
            },
          ],
          topPos: 378,
          name: '视图部件调用',
          id: 'viewctrlinvoke2',
        },
      ],
      deuilogicParams: [
        {
          codeName: 'files',
          entityListParam: true,
          name: '上传文件',
          id: 'files',
        },
        {
          codeName: 'grid',
          ctrlParam: true,
          name: '重复器表格',
          id: 'grid',
        },
        {
          codeName: 'Default',
          default: true,
          entityParam: true,
          name: '传入变量',
          id: 'default',
        },
        {
          codeName: 'attach',
          entityListParam: true,
          name: '附件',
          id: 'attach',
        },
        {
          codeName: 'form',
          ctrlParam: true,
          name: '表单',
          id: 'form',
        },
        {
          codeName: 'view',
          activeViewParam: true,
          name: '当前视图对象',
          id: 'view',
        },
      ],
      startDEUILogicNodeId: 'begin',
      name: '添加附件数据（通用）',
      id: 'add_attachment',
    },
    {
      codeName: 'check_workload_detail',
      defaultParamName: 'Default',
      logicName: '查看工时明细',
      deuilogicNodes: [
        {
          codeName: 'Begin',
          leftPos: 200,
          logicNodeType: 'BEGIN',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'rawjscode1',
              srcDEUILogicNodeId: 'begin',
              id: '连接名称',
            },
          ],
          topPos: 200,
          name: '开始',
          id: 'begin',
        },
        {
          code: 'uiLogic.view.ctx.controllersMap.get("form").details.grouppanel8.state.visible=false;\r\nuiLogic.view.ctx.controllersMap.get("form").details.grouppanel9.state.visible=true;',
          codeName: 'RAWJSCODE1',
          leftPos: 160,
          logicNodeType: 'RAWJSCODE',
          topPos: 350,
          name: '切换显示组件',
          id: 'rawjscode1',
        },
      ],
      deuilogicParams: [
        {
          codeName: 'Default',
          default: true,
          entityParam: true,
          name: '传入变量',
          id: 'default',
        },
        {
          codeName: 'view',
          activeViewParam: true,
          name: '当前视图对象',
          id: 'view',
        },
      ],
      startDEUILogicNodeId: 'begin',
      name: '查看工时明细',
      id: 'check_workload_detail',
    },
    {
      codeName: 'create_category',
      defaultParamName: 'Default',
      logicName: '新建类别',
      deuilogicNodes: [
        {
          codeName: 'Begin',
          leftPos: 200,
          logicNodeType: 'BEGIN',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'preparejsparam1',
              srcDEUILogicNodeId: 'begin',
              id: '连接名称',
            },
          ],
          topPos: 200,
          parallelOutput: true,
          name: '开始',
          id: 'begin',
        },
        {
          codeName: 'PREPAREJSPARAM1',
          leftPos: 427,
          logicNodeType: 'PREPAREJSPARAM',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'viewctrlinvoke1',
              srcDEUILogicNodeId: 'preparejsparam1',
              id: '连接名称',
            },
          ],
          deuilogicNodeParams: [
            {
              dstFieldName: 'nodeType',
              dstDEUILogicParamId: 'node_param',
              paramAction: 'SETPARAMVALUE',
              srcValue: 'node_2',
              srcValueType: 'SRCVALUE',
              name: '直接值[node_2] ==> node_param[nodeType]',
              id: '直接值[node_2] ==> node_param[nodetype]',
            },
            {
              dstFieldName: 'owner_id',
              dstDEUILogicParamId: 'defaultvalue',
              paramAction: 'SETPARAMVALUE',
              srcFieldName: 'library',
              srcDEUILogicParamId: 'context',
              srcValueType: 'SRCDLPARAM',
              name: 'context[library] ==> defaultValue[owner_id]',
              id: 'context[library] ==> defaultvalue[owner_id]',
            },
            {
              dstFieldName: 'owner_type',
              dstDEUILogicParamId: 'defaultvalue',
              paramAction: 'SETPARAMVALUE',
              srcValue: 'library',
              srcValueType: 'SRCVALUE',
              name: '直接值[library] ==> defaultValue[owner_type]',
              id: '直接值[library] ==> defaultvalue[owner_type]',
            },
            {
              dstFieldName: 'owner_subtype',
              dstDEUILogicParamId: 'defaultvalue',
              paramAction: 'SETPARAMVALUE',
              srcValue: 'test_plan',
              srcValueType: 'SRCVALUE',
              name: '直接值[test_plan] ==> defaultValue[owner_subtype]',
              id: '直接值[test_plan] ==> defaultvalue[owner_subtype]',
            },
            {
              dstFieldName: 'defaultValue',
              dstDEUILogicParamId: 'node_param',
              paramAction: 'SETPARAMVALUE',
              srcDEUILogicParamId: 'defaultvalue',
              srcValueType: 'SRCDLPARAM',
              name: 'defaultValue ==> node_param[defaultValue]',
              id: 'defaultvalue ==> node_param[defaultvalue]',
            },
          ],
          topPos: 208,
          name: '准备参数',
          id: 'preparejsparam1',
        },
        {
          invokeCtrlId: 'treeexpbar_tree',
          invokeMethod: 'newTreeNode',
          invokeParamId: 'node_param',
          codeName: 'VIEWCTRLINVOKE1',
          leftPos: 721,
          logicNodeType: 'VIEWCTRLINVOKE',
          topPos: 208,
          name: '视图部件调用',
          id: 'viewctrlinvoke1',
        },
      ],
      deuilogicParams: [
        {
          codeName: 'context',
          navContextParam: true,
          name: '上下文对象',
          id: 'context',
        },
        {
          codeName: 'Default',
          default: true,
          entityParam: true,
          name: '传入变量',
          id: 'default',
        },
        {
          codeName: 'node_param',
          entityParam: true,
          name: '节点参数',
          id: 'node_param',
        },
        {
          codeName: 'defaultValue',
          entityParam: true,
          name: '默认值对象',
          id: 'defaultvalue',
        },
        {
          codeName: 'treeexpbar_tree',
          ctrlParam: true,
          name: '树部件',
          id: 'treeexpbar_tree',
        },
      ],
      startDEUILogicNodeId: 'begin',
      name: '新建类别',
      id: 'create_category',
    },
    {
      codeName: 'create_section',
      defaultParamName: 'Default',
      logicName: '新建分组',
      deuilogicNodes: [
        {
          codeName: 'Begin',
          leftPos: 220,
          logicNodeType: 'BEGIN',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'preparejsparam1',
              srcDEUILogicNodeId: 'begin',
              id: '连接名称',
            },
          ],
          topPos: 230,
          parallelOutput: true,
          name: '开始',
          id: 'begin',
        },
        {
          invokeCtrlId: 'treeexpbar_tree',
          invokeMethod: 'newTreeNode',
          invokeParamId: 'node_param',
          codeName: 'VIEWCTRLINVOKE1',
          leftPos: 722,
          logicNodeType: 'VIEWCTRLINVOKE',
          topPos: 238,
          name: '视图部件调用',
          id: 'viewctrlinvoke1',
        },
        {
          codeName: 'PREPAREJSPARAM1',
          leftPos: 440,
          logicNodeType: 'PREPAREJSPARAM',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'viewctrlinvoke1',
              srcDEUILogicNodeId: 'preparejsparam1',
              id: '连接名称',
            },
          ],
          deuilogicNodeParams: [
            {
              dstFieldName: 'nodeType',
              dstDEUILogicParamId: 'node_param',
              paramAction: 'SETPARAMVALUE',
              srcValue: 'node_1',
              srcValueType: 'SRCVALUE',
              name: '直接值[node_1] ==> node_param[nodeType]',
              id: '直接值[node_1] ==> node_param[nodetype]',
            },
            {
              dstFieldName: 'owner_subtype',
              dstDEUILogicParamId: 'defaultvalue',
              paramAction: 'SETPARAMVALUE',
              srcValue: 'test_plan',
              srcValueType: 'SRCVALUE',
              name: '直接值[test_plan] ==> defaultValue[owner_subtype]',
              id: '直接值[test_plan] ==> defaultvalue[owner_subtype]',
            },
            {
              dstFieldName: 'owner_id',
              dstDEUILogicParamId: 'defaultvalue',
              paramAction: 'SETPARAMVALUE',
              srcFieldName: 'library',
              srcDEUILogicParamId: 'context',
              srcValueType: 'SRCDLPARAM',
              name: 'context[library] ==> defaultValue[owner_id]',
              id: 'context[library] ==> defaultvalue[owner_id]',
            },
            {
              dstFieldName: 'owner_type',
              dstDEUILogicParamId: 'defaultvalue',
              paramAction: 'SETPARAMVALUE',
              srcValue: 'library',
              srcValueType: 'SRCVALUE',
              name: '直接值[library] ==> defaultValue[owner_type]',
              id: '直接值[library] ==> defaultvalue[owner_type]',
            },
            {
              dstFieldName: 'defaultValue',
              dstDEUILogicParamId: 'node_param',
              paramAction: 'SETPARAMVALUE',
              srcDEUILogicParamId: 'defaultvalue',
              srcValueType: 'SRCDLPARAM',
              name: 'defaultValue ==> node_param[defaultValue]',
              id: 'defaultvalue ==> node_param[defaultvalue]',
            },
          ],
          topPos: 238,
          name: '准备参数',
          id: 'preparejsparam1',
        },
      ],
      deuilogicParams: [
        {
          codeName: 'node_param',
          entityParam: true,
          name: '节点参数',
          id: 'node_param',
        },
        {
          codeName: 'defaultValue',
          entityParam: true,
          name: '默认值',
          id: 'defaultvalue',
        },
        {
          codeName: 'Default',
          default: true,
          entityParam: true,
          name: '传入变量',
          id: 'default',
        },
        {
          codeName: 'context',
          navContextParam: true,
          name: '上下文对象',
          id: 'context',
        },
        {
          codeName: 'treeexpbar_tree',
          ctrlParam: true,
          name: '树部件',
          id: 'treeexpbar_tree',
        },
      ],
      startDEUILogicNodeId: 'begin',
      name: '新建分组',
      id: 'create_section',
    },
    {
      codeName: 'edit_section_or_category',
      defaultParamName: 'Default',
      logicName: '编辑类别或分组',
      deuilogicNodes: [
        {
          codeName: 'Begin',
          leftPos: -10,
          logicNodeType: 'BEGIN',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'debugparam2',
              srcDEUILogicNodeId: 'begin',
              id: '连接名称',
            },
          ],
          topPos: 201,
          parallelOutput: true,
          name: '开始',
          id: 'begin',
        },
        {
          codeName: 'DEBUGPARAM2',
          dstDEUILogicParamId: 'default',
          leftPos: 60,
          logicNodeType: 'DEBUGPARAM',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'preparejsparam1',
              srcDEUILogicNodeId: 'debugparam2',
              id: '连接名称',
            },
          ],
          topPos: 209,
          name: 'default',
          id: 'debugparam2',
        },
        {
          invokeCtrlId: 'treeexpbar_tree',
          invokeMethod: 'updateTreeNode',
          invokeParamId: 'node_param',
          codeName: 'VIEWCTRLINVOKE1',
          leftPos: 660,
          logicNodeType: 'VIEWCTRLINVOKE',
          topPos: 208,
          name: '视图部件调用',
          id: 'viewctrlinvoke1',
        },
        {
          codeName: 'DEBUGPARAM3',
          dstDEUILogicParamId: 'node_param',
          leftPos: 487,
          logicNodeType: 'DEBUGPARAM',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'viewctrlinvoke1',
              srcDEUILogicNodeId: 'debugparam3',
              id: '连接名称',
            },
          ],
          topPos: 209,
          name: 'node_param',
          id: 'debugparam3',
        },
        {
          codeName: 'PREPAREJSPARAM1',
          leftPos: 274,
          logicNodeType: 'PREPAREJSPARAM',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'debugparam3',
              srcDEUILogicNodeId: 'preparejsparam1',
              id: '连接名称',
            },
          ],
          deuilogicNodeParams: [
            {
              dstFieldName: 'nodeKey',
              dstDEUILogicParamId: 'node_param',
              paramAction: 'SETPARAMVALUE',
              srcFieldName: '_id',
              srcDEUILogicParamId: 'default',
              srcValueType: 'SRCDLPARAM',
              name: 'Default[_id] ==> node_param[nodeKey]',
              id: 'default[_id] ==> node_param[nodekey]',
            },
          ],
          topPos: 208,
          name: '准备参数',
          id: 'preparejsparam1',
        },
      ],
      deuilogicParams: [
        {
          codeName: 'treeexpbar_tree',
          ctrlParam: true,
          name: '树部件',
          id: 'treeexpbar_tree',
        },
        {
          codeName: 'Default',
          default: true,
          entityParam: true,
          name: '传入变量',
          id: 'default',
        },
        {
          codeName: 'node_param',
          entityParam: true,
          name: '节点参数',
          id: 'node_param',
        },
      ],
      startDEUILogicNodeId: 'begin',
      name: '编辑类别或分组',
      id: 'edit_section_or_category',
    },
    {
      codeName: 'get_actual_workload',
      defaultParamName: 'Default',
      logicName: '获取实际工时',
      deuilogicNodes: [
        {
          codeName: 'Begin',
          leftPos: 200,
          logicNodeType: 'BEGIN',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'deaction1',
              srcDEUILogicNodeId: 'begin',
              id: '连接名称',
            },
          ],
          topPos: 200,
          parallelOutput: true,
          name: '开始',
          id: 'begin',
        },
        {
          code: 'var form_data = view.layoutPanel.panelItems.form.control.data;\r\nvar remaining_workload = form_data.remaining_workload;\r\nvar actual_workload = uiLogic.temp.actual_workload;\r\nform_data.actual_workload = actual_workload;\r\nvar estimated_workload = form_data.estimated_workload;  \r\nvar estimated = 0; // 预估工时\r\nif(estimated_workload){\r\n\testimated = Number(estimated_workload);\r\n}\r\nvar actual = 0; // 之前登记的实际工时\r\nif(actual_workload){\r\n\tactual = Number(actual_workload);\r\n}\r\nvar remaining = 0;\r\nif(remaining_workload){\r\n\tremaining = Number(remaining_workload);\r\n}\r\n// 计算工时进度\r\nif((actual + remaining) != 0){\r\n\tvar schedule = ((actual / (actual + remaining)) * 100).toFixed(1);\r\n\tform_data.workload_schedule = schedule;\r\n}',
          codeName: 'RAWJSCODE1',
          leftPos: 160,
          logicNodeType: 'RAWJSCODE',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'end1',
              srcDEUILogicNodeId: 'rawjscode1',
              id: '连接名称',
            },
          ],
          topPos: 570,
          name: '注入脚本代码',
          id: 'rawjscode1',
        },
        {
          dstAppDEActionId: 'get_actual_workload',
          dstAppDataEntityId: 'plmweb.test_case',
          retDEUILogicParamId: 'temp',
          codeName: 'DEACTION1',
          dstDEUILogicParamId: 'temp',
          leftPos: 160,
          logicNodeType: 'DEACTION',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'rawjscode1',
              srcDEUILogicNodeId: 'deaction1',
              id: '连接名称',
            },
          ],
          topPos: 364,
          name: '获取实际工时',
          id: 'deaction1',
        },
        {
          returnParamId: 'default',
          returnType: 'LOGICPARAM',
          codeName: 'END1',
          leftPos: 200,
          logicNodeType: 'END',
          topPos: 710,
          name: '结束',
          id: 'end1',
        },
      ],
      deuilogicParams: [
        {
          codeName: 'temp',
          entityParam: true,
          name: '临时数据对象',
          id: 'temp',
        },
        {
          codeName: 'Default',
          default: true,
          entityParam: true,
          name: '传入变量',
          id: 'default',
        },
      ],
      startDEUILogicNodeId: 'begin',
      name: '获取实际工时',
      id: 'get_actual_workload',
    },
    {
      codeName: 'get_test_case_total',
      defaultParamName: 'Default',
      logicName: '获取测试用例总条数',
      deuilogicNodes: [
        {
          codeName: 'Begin',
          leftPos: 200,
          logicNodeType: 'BEGIN',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'rawjscode1',
              srcDEUILogicNodeId: 'begin',
              id: '连接名称',
            },
          ],
          topPos: 200,
          parallelOutput: true,
          name: '开始',
          id: 'begin',
        },
        {
          code: 'const total = uiLogic.ctrl.state.total;\r\nuiLogic.view.layoutPanel.state.data.total = total;\r\nif(!total){\r\n    view.layoutPanel.panelItems.grid.state.visible = false\r\n}else{\r\n    view.layoutPanel.panelItems.grid.state.visible = true\r\n}',
          codeName: 'RAWJSCODE1',
          leftPos: 160,
          logicNodeType: 'RAWJSCODE',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'end1',
              srcDEUILogicNodeId: 'rawjscode1',
              id: '连接名称',
            },
          ],
          topPos: 350,
          name: '设置总条数',
          id: 'rawjscode1',
        },
        {
          codeName: 'END1',
          leftPos: 200,
          logicNodeType: 'END',
          topPos: 461,
          name: '结束',
          id: 'end1',
        },
      ],
      deuilogicParams: [
        {
          codeName: 'Default',
          default: true,
          entityParam: true,
          name: '传入变量',
          id: 'default',
        },
        {
          codeName: 'VIEW',
          activeViewParam: true,
          name: '当前视图对象',
          id: 'view',
        },
        {
          codeName: 'CTRL',
          activeCtrlParam: true,
          ctrlParam: true,
          name: '当前部件对象',
          id: 'ctrl',
        },
      ],
      startDEUILogicNodeId: 'begin',
      name: '获取测试用例总条数',
      id: 'get_test_case_total',
    },
    {
      codeName: 'refresh_counter',
      defaultParamName: 'Default',
      logicName: '触发计数器刷新',
      deuilogicNodes: [
        {
          codeName: 'Begin',
          leftPos: 200,
          logicNodeType: 'BEGIN',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'rawjscode1',
              srcDEUILogicNodeId: 'begin',
              id: '连接名称',
            },
          ],
          topPos: 200,
          parallelOutput: true,
          name: '开始',
          id: 'begin',
        },
        {
          codeName: 'END1',
          leftPos: 756,
          logicNodeType: 'END',
          topPos: 200,
          name: '结束',
          id: 'end1',
        },
        {
          code: 'ibiz.mc.command.update.send({ srfdecodename: context.principal_type})',
          codeName: 'RAWJSCODE1',
          leftPos: 434,
          logicNodeType: 'RAWJSCODE',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'end1',
              srcDEUILogicNodeId: 'rawjscode1',
              id: '连接名称',
            },
          ],
          topPos: 208,
          name: '注入脚本代码',
          id: 'rawjscode1',
        },
      ],
      deuilogicParams: [
        {
          codeName: 'Default',
          default: true,
          entityParam: true,
          name: '传入变量',
          id: 'default',
        },
      ],
      startDEUILogicNodeId: 'begin',
      name: '触发计数器刷新',
      id: 'refresh_counter',
    },
    {
      codeName: 'relation_test_case_change',
      defaultParamName: 'Default',
      logicName: '关联测试用例值变更',
      deuilogicNodes: [
        {
          codeName: 'Begin',
          leftPos: 630,
          logicNodeType: 'BEGIN',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'preparejsparam1',
              srcDEUILogicNodeId: 'begin',
              id: '连接名称',
            },
          ],
          topPos: 20,
          name: '开始',
          id: 'begin',
        },
        {
          codeName: 'PREPAREJSPARAM1',
          leftPos: 590,
          logicNodeType: 'PREPAREJSPARAM',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'rawjscode2',
              srcDEUILogicNodeId: 'preparejsparam1',
              id: '连接名称',
            },
          ],
          deuilogicNodeParams: [
            {
              dstDEUILogicParamId: 'grid',
              paramAction: 'SETPARAMVALUE',
              srcFieldName: 'layoutPanel.panelItems.grid.control',
              srcDEUILogicParamId: 'view',
              srcValueType: 'SRCDLPARAM',
              name: 'view[layoutPanel.panelItems.grid.control] ==> grid',
              id: 'view[layoutpanel.panelitems.grid.control] ==> grid',
            },
          ],
          topPos: 208,
          name: '绑定表格部件',
          id: 'preparejsparam1',
        },
        {
          code: "let choose = uiLogic.default.choose_data;\r\nif(choose != null && choose != ''){\r\n    uiLogic.dto.srfactionparam = JSON.parse(choose);\r\n    uiLogic.dto.principal_id = view.context.principal_id;\r\n    uiLogic.dto.principal_type = view.context.principal_type;\r\n    uiLogic.dto.target_type = view.context.target_type;\r\n}",
          codeName: 'RAWJSCODE2',
          leftPos: 590,
          logicNodeType: 'RAWJSCODE',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'deaction1',
              deuilogicLinkGroupCond: {
                groupOP: 'AND',
                deuilogicLinkConds: [
                  {
                    condOP: 'ISNOTNULL',
                    dstFieldName: 'srfactionparam',
                    dstLogicParamId: 'dto',
                    paramValue: '0',
                    value: '0',
                    logicType: 'SINGLE',
                    name: 'dto[srfactionparam] 值不为空(NotNil) 0',
                    id: 'dto[srfactionparam] 值不为空(notnil) 0',
                  },
                ],
                logicType: 'GROUP',
              },
              srcDEUILogicNodeId: 'rawjscode2',
              id: '连接名称',
            },
            {
              dstDEUILogicNodeId: 'rawjscode1',
              deuilogicLinkGroupCond: {
                groupOP: 'AND',
                deuilogicLinkConds: [
                  {
                    condOP: 'ISNULL',
                    dstFieldName: 'srfactionparam',
                    dstLogicParamId: 'dto',
                    logicType: 'SINGLE',
                    name: 'dto[srfactionparam] 值为空(Nil)',
                    id: 'dto[srfactionparam] 值为空(nil)',
                  },
                ],
                logicType: 'GROUP',
              },
              srcDEUILogicNodeId: 'rawjscode2',
              id: '连接名称',
            },
          ],
          topPos: 320,
          name: '获取选中列表',
          id: 'rawjscode2',
        },
        {
          code: 'ibiz.mc.command.update.send({ srfdecodename: context.principal_type})',
          codeName: 'RAWJSCODE3',
          leftPos: 590,
          logicNodeType: 'RAWJSCODE',
          topPos: 752,
          name: '触发计数器刷新',
          id: 'rawjscode3',
        },
        {
          invokeCtrlId: 'grid',
          invokeMethod: 'refresh',
          invokeParamId: 'default',
          codeName: 'VIEWCTRLINVOKE1',
          leftPos: 590,
          logicNodeType: 'VIEWCTRLINVOKE',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'rawjscode3',
              srcDEUILogicNodeId: 'viewctrlinvoke1',
              id: '连接名称',
            },
          ],
          topPos: 670,
          name: '表格刷新',
          id: 'viewctrlinvoke1',
        },
        {
          dstAppDEActionId: 'others_relation_case',
          dstAppDataEntityId: 'plmweb.test_case',
          codeName: 'DEACTION1',
          dstDEUILogicParamId: 'dto',
          leftPos: 820,
          logicNodeType: 'DEACTION',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'rawjscode1',
              srcDEUILogicNodeId: 'deaction1',
              id: '连接名称',
            },
          ],
          topPos: 410,
          name: '进行关联操作',
          id: 'deaction1',
        },
        {
          code: 'const panel = view.layoutPanel.panelItems.choose_data;\r\nif (panel) {\r\n    panel.state.visible = false;\r\n}\r\nuiLogic.default.choose_data = null;',
          codeName: 'RAWJSCODE1',
          leftPos: 590,
          logicNodeType: 'RAWJSCODE',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'viewctrlinvoke1',
              deuilogicLinkGroupCond: {
                groupOP: 'AND',
                deuilogicLinkConds: [
                  {
                    condOP: 'ISNOTNULL',
                    dstFieldName: 'srfactionparam',
                    dstLogicParamId: 'dto',
                    logicType: 'SINGLE',
                    name: 'dto[srfactionparam] 值不为空(NotNil)',
                    id: 'dto[srfactionparam] 值不为空(notnil)',
                  },
                ],
                logicType: 'GROUP',
              },
              srcDEUILogicNodeId: 'rawjscode1',
              id: '连接名称',
            },
          ],
          topPos: 528,
          name: '隐藏下拉框并清空下拉框内容',
          id: 'rawjscode1',
        },
      ],
      deuilogicParams: [
        {
          codeName: 'Default',
          default: true,
          entityParam: true,
          name: '传入变量',
          id: 'default',
        },
        {
          codeName: 'grid',
          ctrlParam: true,
          name: '表格对象',
          id: 'grid',
        },
        {
          codeName: 'view',
          activeViewParam: true,
          name: '视图对象',
          id: 'view',
        },
        {
          codeName: 'dto',
          entityParam: true,
          name: '传入后台对象',
          id: 'dto',
        },
      ],
      startDEUILogicNodeId: 'begin',
      name: '关联测试用例值变更',
      id: 'relation_test_case_change',
    },
    {
      codeName: 'remove_section_or_category',
      defaultParamName: 'Default',
      logicName: '删除类别或分组',
      deuilogicNodes: [
        {
          codeName: 'Begin',
          leftPos: 200,
          logicNodeType: 'BEGIN',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'preparejsparam1',
              srcDEUILogicNodeId: 'begin',
              id: '连接名称',
            },
          ],
          topPos: 200,
          parallelOutput: true,
          name: '开始',
          id: 'begin',
        },
        {
          invokeCtrlId: 'treeexpbar_tree',
          invokeMethod: 'removeTreeNode',
          invokeParamId: 'node_param',
          codeName: 'VIEWCTRLINVOKE1',
          leftPos: 640,
          logicNodeType: 'VIEWCTRLINVOKE',
          topPos: 208,
          name: '视图部件调用',
          id: 'viewctrlinvoke1',
        },
        {
          codeName: 'PREPAREJSPARAM1',
          leftPos: 390,
          logicNodeType: 'PREPAREJSPARAM',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'viewctrlinvoke1',
              srcDEUILogicNodeId: 'preparejsparam1',
              id: '连接名称',
            },
          ],
          deuilogicNodeParams: [
            {
              dstDEUILogicParamId: 'node_param',
              paramAction: 'BINDPARAM',
              srcFieldName: '_id',
              srcDEUILogicParamId: 'default',
              srcValueType: 'SRCDLPARAM',
              name: 'Default[_id] ==> node_param',
              id: 'default[_id] ==> node_param',
            },
          ],
          topPos: 208,
          name: '准备参数',
          id: 'preparejsparam1',
        },
      ],
      deuilogicParams: [
        {
          codeName: 'node_param',
          stdDataType: 25,
          simpleParam: true,
          name: '节点参数',
          id: 'node_param',
        },
        {
          codeName: 'treeexpbar_tree',
          ctrlParam: true,
          name: '树部件',
          id: 'treeexpbar_tree',
        },
        {
          codeName: 'Default',
          default: true,
          entityParam: true,
          name: '传入变量',
          id: 'default',
        },
      ],
      startDEUILogicNodeId: 'begin',
      name: '删除类别或分组',
      id: 'remove_section_or_category',
    },
    {
      codeName: 'show_choose_area',
      defaultParamName: 'Default',
      logicName: '选择下拉框区域展示',
      deuilogicNodes: [
        {
          codeName: 'Begin',
          leftPos: 200,
          logicNodeType: 'BEGIN',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'preparejsparam1',
              srcDEUILogicNodeId: 'begin',
              id: '连接名称',
            },
          ],
          topPos: 200,
          parallelOutput: true,
          name: '开始',
          id: 'begin',
        },
        {
          codeName: 'PREPAREJSPARAM1',
          leftPos: 374,
          logicNodeType: 'PREPAREJSPARAM',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'preparejsparam2',
              srcDEUILogicNodeId: 'preparejsparam1',
              id: '连接名称',
            },
          ],
          deuilogicNodeParams: [
            {
              dstDEUILogicParamId: 'choose_data_state_obj',
              paramAction: 'SETPARAMVALUE',
              srcFieldName: 'layoutPanel.panelItems.choose_data.state',
              srcDEUILogicParamId: 'view',
              srcValueType: 'SRCDLPARAM',
              name: 'view[layoutPanel.panelItems.choose_data.state] ==> work_item_obj',
              id: 'view[layoutpanel.panelitems.choose_data.state] ==> work_item_obj',
            },
          ],
          topPos: 208,
          name: '绑定部件对象',
          id: 'preparejsparam1',
        },
        {
          codeName: 'PREPAREJSPARAM2',
          leftPos: 650,
          logicNodeType: 'PREPAREJSPARAM',
          deuilogicNodeParams: [
            {
              dstFieldName: 'visible',
              dstDEUILogicParamId: 'choose_data_state_obj',
              paramAction: 'SETPARAMVALUE',
              srcValue: 'true',
              srcValueType: 'SRCVALUE',
              id: '直接值[true] ==> choose_data_state_obj[visible]',
            },
          ],
          topPos: 208,
          name: '设置选择区域显示',
          id: 'preparejsparam2',
        },
      ],
      deuilogicParams: [
        {
          codeName: 'choose_data_state_obj',
          entityParam: true,
          name: '选项框状态对象',
          id: 'choose_data_state_obj',
        },
        {
          codeName: 'view',
          activeViewParam: true,
          name: '当前视图',
          id: 'view',
        },
        {
          codeName: 'Default',
          default: true,
          entityParam: true,
          name: '传入变量',
          id: 'default',
        },
      ],
      startDEUILogicNodeId: 'begin',
      name: '选择下拉框区域展示',
      id: 'show_choose_area',
    },
  ],
  deopprivs: [
    {
      logicName: '建立',
      mapDEName: 'LIBRARY',
      mapDEOPPrivName: 'SUBDATA',
      name: 'CREATE',
      id: 'library__create',
    },
    {
      logicName: '建立',
      name: 'CREATE',
      id: 'create',
    },
    {
      logicName: '删除',
      name: 'DELETE',
      id: 'delete',
    },
    {
      logicName: '删除',
      mapDEName: 'LIBRARY',
      mapDEOPPrivName: 'SUBDATA',
      name: 'DELETE',
      id: 'library__delete',
    },
    {
      logicName: '读取',
      name: 'READ',
      id: 'read',
    },
    {
      logicName: '读取',
      mapDEName: 'LIBRARY',
      mapDEOPPrivName: 'READ',
      name: 'READ',
      id: 'library__read',
    },
    {
      logicName: '更新',
      name: 'UPDATE',
      id: 'update',
    },
    {
      logicName: '更新',
      mapDEName: 'LIBRARY',
      mapDEOPPrivName: 'SUBDATA',
      name: 'UPDATE',
      id: 'library__update',
    },
  ],
  codeName: 'Test_case',
  deapicodeName: 'test_case',
  deapicodeName2: 'test_cases',
  deapitag: 'TEST_CASE',
  dataAccCtrlArch: 1,
  dataAccCtrlMode: 3,
  defaultAppDEDataImportId: 'import_test_case',
  enableUIActions: 15,
  keyAppDEFieldId: 'id',
  lnlanguageRes: {
    lanResTag: 'DE.LNAME.TEST_CASE',
  },
  logicName: '用例',
  majorAppDEFieldId: 'title',
  minorAppDERSs: [
    {
      actionRSMode: 1,
      codeName: 'test_cases',
      majorAppDataEntityId: 'plmweb.library',
      parentAppDEFieldId: 'test_library_id',
      rsmode: 2,
      name: 'DER1N_TEST_CASE_LIBRARY_TEST_LIBRARY_ID',
      id: 'test_cases',
    },
  ],
  quickSearchAppDEFieldIds: ['identifier', 'title'],
  sysAPITag: 'ServiceAPI',
  defaultMode: true,
  enableFilterActions: true,
  major: true,
  name: 'TEST_CASE',
  id: 'plmweb.test_case',
  codeName2: 'Test_cases',
  requestPaths: ['libraries/${library}/test_cases/${test_case}'],
};
