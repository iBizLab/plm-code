export default {
  appDEACModes: [
    {
      actype: 'AUTOCOMPLETE',
      codeName: 'Default',
      logicName: 'DEFAULT',
      deacmodeDataItems: [
        {
          appDEFieldId: 'id',
          dataType: 25,
          id: 'value',
        },
        {
          appDEFieldId: 'name',
          dataType: 25,
          id: 'text',
        },
      ],
      pagingSize: 50,
      defaultMode: true,
      textAppDEFieldId: 'name',
      valueAppDEFieldId: 'id',
      name: 'DEFAULT',
      id: 'default',
    },
  ],
  appDEFields: [
    {
      codeName: 'sequence',
      logicName: '序号',
      stdDataType: 6,
      name: 'SEQUENCE',
      id: 'sequence',
    },
    {
      codeName: 'suites',
      logicName: '模块路径',
      stdDataType: 25,
      stringLength: 500,
      name: 'SUITES',
      id: 'suites',
    },
    {
      codeName: 'is_leaf',
      logicName: '是否叶子节点',
      stdDataType: 9,
      name: 'IS_LEAF',
      id: 'is_leaf',
    },
    {
      codeName: 'id',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.ID',
      },
      logicName: '标识',
      stdDataType: 25,
      stringLength: 100,
      name: 'ID',
      id: 'id',
    },
    {
      codeName: 'name',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.NAME',
      },
      logicName: '名称',
      stdDataType: 25,
      stringLength: 200,
      enableQuickSearch: true,
      name: 'NAME',
      id: 'name',
    },
    {
      codeName: 'create_man',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.CREATE_MAN',
      },
      logicName: '建立人',
      stdDataType: 25,
      stringLength: 100,
      name: 'CREATE_MAN',
      id: 'create_man',
    },
    {
      codeName: 'create_time',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.CREATE_TIME',
      },
      logicName: '建立时间',
      stdDataType: 5,
      valueFormat: 'YYYY-MM-DD HH:mm:ss',
      name: 'CREATE_TIME',
      id: 'create_time',
    },
    {
      codeName: 'update_man',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.UPDATE_MAN',
      },
      logicName: '更新人',
      stdDataType: 25,
      stringLength: 100,
      name: 'UPDATE_MAN',
      id: 'update_man',
    },
    {
      codeName: 'update_time',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.UPDATE_TIME',
      },
      logicName: '更新时间',
      stdDataType: 5,
      valueFormat: 'YYYY-MM-DD HH:mm:ss',
      name: 'UPDATE_TIME',
      id: 'update_time',
    },
    {
      codeName: 'library_id',
      logicName: '测试库标识',
      stdDataType: 25,
      stringLength: 100,
      name: 'LIBRARY_ID',
      id: 'library_id',
    },
    {
      codeName: 'pid',
      logicName: '父标识',
      stdDataType: 25,
      stringLength: 100,
      name: 'PID',
      id: 'pid',
    },
    {
      codeName: 'pname',
      logicName: '名称',
      stdDataType: 25,
      stringLength: 200,
      name: 'PNAME',
      id: 'pname',
    },
    {
      codeName: 'library_name',
      logicName: '测试库名称',
      stdDataType: 25,
      stringLength: 200,
      name: 'LIBRARY_NAME',
      id: 'library_name',
    },
  ],
  appDEMethodDTOs: [
    {
      codeName: 'test_suite_dto',
      appDEMethodDTOFields: [
        {
          codeName: 'sequence',
          logicName: '序号',
          appDEFieldId: 'sequence',
          sourceType: 'DEFIELD',
          stdDataType: 6,
          type: 'SIMPLE',
          id: 'sequence',
        },
        {
          codeName: 'suites',
          logicName: '模块路径',
          appDEFieldId: 'suites',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'suites',
        },
        {
          codeName: 'is_leaf',
          logicName: '是否叶子节点',
          appDEFieldId: 'is_leaf',
          sourceType: 'DEFIELD',
          stdDataType: 9,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'is_leaf',
        },
        {
          codeName: 'create_man',
          logicName: '建立人',
          appDEFieldId: 'create_man',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          id: 'create_man',
        },
        {
          codeName: 'create_time',
          jsonFormat: 'yyyy-MM-dd HH:mm:ss',
          logicName: '建立时间',
          appDEFieldId: 'create_time',
          sourceType: 'DEFIELD',
          stdDataType: 5,
          type: 'SIMPLE',
          id: 'create_time',
        },
        {
          codeName: 'id',
          logicName: '标识',
          appDEFieldId: 'id',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          id: 'id',
        },
        {
          codeName: 'library_id',
          logicName: '测试库标识',
          appDEFieldId: 'library_id',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'library_id',
        },
        {
          codeName: 'library_name',
          logicName: '测试库名称',
          appDEFieldId: 'library_name',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'library_name',
        },
        {
          codeName: 'name',
          logicName: '名称',
          appDEFieldId: 'name',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'name',
        },
        {
          codeName: 'pid',
          logicName: '父标识',
          appDEFieldId: 'pid',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'pid',
        },
        {
          codeName: 'pname',
          logicName: '名称',
          appDEFieldId: 'pname',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'pname',
        },
        {
          codeName: 'update_man',
          logicName: '更新人',
          appDEFieldId: 'update_man',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          id: 'update_man',
        },
        {
          codeName: 'update_time',
          jsonFormat: 'yyyy-MM-dd HH:mm:ss',
          logicName: '更新时间',
          appDEFieldId: 'update_time',
          sourceType: 'DEFIELD',
          stdDataType: 5,
          type: 'SIMPLE',
          id: 'update_time',
        },
      ],
      sourceType: 'DE',
      type: 'DEFAULT',
      id: 'test_suite_dto',
    },
    {
      codeName: 'test_suite_filter_dto',
      appDEMethodDTOFields: [
        {
          codeName: 'n_id_eq',
          logicName: '标识',
          appDEFieldId: 'id',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_id_eq',
        },
        {
          codeName: 'n_library_id_eq',
          logicName: '测试库标识',
          appDEFieldId: 'library_id',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_library_id_eq',
        },
        {
          codeName: 'n_library_name_eq',
          logicName: '测试库名称',
          appDEFieldId: 'library_name',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_library_name_eq',
        },
        {
          codeName: 'n_library_name_like',
          logicName: '测试库名称',
          appDEFieldId: 'library_name',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_library_name_like',
        },
        {
          codeName: 'n_name_like',
          logicName: '名称',
          appDEFieldId: 'name',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_name_like',
        },
        {
          codeName: 'n_pid_eq',
          logicName: '父标识',
          appDEFieldId: 'pid',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_pid_eq',
        },
        {
          codeName: 'n_pname_eq',
          logicName: '名称',
          appDEFieldId: 'pname',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_pname_eq',
        },
        {
          codeName: 'n_pname_like',
          logicName: '名称',
          appDEFieldId: 'pname',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_pname_like',
        },
      ],
      sourceType: 'DE',
      type: 'DEFILTER',
      id: 'test_suite_filter_dto',
    },
  ],
  appDEMethods: [
    {
      codeName: 'check_key',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_suite_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        stdDataType: 9,
        type: 'SIMPLE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/check_key',
      actionMode: 'CHECKKEY',
      actionTag: 'CheckKey',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'CheckKey',
      id: 'check_key',
    },
    {
      codeName: 'create',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_suite_dto',
        type: 'DTO',
        output: true,
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_suite_dto',
        type: 'DTO',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      noServiceCodeName: true,
      actionMode: 'CREATE',
      actionTag: 'Create',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Create',
      id: 'create',
    },
    {
      codeName: 'get',
      methodType: 'DEACTION',
      appDEMethodInput: {
        keyAppDEFieldId: 'id',
        type: 'KEYFIELD',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_suite_dto',
        type: 'DTO',
        id: '返回对象',
      },
      requestField: 'ID',
      requestMethod: 'GET',
      requestParamType: 'FIELD',
      needResourceKey: true,
      noServiceCodeName: true,
      actionMode: 'READ',
      actionTag: 'Get',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Get',
      id: 'get',
    },
    {
      codeName: 'get_draft',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_suite_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_suite_dto',
        type: 'DTO',
        id: '返回对象',
      },
      requestMethod: 'GET',
      requestParamType: 'NONE',
      requestPath: '/get_draft',
      actionMode: 'GETDRAFT',
      actionTag: 'GetDraft',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'GetDraft',
      id: 'get_draft',
    },
    {
      codeName: 'move_order',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_suite_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_suite_dto',
        type: 'DTOS',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/move_order',
      needResourceKey: true,
      actionMode: 'MOVEORDER',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      id: 'move_order',
    },
    {
      codeName: 'remove',
      methodType: 'DEACTION',
      appDEMethodInput: {
        keyAppDEFieldId: 'id',
        type: 'KEYFIELDS',
        id: '输入对象',
      },
      appDEMethodReturn: {
        type: 'VOID',
        id: '返回对象',
      },
      requestField: 'ID',
      requestMethod: 'DELETE',
      requestParamType: 'FIELD',
      needResourceKey: true,
      noServiceCodeName: true,
      actionMode: 'DELETE',
      actionTag: 'Remove',
      actionType: 'REMOTE',
      batchActionMode: 1,
      enableBatchAction: true,
      dataSetType: 'REMOTE',
      name: 'Remove',
      id: 'remove',
    },
    {
      codeName: 'save',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_suite_dto',
        type: 'DTO',
        output: true,
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_suite_dto',
        type: 'DTO',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/save',
      actionMode: 'SAVE',
      actionTag: 'Save',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Save',
      id: 'save',
    },
    {
      codeName: 'update',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_suite_dto',
        type: 'DTO',
        output: true,
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_suite_dto',
        type: 'DTO',
        id: '返回对象',
      },
      requestMethod: 'PUT',
      requestParamType: 'ENTITY',
      needResourceKey: true,
      noServiceCodeName: true,
      actionMode: 'UPDATE',
      actionTag: 'Update',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Update',
      id: 'update',
    },
    {
      codeName: 'fetch_cur_test_suite',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_suite_filter_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_suite_dto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetch_cur_test_suite',
      actionType: 'REMOTE',
      addedqconditions: [
        {
          condOp: 'EQ',
          condValue: 'library',
          fieldName: 'LIBRARY_ID',
          vartypeId: 'DATACONTEXT',
          condType: 'SINGLE',
          name: '(LIBRARY_ID) 等于(=) 数据上下文 library',
          id: '(library_id) 等于(=) 数据上下文 library',
        },
      ],
      dataSetName: 'cur_test_suite',
      dataSetTag: 'cur_test_suite',
      dataSetType: 'REMOTE',
      id: 'fetch_cur_test_suite',
    },
    {
      codeName: 'fetch_default',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_suite_filter_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_suite_dto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetch_default',
      actionType: 'REMOTE',
      dataSetName: 'DEFAULT',
      dataSetTag: 'Default',
      dataSetType: 'REMOTE',
      id: 'fetch_default',
    },
    {
      codeName: 'fetch_no_parent',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_suite_filter_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_suite_dto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetch_no_parent',
      actionType: 'REMOTE',
      dataSetName: 'no_parent',
      dataSetTag: 'no_parent',
      dataSetType: 'REMOTE',
      id: 'fetch_no_parent',
    },
    {
      codeName: 'fetch_normal',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_suite_filter_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_suite_dto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetch_normal',
      actionType: 'REMOTE',
      dataSetName: 'normal',
      dataSetTag: 'normal',
      dataSetType: 'REMOTE',
      id: 'fetch_normal',
    },
    {
      codeName: 'fetch_root',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'test_suite_filter_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'test_suite_dto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetch_root',
      actionType: 'REMOTE',
      dataSetName: 'root',
      dataSetTag: 'root',
      dataSetType: 'REMOTE',
      id: 'fetch_root',
    },
    {
      codeName: 'FilterCreate',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERCREATE',
      id: 'filtercreate',
    },
    {
      codeName: 'FilterFetch',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERFETCH',
      id: 'filterfetch',
    },
    {
      codeName: 'FilterGet',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERGET',
      id: 'filterget',
    },
    {
      codeName: 'FilterGetDraft',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERGETDRAFT',
      id: 'filtergetdraft',
    },
    {
      codeName: 'FilterRemove',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERREMOVE',
      id: 'filterremove',
    },
    {
      codeName: 'FilterSearch',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERSEARCH',
      id: 'filtersearch',
    },
    {
      codeName: 'FilterUpdate',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERUPDATE',
      id: 'filterupdate',
    },
  ],
  appDEUIActions: [
    {
      actionLevel: 100,
      actionTarget: 'SINGLEDATA',
      caption: '编辑',
      codeName: 'toolbar_tree_exp_view_node2_cm_deuiaction1_click',
      frontProcessType: 'OTHER',
      fullCodeName:
        'test_suite_toolbar_tree_exp_view_node2_cm_deuiaction1_click',
      uiactionMode: 'FRONT',
      uiactionTag: 'toolbar_tree_exp_view_node2_cm_deuiaction1_click',
      uiactionType: 'DEUIACTION',
      uilogicAttachMode: 'REPLACE',
      uilogicType: 'DELOGIC',
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDEUILogicId: 'edit_section_or_category',
      appDataEntityId: 'plmweb.test_suite',
      name: '编辑',
      id: 'toolbar_tree_exp_view_node2_cm_deuiaction1_click@test_suite',
    },
    {
      actionLevel: 100,
      actionTarget: 'SINGLEDATA',
      caption: '删除',
      codeName: 'toolbar_tree_exp_view_node2_cm_deuiaction2_click',
      frontProcessType: 'OTHER',
      fullCodeName:
        'test_suite_toolbar_tree_exp_view_node2_cm_deuiaction2_click',
      uiactionMode: 'FRONT',
      uiactionTag: 'toolbar_tree_exp_view_node2_cm_deuiaction2_click',
      uiactionType: 'DEUIACTION',
      uilogicAttachMode: 'REPLACE',
      uilogicType: 'DELOGIC',
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDEUILogicId: 'remove_section_or_category',
      appDataEntityId: 'plmweb.test_suite',
      name: '删除',
      id: 'toolbar_tree_exp_view_node2_cm_deuiaction2_click@test_suite',
    },
    {
      actionLevel: 100,
      actionTarget: 'SINGLEDATA',
      caption: '编辑',
      codeName: 'toolbar_tree_exp_view_node3_cm_deuiaction1_click',
      frontProcessType: 'OTHER',
      fullCodeName:
        'test_suite_toolbar_tree_exp_view_node3_cm_deuiaction1_click',
      uiactionMode: 'FRONT',
      uiactionTag: 'toolbar_tree_exp_view_node3_cm_deuiaction1_click',
      uiactionType: 'DEUIACTION',
      uilogicAttachMode: 'REPLACE',
      uilogicType: 'DELOGIC',
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDEUILogicId: 'edit_section_or_category',
      appDataEntityId: 'plmweb.test_suite',
      name: '编辑',
      id: 'toolbar_tree_exp_view_node3_cm_deuiaction1_click@test_suite',
    },
    {
      actionLevel: 100,
      actionTarget: 'SINGLEDATA',
      caption: '删除',
      codeName: 'toolbar_tree_exp_view_node3_cm_deuiaction2_click',
      frontProcessType: 'OTHER',
      fullCodeName:
        'test_suite_toolbar_tree_exp_view_node3_cm_deuiaction2_click',
      uiactionMode: 'FRONT',
      uiactionTag: 'toolbar_tree_exp_view_node3_cm_deuiaction2_click',
      uiactionType: 'DEUIACTION',
      uilogicAttachMode: 'REPLACE',
      uilogicType: 'DELOGIC',
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDEUILogicId: 'remove_section_or_category',
      appDataEntityId: 'plmweb.test_suite',
      name: '删除',
      id: 'toolbar_tree_exp_view_node3_cm_deuiaction2_click@test_suite',
    },
    {
      actionLevel: 100,
      actionTarget: 'SINGLEDATA',
      caption: '新建模块',
      codeName: 'toolbar_tree_exp_view_treeexpbar_toolbar_deuiaction1_click',
      frontProcessType: 'OTHER',
      fullCodeName:
        'test_suite_toolbar_tree_exp_view_treeexpbar_toolbar_deuiaction1_click',
      uiactionMode: 'FRONT',
      uiactionTag: 'toolbar_tree_exp_view_treeexpbar_toolbar_deuiaction1_click',
      uiactionType: 'DEUIACTION',
      uilogicAttachMode: 'REPLACE',
      uilogicType: 'DELOGIC',
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDEUILogicId: 'create_category',
      appDataEntityId: 'plmweb.test_suite',
      name: '新建模块',
      id: 'toolbar_tree_exp_view_treeexpbar_toolbar_deuiaction1_click@test_suite',
    },
  ],
  appDEUILogics: [
    {
      codeName: 'create_category',
      defaultParamName: 'Default',
      logicName: '新建类别',
      deuilogicNodes: [
        {
          codeName: 'Begin',
          leftPos: 200,
          logicNodeType: 'BEGIN',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'preparejsparam1',
              srcDEUILogicNodeId: 'begin',
              id: '连接名称',
            },
          ],
          topPos: 200,
          parallelOutput: true,
          name: '开始',
          id: 'begin',
        },
        {
          codeName: 'PREPAREJSPARAM1',
          leftPos: 427,
          logicNodeType: 'PREPAREJSPARAM',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'viewctrlinvoke1',
              srcDEUILogicNodeId: 'preparejsparam1',
              id: '连接名称',
            },
          ],
          deuilogicNodeParams: [
            {
              dstFieldName: 'nodeType',
              dstDEUILogicParamId: 'node_param',
              paramAction: 'SETPARAMVALUE',
              srcValue: 'node_2',
              srcValueType: 'SRCVALUE',
              name: '直接值[node_2] ==> node_param[nodeType]',
              id: '直接值[node_2] ==> node_param[nodetype]',
            },
            {
              dstFieldName: 'owner_id',
              dstDEUILogicParamId: 'defaultvalue',
              paramAction: 'SETPARAMVALUE',
              srcFieldName: 'library',
              srcDEUILogicParamId: 'context',
              srcValueType: 'SRCDLPARAM',
              name: 'context[library] ==> defaultValue[owner_id]',
              id: 'context[library] ==> defaultvalue[owner_id]',
            },
            {
              dstFieldName: 'defaultValue',
              dstDEUILogicParamId: 'node_param',
              paramAction: 'SETPARAMVALUE',
              srcDEUILogicParamId: 'defaultvalue',
              srcValueType: 'SRCDLPARAM',
              name: 'defaultValue ==> node_param[defaultValue]',
              id: 'defaultvalue ==> node_param[defaultvalue]',
            },
          ],
          topPos: 208,
          name: '准备参数',
          id: 'preparejsparam1',
        },
        {
          invokeCtrlId: 'treeexpbar_tree',
          invokeMethod: 'newTreeNode',
          invokeParamId: 'node_param',
          codeName: 'VIEWCTRLINVOKE1',
          leftPos: 721,
          logicNodeType: 'VIEWCTRLINVOKE',
          topPos: 208,
          name: '视图部件调用',
          id: 'viewctrlinvoke1',
        },
      ],
      deuilogicParams: [
        {
          codeName: 'treeexpbar_tree',
          ctrlParam: true,
          name: '树部件',
          id: 'treeexpbar_tree',
        },
        {
          codeName: 'defaultValue',
          entityParam: true,
          name: '默认值对象',
          id: 'defaultvalue',
        },
        {
          codeName: 'Default',
          default: true,
          entityParam: true,
          name: '传入变量',
          id: 'default',
        },
        {
          codeName: 'context',
          navContextParam: true,
          name: '上下文对象',
          id: 'context',
        },
        {
          codeName: 'node_param',
          entityParam: true,
          name: '节点参数',
          id: 'node_param',
        },
      ],
      startDEUILogicNodeId: 'begin',
      name: '新建类别',
      id: 'create_category',
    },
    {
      codeName: 'edit_section_or_category',
      defaultParamName: 'Default',
      logicName: '编辑类别或分组',
      deuilogicNodes: [
        {
          codeName: 'Begin',
          leftPos: 140,
          logicNodeType: 'BEGIN',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'preparejsparam1',
              srcDEUILogicNodeId: 'begin',
              id: '连接名称',
            },
          ],
          topPos: 200,
          parallelOutput: true,
          name: '开始',
          id: 'begin',
        },
        {
          codeName: 'PREPAREJSPARAM1',
          leftPos: 404,
          logicNodeType: 'PREPAREJSPARAM',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'viewctrlinvoke1',
              srcDEUILogicNodeId: 'preparejsparam1',
              id: '连接名称',
            },
          ],
          deuilogicNodeParams: [
            {
              dstFieldName: 'nodeKey',
              dstDEUILogicParamId: 'node_param',
              paramAction: 'SETPARAMVALUE',
              srcFieldName: '_id',
              srcDEUILogicParamId: 'default',
              srcValueType: 'SRCDLPARAM',
              name: 'Default[_id] ==> node_param[nodeKey]',
              id: 'default[_id] ==> node_param[nodekey]',
            },
          ],
          topPos: 208,
          name: '准备参数',
          id: 'preparejsparam1',
        },
        {
          invokeCtrlId: 'treeexpbar_tree',
          invokeMethod: 'updateTreeNode',
          invokeParamId: 'node_param',
          codeName: 'VIEWCTRLINVOKE1',
          leftPos: 660,
          logicNodeType: 'VIEWCTRLINVOKE',
          topPos: 208,
          name: '视图部件调用',
          id: 'viewctrlinvoke1',
        },
      ],
      deuilogicParams: [
        {
          codeName: 'Default',
          default: true,
          entityParam: true,
          name: '传入变量',
          id: 'default',
        },
        {
          codeName: 'treeexpbar_tree',
          ctrlParam: true,
          name: '树部件',
          id: 'treeexpbar_tree',
        },
        {
          codeName: 'node_param',
          entityParam: true,
          name: '节点参数',
          id: 'node_param',
        },
      ],
      startDEUILogicNodeId: 'begin',
      name: '编辑类别或分组',
      id: 'edit_section_or_category',
    },
    {
      codeName: 'remove_section_or_category',
      defaultParamName: 'Default',
      logicName: '删除类别或分组',
      deuilogicNodes: [
        {
          codeName: 'Begin',
          leftPos: 200,
          logicNodeType: 'BEGIN',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'preparejsparam1',
              srcDEUILogicNodeId: 'begin',
              id: '连接名称',
            },
          ],
          topPos: 200,
          parallelOutput: true,
          name: '开始',
          id: 'begin',
        },
        {
          invokeCtrlId: 'treeexpbar_tree',
          invokeMethod: 'removeTreeNode',
          invokeParamId: 'node_param',
          codeName: 'VIEWCTRLINVOKE1',
          leftPos: 640,
          logicNodeType: 'VIEWCTRLINVOKE',
          topPos: 208,
          name: '视图部件调用',
          id: 'viewctrlinvoke1',
        },
        {
          codeName: 'PREPAREJSPARAM1',
          leftPos: 390,
          logicNodeType: 'PREPAREJSPARAM',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'viewctrlinvoke1',
              srcDEUILogicNodeId: 'preparejsparam1',
              id: '连接名称',
            },
          ],
          deuilogicNodeParams: [
            {
              dstDEUILogicParamId: 'node_param',
              paramAction: 'BINDPARAM',
              srcFieldName: '_id',
              srcDEUILogicParamId: 'default',
              srcValueType: 'SRCDLPARAM',
              name: 'Default[_id] ==> node_param',
              id: 'default[_id] ==> node_param',
            },
          ],
          topPos: 208,
          name: '准备参数',
          id: 'preparejsparam1',
        },
      ],
      deuilogicParams: [
        {
          codeName: 'node_param',
          stdDataType: 25,
          simpleParam: true,
          name: '节点参数',
          id: 'node_param',
        },
        {
          codeName: 'treeexpbar_tree',
          ctrlParam: true,
          name: '树部件',
          id: 'treeexpbar_tree',
        },
        {
          codeName: 'Default',
          default: true,
          entityParam: true,
          name: '传入变量',
          id: 'default',
        },
      ],
      startDEUILogicNodeId: 'begin',
      name: '删除类别或分组',
      id: 'remove_section_or_category',
    },
  ],
  deopprivs: [
    {
      logicName: '建立',
      mapDEName: 'LIBRARY',
      mapDEOPPrivName: 'SUBDATA',
      name: 'CREATE',
      id: 'library__create',
    },
    {
      logicName: '建立',
      name: 'CREATE',
      id: 'create',
    },
    {
      logicName: '删除',
      mapDEName: 'LIBRARY',
      mapDEOPPrivName: 'SUBDATA',
      name: 'DELETE',
      id: 'library__delete',
    },
    {
      logicName: '删除',
      name: 'DELETE',
      id: 'delete',
    },
    {
      logicName: '读取',
      mapDEName: 'LIBRARY',
      mapDEOPPrivName: 'READ',
      name: 'READ',
      id: 'library__read',
    },
    {
      logicName: '读取',
      name: 'READ',
      id: 'read',
    },
    {
      logicName: '更新',
      name: 'UPDATE',
      id: 'update',
    },
    {
      logicName: '更新',
      mapDEName: 'LIBRARY',
      mapDEOPPrivName: 'SUBDATA',
      name: 'UPDATE',
      id: 'library__update',
    },
  ],
  codeName: 'test_suite',
  deapicodeName: 'test_suite',
  deapicodeName2: 'test_suites',
  deapitag: 'TEST_SUITE',
  dataAccCtrlArch: 1,
  dataAccCtrlMode: 3,
  enableUIActions: 15,
  keyAppDEFieldId: 'id',
  lnlanguageRes: {
    lanResTag: 'DE.LNAME.TEST_SUITE',
  },
  logicName: '用例模块',
  majorAppDEFieldId: 'name',
  minorAppDERSs: [
    {
      actionRSMode: 1,
      codeName: 'test_suites',
      majorAppDataEntityId: 'plmweb.library',
      parentAppDEFieldId: 'library_id',
      rsmode: 2,
      name: 'DER1N_TEST_SUITE_LIBRARY_LIBRARY_ID',
      id: 'test_suites',
    },
  ],
  quickSearchAppDEFieldIds: ['name'],
  sysAPITag: 'ServiceAPI',
  defaultMode: true,
  enableFilterActions: true,
  major: true,
  name: 'TEST_SUITE',
  id: 'plmweb.test_suite',
  codeName2: 'test_suites',
  requestPaths: ['libraries/${library}/test_suites/${test_suite}'],
};
