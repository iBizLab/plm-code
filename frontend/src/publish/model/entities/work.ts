export default {
  appDEACModes: [
    {
      actype: 'AUTOCOMPLETE',
      codeName: 'Default',
      logicName: 'DEFAULT',
      deacmodeDataItems: [
        {
          appDEFieldId: 'id',
          dataType: 25,
          id: 'value',
        },
        {
          appDEFieldId: 'name',
          dataType: 25,
          id: 'text',
        },
      ],
      pagingSize: 50,
      defaultMode: true,
      textAppDEFieldId: 'name',
      valueAppDEFieldId: 'id',
      name: 'DEFAULT',
      id: 'default',
    },
  ],
  appDEFields: [
    {
      codeName: 'Principal_id',
      logicName: '关联主体标识',
      stdDataType: 25,
      stringLength: 100,
      name: 'PRINCIPAL_ID',
      id: 'principal_id',
    },
    {
      codeName: 'Pilot_id',
      logicName: '关联主体标识',
      stdDataType: 25,
      stringLength: 100,
      name: 'PILOT_ID',
      id: 'pilot_id',
    },
    {
      codeName: 'Principal_type',
      logicName: '关联主体类型',
      stdDataType: 25,
      stringLength: 100,
      name: 'PRINCIPAL_TYPE',
      id: 'principal_type',
    },
    {
      codeName: 'Create_man',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.CREATE_MAN',
      },
      logicName: '建立人',
      stdDataType: 25,
      stringLength: 100,
      name: 'CREATE_MAN',
      id: 'create_man',
    },
    {
      codeName: 'Name',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.NAME',
      },
      logicName: '名称',
      stdDataType: 25,
      stringLength: 200,
      enableQuickSearch: true,
      name: 'NAME',
      id: 'name',
    },
    {
      codeName: 'Create_time',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.CREATE_TIME',
      },
      logicName: '建立时间',
      stdDataType: 5,
      valueFormat: 'YYYY-MM-DD HH:mm:ss',
      name: 'CREATE_TIME',
      id: 'create_time',
    },
    {
      codeName: 'Id',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.ID',
      },
      logicName: '标识',
      stdDataType: 25,
      stringLength: 100,
      name: 'ID',
      id: 'id',
    },
    {
      codeName: 'Update_time',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.UPDATE_TIME',
      },
      logicName: '更新时间',
      stdDataType: 5,
      valueFormat: 'YYYY-MM-DD HH:mm:ss',
      name: 'UPDATE_TIME',
      id: 'update_time',
    },
    {
      codeName: 'Update_man',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.UPDATE_MAN',
      },
      logicName: '更新人',
      stdDataType: 25,
      stringLength: 100,
      name: 'UPDATE_MAN',
      id: 'update_man',
    },
    {
      codeName: 'Portfolio_id',
      logicName: '文件夹标识',
      stdDataType: 25,
      stringLength: 100,
      name: 'PORTFOLIO_ID',
      id: 'portfolio_id',
    },
  ],
  appDEMethodDTOs: [
    {
      codeName: 'WorkDTO',
      appDEMethodDTOFields: [
        {
          codeName: 'Pilot_id',
          logicName: '关联主体标识',
          appDEFieldId: 'pilot_id',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Pilot_id',
          id: 'pilot_id',
        },
        {
          codeName: 'Principal_id',
          logicName: '关联主体标识',
          appDEFieldId: 'principal_id',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Principal_id',
          id: 'principal_id',
        },
        {
          codeName: 'Principal_type',
          logicName: '关联主体类型',
          appDEFieldId: 'principal_type',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Principal_type',
          id: 'principal_type',
        },
        {
          codeName: 'Create_man',
          logicName: '建立人',
          appDEFieldId: 'create_man',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          name: 'Create_man',
          id: 'create_man',
        },
        {
          codeName: 'Create_time',
          jsonFormat: 'yyyy-MM-dd HH:mm:ss',
          logicName: '建立时间',
          appDEFieldId: 'create_time',
          sourceType: 'DEFIELD',
          stdDataType: 5,
          type: 'SIMPLE',
          name: 'Create_time',
          id: 'create_time',
        },
        {
          codeName: 'Id',
          logicName: '标识',
          appDEFieldId: 'id',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          name: 'Id',
          id: 'id',
        },
        {
          codeName: 'Name',
          logicName: '名称',
          appDEFieldId: 'name',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Name',
          id: 'name',
        },
        {
          codeName: 'Portfolio_id',
          logicName: '文件夹标识',
          appDEFieldId: 'portfolio_id',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'Portfolio_id',
          id: 'portfolio_id',
        },
        {
          codeName: 'Update_man',
          logicName: '更新人',
          appDEFieldId: 'update_man',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          name: 'Update_man',
          id: 'update_man',
        },
        {
          codeName: 'Update_time',
          jsonFormat: 'yyyy-MM-dd HH:mm:ss',
          logicName: '更新时间',
          appDEFieldId: 'update_time',
          sourceType: 'DEFIELD',
          stdDataType: 5,
          type: 'SIMPLE',
          name: 'Update_time',
          id: 'update_time',
        },
      ],
      sourceType: 'DE',
      type: 'DEFAULT',
      name: 'WorkDTO',
      id: 'workdto',
    },
    {
      codeName: 'WorkFilterDTO',
      appDEMethodDTOFields: [
        {
          codeName: 'N_ID_EQ',
          logicName: '标识',
          appDEFieldId: 'id',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_ID_EQ',
          id: 'n_id_eq',
        },
        {
          codeName: 'N_NAME_LIKE',
          logicName: '名称',
          appDEFieldId: 'name',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_NAME_LIKE',
          id: 'n_name_like',
        },
        {
          codeName: 'N_PILOT_ID_EQ',
          logicName: '关联主体标识',
          appDEFieldId: 'pilot_id',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_PILOT_ID_EQ',
          id: 'n_pilot_id_eq',
        },
        {
          codeName: 'N_PORTFOLIO_ID_EQ',
          logicName: '文件夹标识',
          appDEFieldId: 'portfolio_id',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_PORTFOLIO_ID_EQ',
          id: 'n_portfolio_id_eq',
        },
        {
          codeName: 'N_PRINCIPAL_ID_EQ',
          logicName: '关联主体标识',
          appDEFieldId: 'principal_id',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          name: 'N_PRINCIPAL_ID_EQ',
          id: 'n_principal_id_eq',
        },
      ],
      sourceType: 'DE',
      type: 'DEFILTER',
      name: 'WorkFilterDTO',
      id: 'workfilterdto',
    },
  ],
  appDEMethods: [
    {
      codeName: 'Add_project',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'workdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        type: 'VOID',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/add_project',
      needResourceKey: true,
      actionMode: 'CUSTOM',
      actionName: 'add_project',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Add_project',
      id: 'add_project',
    },
    {
      codeName: 'Add_project_portfolio',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'workdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        type: 'VOID',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/add_project_portfolio',
      needResourceKey: true,
      actionMode: 'CUSTOM',
      actionName: 'add_project_portfolio',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Add_project_portfolio',
      id: 'add_project_portfolio',
    },
    {
      codeName: 'CheckKey',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'workdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        stdDataType: 9,
        type: 'SIMPLE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/checkkey',
      actionMode: 'CHECKKEY',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'CheckKey',
      id: 'checkkey',
    },
    {
      codeName: 'Create',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'workdto',
        type: 'DTO',
        output: true,
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'workdto',
        type: 'DTO',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      noServiceCodeName: true,
      actionMode: 'CREATE',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Create',
      id: 'create',
    },
    {
      codeName: 'Get',
      methodType: 'DEACTION',
      appDEMethodInput: {
        keyAppDEFieldId: 'id',
        type: 'KEYFIELD',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'workdto',
        type: 'DTO',
        id: '返回对象',
      },
      requestField: 'ID',
      requestMethod: 'GET',
      requestParamType: 'FIELD',
      needResourceKey: true,
      noServiceCodeName: true,
      actionMode: 'READ',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Get',
      id: 'get',
    },
    {
      codeName: 'GetDraft',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'workdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'workdto',
        type: 'DTO',
        id: '返回对象',
      },
      requestMethod: 'GET',
      requestParamType: 'NONE',
      requestPath: '/getdraft',
      actionMode: 'GETDRAFT',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'GetDraft',
      id: 'getdraft',
    },
    {
      codeName: 'Remove',
      methodType: 'DEACTION',
      appDEMethodInput: {
        keyAppDEFieldId: 'id',
        type: 'KEYFIELDS',
        id: '输入对象',
      },
      appDEMethodReturn: {
        type: 'VOID',
        id: '返回对象',
      },
      requestField: 'ID',
      requestMethod: 'DELETE',
      requestParamType: 'FIELD',
      needResourceKey: true,
      noServiceCodeName: true,
      actionMode: 'DELETE',
      actionType: 'REMOTE',
      batchActionMode: 1,
      enableBatchAction: true,
      dataSetType: 'REMOTE',
      name: 'Remove',
      id: 'remove',
    },
    {
      codeName: 'Save',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'workdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        type: 'VOID',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/save',
      needResourceKey: true,
      actionMode: 'UNKNOWN',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Save',
      id: 'save',
    },
    {
      codeName: 'Update',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'workdto',
        type: 'DTO',
        output: true,
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'workdto',
        type: 'DTO',
        id: '返回对象',
      },
      requestMethod: 'PUT',
      requestParamType: 'ENTITY',
      needResourceKey: true,
      noServiceCodeName: true,
      actionMode: 'UPDATE',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Update',
      id: 'update',
    },
    {
      codeName: 'FetchDefault',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'workfilterdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'workdto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetchdefault',
      actionType: 'REMOTE',
      dataSetName: 'DEFAULT',
      dataSetTag: 'Default',
      dataSetType: 'REMOTE',
      name: 'FetchDefault',
      id: 'fetchdefault',
    },
    {
      codeName: 'FetchItem_set_owner',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'workfilterdto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'workdto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetchitem_set_owner',
      actionType: 'REMOTE',
      dataSetName: 'item_set_owner',
      dataSetTag: 'Item_set_owner',
      dataSetType: 'REMOTE',
      name: 'FetchItem_set_owner',
      id: 'fetchitem_set_owner',
    },
    {
      codeName: 'FilterCreate',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERCREATE',
      id: 'filtercreate',
    },
    {
      codeName: 'FilterFetch',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERFETCH',
      id: 'filterfetch',
    },
    {
      codeName: 'FilterGet',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERGET',
      id: 'filterget',
    },
    {
      codeName: 'FilterGetDraft',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERGETDRAFT',
      id: 'filtergetdraft',
    },
    {
      codeName: 'FilterRemove',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERREMOVE',
      id: 'filterremove',
    },
    {
      codeName: 'FilterSearch',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERSEARCH',
      id: 'filtersearch',
    },
    {
      codeName: 'FilterUpdate',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERUPDATE',
      id: 'filterupdate',
    },
  ],
  appDEUIActions: [
    {
      actionLevel: 100,
      actionTarget: 'NONE',
      caption: '选择项目集',
      codeName: 'choose_item_set',
      frontAppViewId: 'plmweb.portfoliompickupview',
      fullCodeName: 'Work_choose_item_set',
      appDEMethodId: 'add_project_portfolio',
      navigateParams: [
        {
          key: 'portfolio',
          value: 'portfolio',
          id: 'portfolio',
        },
      ],
      refreshMode: 1,
      timeout: 60000,
      uiactionMode: 'BACKEND',
      uiactionTag: 'choose_item_set',
      uiactionType: 'DEUIACTION',
      enableConfirm: true,
      reloadData: true,
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDataEntityId: 'plmweb.work',
      name: '选择项目集',
      id: 'choose_item_set@work',
    },
    {
      actionLevel: 100,
      actionTarget: 'NONE',
      caption: '选择项目',
      codeName: 'choose_project',
      frontAppViewId: 'plmweb.projectmpickupview',
      fullCodeName: 'Work_choose_project',
      appDEMethodId: 'add_project',
      navigateParams: [
        {
          key: 'portfolio_id',
          value: 'portfolio',
          id: 'portfolio_id',
        },
      ],
      refreshMode: 1,
      timeout: 60000,
      uiactionMode: 'BACKEND',
      uiactionTag: 'choose_project',
      uiactionType: 'DEUIACTION',
      enableConfirm: true,
      reloadData: true,
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDataEntityId: 'plmweb.work',
      name: '选择项目',
      id: 'choose_project@work',
    },
  ],
  deopprivs: [
    {
      logicName: '建立',
      name: 'CREATE',
      id: 'create',
    },
    {
      logicName: '建立',
      mapDEName: 'PORTFOLIO',
      mapDEOPPrivName: 'SUBDATA',
      name: 'CREATE',
      id: 'portfolio__create',
    },
    {
      logicName: '删除',
      mapDEName: 'PORTFOLIO',
      mapDEOPPrivName: 'SUBDATA',
      name: 'DELETE',
      id: 'portfolio__delete',
    },
    {
      logicName: '删除',
      name: 'DELETE',
      id: 'delete',
    },
    {
      logicName: '读取',
      mapDEName: 'PORTFOLIO',
      mapDEOPPrivName: 'READ',
      name: 'READ',
      id: 'portfolio__read',
    },
    {
      logicName: '读取',
      name: 'READ',
      id: 'read',
    },
    {
      logicName: '更新',
      name: 'UPDATE',
      id: 'update',
    },
    {
      logicName: '更新',
      mapDEName: 'PORTFOLIO',
      mapDEOPPrivName: 'SUBDATA',
      name: 'UPDATE',
      id: 'portfolio__update',
    },
  ],
  codeName: 'Work',
  deapicodeName: 'work',
  deapicodeName2: 'works',
  deapitag: 'WORK',
  dataAccCtrlArch: 1,
  dataAccCtrlMode: 3,
  enableUIActions: 15,
  keyAppDEFieldId: 'id',
  lnlanguageRes: {
    lanResTag: 'DE.LNAME.WORK',
  },
  logicName: '工作',
  majorAppDEFieldId: 'name',
  minorAppDERSs: [
    {
      actionRSMode: 1,
      codeName: 'works',
      majorAppDataEntityId: 'plmweb.portfolio',
      parentAppDEFieldId: 'portfolio_id',
      rsmode: 2,
      name: 'DER1N_WORK_PORTFOLIO_PORTFOLIO_ID',
      id: 'works',
    },
  ],
  quickSearchAppDEFieldIds: ['name'],
  sysAPITag: 'ServiceAPI',
  unionKeyValueAppDEFieldIds: ['portfolio_id', 'principal_id'],
  defaultMode: true,
  enableFilterActions: true,
  major: true,
  name: 'WORK',
  id: 'plmweb.work',
  codeName2: 'Works',
  requestPaths: ['portfolios/${portfolio}/works/${work}'],
};
