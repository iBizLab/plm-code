<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="cn.ibizlab.plm.core.base.mapper.CommentMapper">

        <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="CommentResultMap" type="cn.ibizlab.plm.core.base.domain.Comment" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="principalId" column="principal_id"/>
		<result property="principalName" column="principal_name"/>
		<result property="ownerType" column="owner_type"/>
		<result property="principalType" column="principal_type"/>
		<result property="pcreateMan" column="pcreate_man"/>
		<result property="createMan" column="create_man"/>
		<result property="createTime" column="create_time"/>
		<result property="updateMan" column="update_man"/>
		<result property="updateTime" column="update_time"/>
		<result property="pid" column="pid"/>
        <association property="comment" javaType="cn.ibizlab.plm.core.base.domain.Comment" column="pid" select="cn.ibizlab.plm.core.base.mapper.CommentMapper.selectById" fetchType="lazy"></association>
        <association property="page" javaType="cn.ibizlab.plm.core.wiki.domain.ArticlePage" column="principal_id" select="cn.ibizlab.plm.core.wiki.mapper.ArticlePageMapper.selectById" fetchType="lazy"></association>
        <association property="run" javaType="cn.ibizlab.plm.core.testmgmt.domain.Run" column="principal_id" select="cn.ibizlab.plm.core.testmgmt.mapper.RunMapper.selectById" fetchType="lazy"></association>
        <association property="customer" javaType="cn.ibizlab.plm.core.prodmgmt.domain.Customer" column="principal_id" select="cn.ibizlab.plm.core.prodmgmt.mapper.CustomerMapper.selectById" fetchType="lazy"></association>
        <association property="discussPost" javaType="cn.ibizlab.plm.core.team.domain.DiscussPost" column="principal_id" select="cn.ibizlab.plm.core.team.mapper.DiscussPostMapper.selectById" fetchType="lazy"></association>
        <association property="discussReply" javaType="cn.ibizlab.plm.core.team.domain.DiscussReply" column="principal_id" select="cn.ibizlab.plm.core.team.mapper.DiscussReplyMapper.selectById" fetchType="lazy"></association>
        <association property="idea" javaType="cn.ibizlab.plm.core.prodmgmt.domain.Idea" column="principal_id" select="cn.ibizlab.plm.core.prodmgmt.mapper.IdeaMapper.selectById" fetchType="lazy"></association>
        <association property="review" javaType="cn.ibizlab.plm.core.testmgmt.domain.Review" column="principal_id" select="cn.ibizlab.plm.core.testmgmt.mapper.ReviewMapper.selectById" fetchType="lazy"></association>
        <association property="testCase" javaType="cn.ibizlab.plm.core.testmgmt.domain.TestCase" column="principal_id" select="cn.ibizlab.plm.core.testmgmt.mapper.TestCaseMapper.selectById" fetchType="lazy"></association>
        <association property="ticket" javaType="cn.ibizlab.plm.core.prodmgmt.domain.Ticket" column="principal_id" select="cn.ibizlab.plm.core.prodmgmt.mapper.TicketMapper.selectById" fetchType="lazy"></association>
        <association property="workItem" javaType="cn.ibizlab.plm.core.projmgmt.domain.WorkItem" column="principal_id" select="cn.ibizlab.plm.core.projmgmt.mapper.WorkItemMapper.selectById" fetchType="lazy"></association>
    </resultMap>

    <select id="selectById"  resultMap="CommentResultMap">
        <include refid="view" /> 
         where 
         t1.id=#{ id }
    </select>

    <select id="selectEntity" parameterType="cn.ibizlab.plm.core.base.domain.Comment" resultMap="CommentResultMap">
        <include refid="view" /> 
         where 
         (t1.id = #{ id })
    </select>

    <select id="selectEntities" parameterType="java.util.List" resultMap="CommentResultMap">
        <include refid="view" /> 
         where 
         (t1.id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </select>

    <delete id="deleteEntities" parameterType="java.util.List">
    delete from COMMENT
    where (id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </delete>

    <sql id="default" databaseId="mysql">
         <![CDATA[ SELECT t1.`CONTENT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t11.`CONTENT` AS `PCONTENT`, t11.`CREATE_MAN` AS `PCREATE_MAN`, t1.`PID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_NAME`, t1.`PRINCIPAL_TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `COMMENT` t1  LEFT JOIN `COMMENT` t11 ON t1.`PID` = t11.`ID`   ]]>  
    </sql>

    <sql id="view" databaseId="mysql">
         <![CDATA[ SELECT t1.`CONTENT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t11.`CONTENT` AS `PCONTENT`, t11.`CREATE_MAN` AS `PCREATE_MAN`, t1.`PID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_NAME`, t1.`PRINCIPAL_TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `COMMENT` t1  LEFT JOIN `COMMENT` t11 ON t1.`PID` = t11.`ID`   ]]>  
    </sql>

    <select id="searchDefault"  parameterType="cn.ibizlab.plm.core.base.filter.CommentSearchContext"  resultMap="CommentResultMap">
        select t1.* 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDefault"  parameterType="cn.ibizlab.plm.core.base.filter.CommentSearchContext"  resultMap="CommentResultMap">
        select t1.*
        from (
            <include refid="default"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="listView"  parameterType="cn.ibizlab.plm.core.base.filter.CommentSearchContext"  resultMap="CommentResultMap">
        select t1.*
        from (
            <include refid="view" />
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
    </select>

    <select id="findByPid" resultMap="CommentResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where pid in <foreach item="id" index="index" collection="pids" open="(" separator="," close=")">#{id}</foreach>  order by CREATE_TIME ASC
    </select>

    <select id="findByPrincipalId" resultMap="CommentResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach>  order by CREATE_TIME ASC
    </select>

    <select id="findByPrincipalId" resultMap="CommentResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach>  order by CREATE_TIME ASC
    </select>

    <select id="findByPrincipalId" resultMap="CommentResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach>  order by CREATE_TIME ASC
    </select>

    <select id="findByPrincipalId" resultMap="CommentResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach>  order by CREATE_TIME ASC
    </select>

    <select id="findByPrincipalId" resultMap="CommentResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach>  order by CREATE_TIME ASC
    </select>

    <select id="findByPrincipalId" resultMap="CommentResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach>  order by CREATE_TIME ASC
    </select>

    <select id="findByPrincipalId" resultMap="CommentResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach>  order by CREATE_TIME ASC
    </select>

    <select id="findByPrincipalId" resultMap="CommentResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach>  order by CREATE_TIME ASC
    </select>

    <select id="findByPrincipalId" resultMap="CommentResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach>  order by CREATE_TIME ASC
    </select>

    <select id="findByPrincipalId" resultMap="CommentResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach>  order by CREATE_TIME ASC
    </select>


</mapper>