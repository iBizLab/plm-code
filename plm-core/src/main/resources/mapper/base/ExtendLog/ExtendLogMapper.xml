<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="cn.ibizlab.plm.core.base.mapper.ExtendLogMapper">

        <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="ExtendLogResultMap" type="cn.ibizlab.plm.core.base.domain.ExtendLog" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="ownerId" column="owner_id" />
		<result property="ownerType" column="owner_type" />
		<result property="ownerSubtype" column="owner_subtype" />
		<result property="startAt" column="start_at" />
		<result property="endAt" column="end_at" />
		<result property="elapsedTime" column="elapsed_time" />
		<result property="updateTime" column="update_time" />
		<result property="createTime" column="create_time" />
		<result property="updateMan" column="update_man" />
		<result property="createMan" column="create_man" />
    </resultMap>

    <select id="selectById"  resultMap="ExtendLogResultMap">
        <include refid="view" /> 
         where 
         t1.id=#{ id }
    </select>

    <select id="selectEntity" parameterType="cn.ibizlab.plm.core.base.domain.ExtendLog" resultMap="ExtendLogResultMap">
        <include refid="view" /> 
         where 
         (t1.id = #{ id })
    </select>

    <select id="selectEntities" parameterType="java.util.List" resultMap="ExtendLogResultMap">
        <include refid="view" /> 
         where 
         (t1.id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </select>

    <delete id="deleteEntities" parameterType="java.util.List">
    delete from EXTEND_LOG
    where (id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </delete>

    <sql id="default" databaseId="mysql">
         <![CDATA[ SELECT t1.`CATEGORY`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ELAPSED_TIME`, t1.`END_AT`, t1.`ID`, t1.`LEVEL`, t1.`NAME`, t1.`OWNER_ID`, t1.`OWNER_SUBTYPE`, t1.`OWNER_TYPE`, t1.`START_AT`, t1.`STATE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `EXTEND_LOG` t1   ]]>  
    </sql>

    <sql id="view" databaseId="mysql">
         <![CDATA[ SELECT t1.`CATEGORY`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ELAPSED_TIME`, t1.`END_AT`, t1.`ID`, t1.`INFO`, t1.`LEVEL`, t1.`NAME`, t1.`OWNER_ID`, t1.`OWNER_SUBTYPE`, t1.`OWNER_TYPE`, t1.`START_AT`, t1.`STATE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `EXTEND_LOG` t1   ]]>  
    </sql>

    <select id="searchDefault"  parameterType="cn.ibizlab.plm.core.base.filter.ExtendLogSearchContext"  resultMap="ExtendLogResultMap">
        select t1.* 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDefault"  parameterType="cn.ibizlab.plm.core.base.filter.ExtendLogSearchContext"  resultMap="ExtendLogResultMap">
        select t1.*
        from (
            <include refid="default"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchExecutionStatistics"  parameterType="cn.ibizlab.plm.core.base.filter.ExtendLogSearchContext"  resultType="java.util.HashMap">
        select count(1) as count,state as state 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by state
    </select>


    <select id="listExecutionStatistics"  parameterType="cn.ibizlab.plm.core.base.filter.ExtendLogSearchContext"  resultType="java.util.HashMap">
        select count(1) as count,state as state
        from (
            <include refid="default"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by state
    </select>


</mapper>