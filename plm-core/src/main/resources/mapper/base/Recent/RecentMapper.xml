<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="cn.ibizlab.plm.core.base.mapper.RecentMapper">

        <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="RecentResultMap" type="cn.ibizlab.plm.core.base.domain.Recent" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="ownerId" column="owner_id"/>
		<result property="ownerType" column="owner_type"/>
		<result property="ownerSubtype" column="owner_subtype"/>
		<result property="isDeleted" column="is_deleted"/>
		<result property="recentParentName" column="recent_parent_name"/>
		<result property="recentParent" column="recent_parent"/>
		<result property="showIdentifier" column="show_identifier"/>
		<result property="recentParentIdentifier" column="recent_parent_identifier"/>
		<result property="createMan" column="create_man"/>
		<result property="createTime" column="create_time"/>
		<result property="updateMan" column="update_man"/>
		<result property="updateTime" column="update_time"/>
        <association property="dercustomRecentWorkItem" javaType="cn.ibizlab.plm.core.projmgmt.domain.WorkItem" column="owner_id" select="cn.ibizlab.plm.core.projmgmt.mapper.WorkItemMapper.selectById" fetchType="lazy"></association>
    </resultMap>

    <select id="selectById"  resultMap="RecentResultMap">
        <include refid="view" /> 
         where 
         t1.id=#{ id }
    </select>

    <select id="selectEntity" parameterType="cn.ibizlab.plm.core.base.domain.Recent" resultMap="RecentResultMap">
        <include refid="view" /> 
         where 
         (t1.id = #{ id })
    </select>

    <select id="selectEntities" parameterType="java.util.List" resultMap="RecentResultMap">
        <include refid="view" /> 
         where 
         (t1.id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </select>

    <delete id="deleteEntities" parameterType="java.util.List">
    delete from RECENT
    where (id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </delete>

    <sql id="default" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_DELETED`, t1.`NAME`, t1.`OWNER_ID`, t1.`OWNER_SUBTYPE`, t1.`OWNER_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RECENT` t1   ]]>  
    </sql>

    <sql id="view" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_DELETED`, t1.`NAME`, t1.`OWNER_ID`, t1.`OWNER_SUBTYPE`, t1.`OWNER_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RECENT` t1   ]]>  
    </sql>

    <sql id="recentAccess" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_DELETED`, t1.`NAME`, t1.`OWNER_ID`, t1.`OWNER_SUBTYPE`, t1.`OWNER_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RECENT` t1   ]]>  where  <![CDATA[ ( t1.`TYPE` = '2'  AND  t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid}  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="recentCurproductTicket" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_DELETED`, t1.`NAME`, t1.`OWNER_ID`, t1.`OWNER_SUBTYPE`, t1.`OWNER_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RECENT` t1   ]]>  where  <![CDATA[ ( t1.`OWNER_TYPE` = 'product'  AND  t1.`OWNER_SUBTYPE` = 'ticket'  AND  t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid}  AND  t1.`OWNER_ID` <> #{ctx.webcontext.principal_id}  AND  exists(select 1 from ticket t2 where t1.owner_id = t2.id   and t2.is_deleted = 0  and t2.customer_id is null ) ) ]]> 
    </sql>

    <sql id="recentCurprojectChildWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_DELETED`, t1.`NAME`, t1.`OWNER_ID`, t1.`OWNER_SUBTYPE`, t1.`OWNER_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RECENT` t1   ]]>  where  <![CDATA[ ( t1.`OWNER_TYPE` = 'project'  AND  t1.`OWNER_SUBTYPE` = 'work_item'  AND  t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid}  AND  t1.`OWNER_ID` <> #{ctx.webcontext.principal_id}  AND  exists(select 1 from work_item t2 where t1.owner_id = t2.id and t2.project_id = #{ctx.webcontext.project} and t2.is_deleted = 0 AND FIND_IN_SET(t2.WORK_ITEM_TYPE_ID, #{ctx.webcontext.n_work_item_type_id_in} ) > 0 and (t2.pid <> #{ctx.webcontext.principal_id} or t2.pid is null) ) ) ]]> 
    </sql>

    <sql id="recentCurprojectWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_DELETED`, t1.`NAME`, t1.`OWNER_ID`, t1.`OWNER_SUBTYPE`, t1.`OWNER_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RECENT` t1   ]]>  where  <![CDATA[ ( t1.`OWNER_TYPE` = 'project'  AND  t1.`OWNER_SUBTYPE` = 'work_item'  AND  t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid}  AND  t1.`OWNER_ID` <> #{ctx.webcontext.principal_id}  AND  exists(select 1 from work_item t2 where t1.owner_id = t2.id and t2.project_id = #{ctx.webcontext.project} and t2.is_deleted = 0 and (t2.pid <> #{ctx.webcontext.principal_id} or t2.pid is null) ) ) ]]> 
    </sql>

    <sql id="recentIdea" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_DELETED`, t1.`NAME`, t1.`OWNER_ID`, t1.`OWNER_SUBTYPE`, t1.`OWNER_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RECENT` t1   ]]>  where  <![CDATA[ ( t1.`OWNER_TYPE` = 'product'  AND  t1.`OWNER_SUBTYPE` = 'idea'  AND  t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid}  AND  t1.`OWNER_ID` <> #{ctx.webcontext.principal_id}  AND  not exists(select 1 from relation t2 where t2.target_id = t1.owner_id and t2.principal_id = #{ctx.webcontext.principal_id} )  AND  exists(SELECT 1 FROM idea t3 where t3.id = t1.owner_id and t3.is_deleted =0) ) ]]> 
    </sql>

    <sql id="recentPage" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_DELETED`, t1.`NAME`, t1.`OWNER_ID`, t1.`OWNER_SUBTYPE`, t1.`OWNER_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RECENT` t1   ]]>  where  <![CDATA[ ( t1.`OWNER_TYPE` = 'space'  AND  t1.`OWNER_SUBTYPE` = 'page'  AND  t1.`UPDATE_MAN` = #{ctx.sessioncontext.srfpersonid}  AND  exists(SELECT 1 FROM page t3  inner join space t4 on t4.id = t3.space_id and t4.is_deleted = 0 where t3.id = t1.owner_id and   t3.is_archived = 0 and t3.is_deleted =0) ) ]]> 
    </sql>

    <sql id="recentProject" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_DELETED`, t1.`NAME`, t1.`OWNER_ID`, t1.`OWNER_SUBTYPE`, t1.`OWNER_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RECENT` t1   ]]>  where  <![CDATA[ ( t1.`UPDATE_MAN` = #{ctx.sessioncontext.srfpersonid}  AND  t1.`OWNER_TYPE` = 'project'  AND  ( t1.`OWNER_SUBTYPE` = 'scrum'  OR  t1.`OWNER_SUBTYPE` = 'kanban'  OR  t1.`OWNER_SUBTYPE` = 'waterfall' ) ) ]]> 
    </sql>

    <sql id="recentTestCase" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_DELETED`, t1.`NAME`, t1.`OWNER_ID`, t1.`OWNER_SUBTYPE`, t1.`OWNER_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RECENT` t1   ]]>  where ( t1.`OWNER_TYPE` = 'library'  AND  t1.`OWNER_SUBTYPE` = 'test_case'  AND  t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid}  AND  <choose><when test='ctx.webcontext.principal_id !=null and ctx.webcontext.principal_id != &quot;&quot; '>  t1.`OWNER_ID` &lt;&gt; #{ctx.webcontext.principal_id}  </when><otherwise>1=1</otherwise></choose>  AND  not exists(select 1 from relation t2 where t2.target_id = t1.owner_id and t2.principal_id = #{ctx.webcontext.principal_id} )  AND  exists(SELECT 1 FROM test_case t3 where t3.id = t1.owner_id  and t3.is_deleted =0) ) 
    </sql>

    <sql id="recentTestCaseIndex" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_DELETED`, t1.`NAME`, t1.`OWNER_ID`, t1.`OWNER_SUBTYPE`, t1.`OWNER_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RECENT` t1   ]]>  where  <![CDATA[ ( t1.`OWNER_TYPE` = 'library'  AND  t1.`OWNER_SUBTYPE` = 'test_case'  AND  t1.`UPDATE_MAN` = #{ctx.sessioncontext.srfpersonid}  AND  exists(SELECT 1 FROM test_case t3 where t3.id = t1.owner_id and   t3.is_archived = 0 and t3.is_deleted =0) ) ]]> 
    </sql>

    <sql id="recentTicket" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_DELETED`, t1.`NAME`, t1.`OWNER_ID`, t1.`OWNER_SUBTYPE`, t1.`OWNER_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RECENT` t1   ]]>  where  <![CDATA[ ( t1.`OWNER_TYPE` = 'product'  AND  t1.`OWNER_SUBTYPE` = 'ticket'  AND  t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid}  AND  not exists(select 1 from relation t2 where t2.target_id = t1.owner_id and t2.principal_id = #{ctx.webcontext.principal_id} )  AND  t1.`OWNER_ID` <> #{ctx.webcontext.principal_id}  AND  exists(SELECT 1 FROM ticket t3 where t3.id = t1.owner_id and t3.is_deleted =0) ) ]]> 
    </sql>

    <sql id="recentUse" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_DELETED`, t1.`NAME`, t1.`OWNER_ID`, t1.`OWNER_SUBTYPE`, t1.`OWNER_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RECENT` t1   ]]>  where  <![CDATA[ ( t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid}  AND  t1.`TYPE` = '1' ) ]]> 
    </sql>

    <sql id="recentWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_DELETED`, t1.`NAME`, t1.`OWNER_ID`, t1.`OWNER_SUBTYPE`, t1.`OWNER_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RECENT` t1   ]]>  where  <![CDATA[ ( t1.`OWNER_TYPE` = 'project'  AND  t1.`OWNER_SUBTYPE` = 'work_item'  AND  t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid}  AND  exists(select 1 from work_item t3 where t1.owner_id = t3.id and t3.is_deleted = 0)  AND  not exists(select 1 from relation t2 where t2.target_id = t1.owner_id and t2.principal_id = #{ctx.webcontext.principal_id} and principal_type <> 'dependency')  AND  t1.`OWNER_ID` <> #{ctx.webcontext.principal_id} ) ]]> 
    </sql>

    <sql id="recentWorkItemAndNobug" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_DELETED`, t1.`NAME`, t1.`OWNER_ID`, t1.`OWNER_SUBTYPE`, t1.`OWNER_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RECENT` t1   ]]>  where  <![CDATA[ ( t1.`OWNER_TYPE` = 'project'  AND  t1.`OWNER_SUBTYPE` = 'work_item'  AND  t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid}  AND  t1.`OWNER_ID` <> #{ctx.webcontext.principal_id}  AND  not exists(select 1 from relation t2 where t2.target_id = t1.owner_id and t2.principal_id = #{ctx.webcontext.principal_id} and t2.principal_type not like '%bug%')  AND  exists(SELECT 1 FROM work_item t3,work_item_type t4 where t3.id = t1.owner_id and t3.is_deleted =0 and t3.WORK_ITEM_TYPE_ID = t4.ID and t4.`group` <> 'bug') ) ]]> 
    </sql>

    <sql id="recentWorkItemBug" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_DELETED`, t1.`NAME`, t1.`OWNER_ID`, t1.`OWNER_SUBTYPE`, t1.`OWNER_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RECENT` t1   ]]>  where  <![CDATA[ ( t1.`OWNER_TYPE` = 'project'  AND  t1.`OWNER_SUBTYPE` = 'work_item'  AND  t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid}  AND  t1.`OWNER_ID` <> #{ctx.webcontext.principal_id}  AND  not exists(select 1 from relation t2 where t2.target_id = t1.owner_id and t2.principal_id = #{ctx.webcontext.principal_id} )  AND  exists(SELECT 1 FROM work_item t3,work_item_type t4 where t3.id = t1.owner_id and t3.is_deleted =0 and t3.WORK_ITEM_TYPE_ID = t4.ID and t4.`group` =  'bug') ) ]]> 
    </sql>

    <sql id="recentWorkItemDependency" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_DELETED`, t1.`NAME`, t1.`OWNER_ID`, t1.`OWNER_SUBTYPE`, t1.`OWNER_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RECENT` t1   ]]>  where  <![CDATA[ ( t1.`OWNER_TYPE` = 'project'  AND  t1.`OWNER_SUBTYPE` = 'work_item'  AND  t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid}  AND  exists(select 1 from work_item t3 where t1.owner_id = t3.id and t3.project_id = #{ctx.webcontext.project} and t3.is_deleted = 0)  AND  t1.`OWNER_ID` <> #{ctx.webcontext.principal_id}  AND  not exists(select  1 from relation t3 where (t1.owner_id = t3.principal_id or  t1.owner_id = t3.target_id) and t3.principal_type = 'dependency') ) ]]> 
    </sql>

    <sql id="user" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_DELETED`, t1.`NAME`, t1.`OWNER_ID`, t1.`OWNER_SUBTYPE`, t1.`OWNER_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RECENT` t1   ]]>  where  <![CDATA[ ( t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid} ) ]]> 
    </sql>

    <select id="searchDefault"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.* 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDefault"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.*
        from (
            <include refid="default"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRecentAccess"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.* 
        from (
            <include refid="recentAccess"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRecentAccess"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.*
        from (
            <include refid="recentAccess"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRecentCurproductTicket"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.* 
        from (
            <include refid="recentCurproductTicket"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRecentCurproductTicket"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.*
        from (
            <include refid="recentCurproductTicket"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRecentCurprojectChildWorkItem"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.* 
        from (
            <include refid="recentCurprojectChildWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRecentCurprojectChildWorkItem"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.*
        from (
            <include refid="recentCurprojectChildWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRecentCurprojectWorkItem"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.* 
        from (
            <include refid="recentCurprojectWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRecentCurprojectWorkItem"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.*
        from (
            <include refid="recentCurprojectWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRecentIdea"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.* 
        from (
            <include refid="recentIdea"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRecentIdea"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.*
        from (
            <include refid="recentIdea"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRecentPage"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.* 
        from (
            <include refid="recentPage"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRecentPage"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.*
        from (
            <include refid="recentPage"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRecentProject"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.* 
        from (
            <include refid="recentProject"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRecentProject"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.*
        from (
            <include refid="recentProject"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRecentTestCase"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.* 
        from (
            <include refid="recentTestCase"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRecentTestCase"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.*
        from (
            <include refid="recentTestCase"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRecentTestCaseIndex"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.* 
        from (
            <include refid="recentTestCaseIndex"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRecentTestCaseIndex"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.*
        from (
            <include refid="recentTestCaseIndex"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRecentTicket"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.* 
        from (
            <include refid="recentTicket"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRecentTicket"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.*
        from (
            <include refid="recentTicket"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRecentUse"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.* 
        from (
            <include refid="recentUse"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRecentUse"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.*
        from (
            <include refid="recentUse"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRecentWorkItem"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.* 
        from (
            <include refid="recentWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRecentWorkItem"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.*
        from (
            <include refid="recentWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRecentWorkItemAndNobug"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.* 
        from (
            <include refid="recentWorkItemAndNobug"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRecentWorkItemAndNobug"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.*
        from (
            <include refid="recentWorkItemAndNobug"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRecentWorkItemBug"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.* 
        from (
            <include refid="recentWorkItemBug"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRecentWorkItemBug"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.*
        from (
            <include refid="recentWorkItemBug"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRecentWorkItemDependency"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.* 
        from (
            <include refid="recentWorkItemDependency"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRecentWorkItemDependency"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.*
        from (
            <include refid="recentWorkItemDependency"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchUser"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.* 
        from (
            <include refid="user"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listUser"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.*
        from (
            <include refid="user"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="listView"  parameterType="cn.ibizlab.plm.core.base.filter.RecentSearchContext"  resultMap="RecentResultMap">
        select t1.*
        from (
            <include refid="view" />
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
    </select>

    <select id="findByOwnerId" resultMap="RecentResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where owner_id in <foreach item="id" index="index" collection="ownerIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>


</mapper>