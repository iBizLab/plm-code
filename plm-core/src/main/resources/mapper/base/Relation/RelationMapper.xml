<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="cn.ibizlab.plm.core.base.mapper.RelationMapper">

        <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="RelationResultMap" type="cn.ibizlab.plm.core.base.domain.Relation" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="principalId" column="principal_id" />
		<result property="principalType" column="principal_type" />
		<result property="ownerType" column="owner_type" />
		<result property="targetType" column="target_type" />
		<result property="targetId" column="target_id" />
		<result property="parentVersionId" column="parent_version_id" />
		<result property="targetVersionId" column="target_version_id" />
		<result property="curVersionId" column="cur_version_id" />
		<result property="relationType" column="relation_type" />
		<result property="createMan" column="create_man" />
		<result property="createTime" column="create_time" />
		<result property="updateMan" column="update_man" />
		<result property="updateTime" column="update_time" />
        <association property="principalBaseline" javaType="cn.ibizlab.plm.core.base.domain.Baseline" column="principal_id" select="cn.ibizlab.plm.core.base.mapper.BaselineMapper.selectById" fetchType="lazy"></association>
        <association property="principalIdea" javaType="cn.ibizlab.plm.core.prodmgmt.domain.Idea" column="principal_id" select="cn.ibizlab.plm.core.prodmgmt.mapper.IdeaMapper.selectById" fetchType="lazy"></association>
        <association property="principalReview" javaType="cn.ibizlab.plm.core.testmgmt.domain.Review" column="principal_id" select="cn.ibizlab.plm.core.testmgmt.mapper.ReviewMapper.selectById" fetchType="lazy"></association>
        <association property="reviewContentExtend" javaType="cn.ibizlab.plm.core.testmgmt.domain.ReviewContentExtend" column="id" select="cn.ibizlab.plm.core.testmgmt.mapper.ReviewContentExtendMapper.selectById" fetchType="lazy"></association>
        <association property="targetCustomer" javaType="cn.ibizlab.plm.core.prodmgmt.domain.Customer" column="target_id" select="cn.ibizlab.plm.core.prodmgmt.mapper.CustomerMapper.selectById" fetchType="lazy"></association>
        <association property="targetIdea" javaType="cn.ibizlab.plm.core.prodmgmt.domain.Idea" column="target_id" select="cn.ibizlab.plm.core.prodmgmt.mapper.IdeaMapper.selectById" fetchType="lazy"></association>
        <association property="targetPage" javaType="cn.ibizlab.plm.core.wiki.domain.ArticlePage" column="target_id" select="cn.ibizlab.plm.core.wiki.mapper.ArticlePageMapper.selectById" fetchType="lazy"></association>
        <association property="targetProductPlanCategory" javaType="cn.ibizlab.plm.core.prodmgmt.domain.ProductPlan" column="target_id" select="cn.ibizlab.plm.core.prodmgmt.mapper.ProductPlanMapper.selectById" fetchType="lazy"></association>
        <association property="targetTestCase" javaType="cn.ibizlab.plm.core.testmgmt.domain.TestCase" column="target_id" select="cn.ibizlab.plm.core.testmgmt.mapper.TestCaseMapper.selectById" fetchType="lazy"></association>
        <association property="targetTicket" javaType="cn.ibizlab.plm.core.prodmgmt.domain.Ticket" column="target_id" select="cn.ibizlab.plm.core.prodmgmt.mapper.TicketMapper.selectById" fetchType="lazy"></association>
        <association property="targetWorkItem" javaType="cn.ibizlab.plm.core.projmgmt.domain.WorkItem" column="target_id" select="cn.ibizlab.plm.core.projmgmt.mapper.WorkItemMapper.selectById" fetchType="lazy"></association>
        <association property="principalTestCase" javaType="cn.ibizlab.plm.core.testmgmt.domain.TestCase" column="principal_id" select="cn.ibizlab.plm.core.testmgmt.mapper.TestCaseMapper.selectById" fetchType="lazy"></association>
        <association property="principalTestPlan" javaType="cn.ibizlab.plm.core.testmgmt.domain.TestPlan" column="principal_id" select="cn.ibizlab.plm.core.testmgmt.mapper.TestPlanMapper.selectById" fetchType="lazy"></association>
        <association property="principalWorkItem" javaType="cn.ibizlab.plm.core.projmgmt.domain.WorkItem" column="principal_id" select="cn.ibizlab.plm.core.projmgmt.mapper.WorkItemMapper.selectById" fetchType="lazy"></association>
    </resultMap>

    <select id="selectById"  resultMap="RelationResultMap">
        <include refid="view" /> 
         where 
         t1.id=#{ id }
    </select>

    <select id="selectEntity" parameterType="cn.ibizlab.plm.core.base.domain.Relation" resultMap="RelationResultMap">
        <include refid="view" /> 
         where 
         (t1.id = #{ id })
    </select>

    <select id="selectEntities" parameterType="java.util.List" resultMap="RelationResultMap">
        <include refid="view" /> 
         where 
         (t1.id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </select>

    <delete id="deleteEntities" parameterType="java.util.List">
    delete from RELATION
    where (id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </delete>

    <sql id="default" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1   ]]>  
    </sql>

    <sql id="view" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1   ]]>  
    </sql>

    <sql id="all" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1   ]]>  
    </sql>

    <sql id="baselineRelationWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1   ]]>  where  <![CDATA[ ( t1.`PRINCIPAL_ID` = #{ctx.webcontext.baseline}  AND  t1.`PRINCIPAL_TYPE` = 'baseline'  AND  t1.`TARGET_TYPE` = 'work_item' ) ]]> 
    </sql>

    <sql id="existsRunRelationBug" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1   ]]>  where  <![CDATA[ ( t1.`TARGET_TYPE` = 'work_item'  AND  t1.`PRINCIPAL_TYPE` = 'run'  AND  t1.`TARGET_ID` = #{ctx.datacontext.target_id}  AND  exists(select 1 from run t2 where t1.principal_id = t2.id and t2.case_id = #{ctx.datacontext.principal_id}) ) ]]> 
    </sql>

    <sql id="ideaReCustomer" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1  LEFT JOIN `CUSTOMER` t11 ON t1.`TARGET_ID` = t11.`ID`    ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0 ) ]]> and  <![CDATA[ ( t1.`PRINCIPAL_TYPE` = 'idea'  AND  t1.`TARGET_TYPE` = 'customer'  AND  t1.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id} ) ]]> 
    </sql>

    <sql id="ideaReIdea" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1  LEFT JOIN `IDEA` t11 ON t1.`TARGET_ID` = t11.`ID`    ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0 ) ]]> and  <![CDATA[ ( t1.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t1.`PRINCIPAL_TYPE` = 'idea'  AND  t1.`TARGET_TYPE` = 'idea' ) ]]> 
    </sql>

    <sql id="ideaReTestCase" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1  LEFT JOIN `TEST_CASE` t11 ON t1.`TARGET_ID` = t11.`ID`    ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0 ) ]]> and  <![CDATA[ ( t1.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t1.`PRINCIPAL_TYPE` = 'idea'  AND  t1.`TARGET_TYPE` = 'test_case' ) ]]> 
    </sql>

    <sql id="ideaReTicket" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1  LEFT JOIN `TICKET` t11 ON t1.`TARGET_ID` = t11.`ID`    ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0 ) ]]> and  <![CDATA[ ( t1.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t1.`PRINCIPAL_TYPE` = 'idea'  AND  t1.`TARGET_TYPE` = 'ticket' ) ]]> 
    </sql>

    <sql id="ideaReWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1  LEFT JOIN `WORK_ITEM` t11 ON t1.`TARGET_ID` = t11.`ID`    ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0 ) ]]> and  <![CDATA[ ( t1.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t1.`PRINCIPAL_TYPE` = 'idea'  AND  t1.`TARGET_TYPE` = 'work_item' ) ]]> 
    </sql>

    <sql id="ideaVersionRelation" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1   ]]>  where  <![CDATA[ ( t1.`PRINCIPAL_TYPE` = 'idea'  AND  ( t1.`TARGET_TYPE` = 'customer'  OR  t1.`TARGET_TYPE` = 'idea'  OR  t1.`TARGET_TYPE` = 'ticket'  OR  t1.`TARGET_TYPE` = 'work_item'  OR  t1.`TARGET_TYPE` = 'test_case' ) ) ]]> 
    </sql>

    <sql id="reviewReTestCase" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1   ]]>  where  <![CDATA[ ( t1.`PRINCIPAL_TYPE` = 'test_case'  AND  t1.`TARGET_TYPE` = 'idea'  AND  t1.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  EXISTS (         SELECT 1         FROM `test_case` t2         WHERE t1.`TARGET_ID` = t2.`ID`         AND t2.`is_deleted` = 0     ) ) ]]> 
    </sql>

    <sql id="runReBug" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1  LEFT JOIN `WORK_ITEM` t11 ON t1.`TARGET_ID` = t11.`ID`   LEFT JOIN `WORK_ITEM_TYPE` t21 ON t11.`WORK_ITEM_TYPE_ID` = t21.`ID`   ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0  AND  t21.`GROUP` = 'bug' ) ]]> and  <![CDATA[ ( t1.`PRINCIPAL_TYPE` = 'run'  AND  t1.`TARGET_TYPE` = 'work_item'  AND  t1.`PRINCIPAL_ID` = #{ctx.webcontext.run} ) ]]> 
    </sql>

    <sql id="runReIdea" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1  LEFT JOIN `IDEA` t11 ON t1.`TARGET_ID` = t11.`ID`    ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0 ) ]]> and  <![CDATA[ ( t1.`PRINCIPAL_TYPE` = 'test_case'  AND  t1.`TARGET_TYPE` = 'idea'  AND  t1.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id} ) ]]> 
    </sql>

    <sql id="runReWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1  LEFT JOIN `WORK_ITEM` t11 ON t1.`TARGET_ID` = t11.`ID`   LEFT JOIN `WORK_ITEM_TYPE` t21 ON t11.`WORK_ITEM_TYPE_ID` = t21.`ID`   ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0  AND  t21.`GROUP` <> 'bug' ) ]]> and  <![CDATA[ ( t1.`PRINCIPAL_TYPE` = 'test_case'  AND  t1.`TARGET_TYPE` = 'work_item'  AND  t1.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id} ) ]]> 
    </sql>

    <sql id="testCaseReBug" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1  LEFT JOIN `WORK_ITEM` t11 ON t1.`TARGET_ID` = t11.`ID`   LEFT JOIN `WORK_ITEM_TYPE` t21 ON t11.`WORK_ITEM_TYPE_ID` = t21.`ID`   ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0  AND  t21.`GROUP` = 'bug' ) ]]> and  <![CDATA[ ( t1.`PRINCIPAL_TYPE` = 'test_case'  AND  t1.`TARGET_TYPE` = 'work_item'  AND  t1.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id} ) ]]> 
    </sql>

    <sql id="testCaseReIdea" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1  LEFT JOIN `IDEA` t11 ON t1.`TARGET_ID` = t11.`ID`    ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0 ) ]]> and  <![CDATA[ ( t1.`PRINCIPAL_TYPE` = 'test_case'  AND  t1.`TARGET_TYPE` = 'idea'  AND  t1.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id} ) ]]> 
    </sql>

    <sql id="testCaseReWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1  LEFT JOIN `WORK_ITEM` t11 ON t1.`TARGET_ID` = t11.`ID`   LEFT JOIN `WORK_ITEM_TYPE` t21 ON t11.`WORK_ITEM_TYPE_ID` = t21.`ID`   ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0  AND  t21.`GROUP` <> 'bug' ) ]]> and  <![CDATA[ ( t1.`PRINCIPAL_TYPE` = 'test_case'  AND  t1.`TARGET_TYPE` = 'work_item'  AND  t1.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id} ) ]]> 
    </sql>

    <sql id="testCaseVersionRelation" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1   ]]>  where  <![CDATA[ ( t1.`PRINCIPAL_TYPE` = 'test_case'  AND  ( t1.`TARGET_TYPE` = 'work_item'  OR  t1.`TARGET_TYPE` = 'idea' ) ) ]]> 
    </sql>

    <sql id="ticketReIdea" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1  LEFT JOIN `IDEA` t11 ON t1.`TARGET_ID` = t11.`ID`    ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0 ) ]]> and  <![CDATA[ ( t1.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t1.`PRINCIPAL_TYPE` = 'ticket'  AND  t1.`TARGET_TYPE` = 'idea' ) ]]> 
    </sql>

    <sql id="ticketReSelf" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1  LEFT JOIN `TICKET` t11 ON t1.`TARGET_ID` = t11.`ID`    ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0 ) ]]> and  <![CDATA[ ( t1.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t1.`TARGET_TYPE` = 'ticket'  AND  t1.`PRINCIPAL_TYPE` = 'ticket' ) ]]> 
    </sql>

    <sql id="ticketReWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1  LEFT JOIN `WORK_ITEM` t11 ON t1.`TARGET_ID` = t11.`ID`    ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0 ) ]]> and  <![CDATA[ ( t1.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t1.`TARGET_TYPE` = 'work_item'  AND  t1.`PRINCIPAL_TYPE` = 'ticket' ) ]]> 
    </sql>

    <sql id="workItemRelationIdea" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1  LEFT JOIN `IDEA` t11 ON t1.`TARGET_ID` = t11.`ID`    ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0 ) ]]> and  <![CDATA[ ( t1.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t1.`PRINCIPAL_TYPE` = 'work_item'  AND  t1.`TARGET_TYPE` = 'idea' ) ]]> 
    </sql>

    <sql id="workItemRelationSelf" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1  LEFT JOIN `WORK_ITEM` t11 ON t1.`TARGET_ID` = t11.`ID`    ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0 ) ]]> and  <![CDATA[ ( t1.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t1.`PRINCIPAL_TYPE` = 'work_item'  AND  t1.`TARGET_TYPE` = 'work_item' ) ]]> 
    </sql>

    <sql id="workItemRelationTestCase" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1  LEFT JOIN `TEST_CASE` t11 ON t1.`TARGET_ID` = t11.`ID`    ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0 ) ]]> and  <![CDATA[ ( t1.`PRINCIPAL_TYPE` = 'work_item'  AND  t1.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t1.`TARGET_TYPE` = 'test_case' ) ]]> 
    </sql>

    <sql id="workItemRelationTicket" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1  LEFT JOIN `TICKET` t11 ON t1.`TARGET_ID` = t11.`ID`    ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0 ) ]]> and  <![CDATA[ ( t1.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t1.`PRINCIPAL_TYPE` = 'work_item'  AND  t1.`TARGET_TYPE` = 'ticket' ) ]]> 
    </sql>

    <sql id="workItemVersionRelation" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PARENT_VERSION_ID`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RELATION_TYPE`, t1.`TARGET_ID`, t1.`TARGET_TYPE`, t1.`TARGET_VERSION_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `RELATION` t1   ]]>  where  <![CDATA[ ( t1.`PRINCIPAL_TYPE` = 'work_item'  AND  ( t1.`TARGET_TYPE` = 'run'  OR  t1.`TARGET_TYPE` = 'idea'  OR  t1.`TARGET_TYPE` = 'ticket'  OR  t1.`TARGET_TYPE` = 'test_case'  OR  t1.`TARGET_TYPE` = 'work_item' ) ) ]]> 
    </sql>

    <select id="searchDefault"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDefault"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="default"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchAll"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="all"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listAll"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="all"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchExistsRunRelationBug"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="existsRunRelationBug"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listExistsRunRelationBug"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="existsRunRelationBug"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchIdeaReCustomer"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="ideaReCustomer"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listIdeaReCustomer"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="ideaReCustomer"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchIdeaReIdea"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="ideaReIdea"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listIdeaReIdea"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="ideaReIdea"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchIdeaReTestCase"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="ideaReTestCase"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listIdeaReTestCase"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="ideaReTestCase"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchIdeaReTicket"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="ideaReTicket"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listIdeaReTicket"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="ideaReTicket"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchIdeaReWorkItem"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="ideaReWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listIdeaReWorkItem"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="ideaReWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchIdeaVersionRelation"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="ideaVersionRelation"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listIdeaVersionRelation"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="ideaVersionRelation"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchReviewReTestCase"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="reviewReTestCase"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listReviewReTestCase"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="reviewReTestCase"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRunReBug"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="runReBug"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRunReBug"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="runReBug"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRunReIdea"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="runReIdea"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRunReIdea"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="runReIdea"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRunReWorkItem"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="runReWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRunReWorkItem"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="runReWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTestCaseReBug"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="testCaseReBug"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTestCaseReBug"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="testCaseReBug"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTestCaseReIdea"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="testCaseReIdea"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTestCaseReIdea"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="testCaseReIdea"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTestCaseReWorkItem"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="testCaseReWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTestCaseReWorkItem"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="testCaseReWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTestCaseVersionRelation"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="testCaseVersionRelation"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTestCaseVersionRelation"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="testCaseVersionRelation"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTicketReIdea"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="ticketReIdea"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTicketReIdea"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="ticketReIdea"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTicketReSelf"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="ticketReSelf"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTicketReSelf"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="ticketReSelf"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTicketReWorkItem"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="ticketReWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTicketReWorkItem"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="ticketReWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchWorkItemRelationIdea"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="workItemRelationIdea"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listWorkItemRelationIdea"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="workItemRelationIdea"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchWorkItemRelationSelf"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="workItemRelationSelf"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listWorkItemRelationSelf"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="workItemRelationSelf"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchWorkItemRelationTestCase"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="workItemRelationTestCase"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listWorkItemRelationTestCase"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="workItemRelationTestCase"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchWorkItemRelationTicket"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="workItemRelationTicket"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listWorkItemRelationTicket"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="workItemRelationTicket"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchWorkItemVersionRelation"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.* 
        from (
            <include refid="workItemVersionRelation"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listWorkItemVersionRelation"  parameterType="cn.ibizlab.plm.core.base.filter.RelationSearchContext"  resultMap="RelationResultMap">
        select t1.*
        from (
            <include refid="workItemVersionRelation"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="findByPrincipalId" resultMap="RelationResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByPrincipalId" resultMap="RelationResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByPrincipalId" resultMap="RelationResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findById" resultMap="RelationResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where id in <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByTargetId" resultMap="RelationResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where target_id in <foreach item="id" index="index" collection="targetIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByTargetId" resultMap="RelationResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where target_id in <foreach item="id" index="index" collection="targetIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByTargetId" resultMap="RelationResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where target_id in <foreach item="id" index="index" collection="targetIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByTargetId" resultMap="RelationResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where target_id in <foreach item="id" index="index" collection="targetIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByTargetId" resultMap="RelationResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where target_id in <foreach item="id" index="index" collection="targetIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByTargetId" resultMap="RelationResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where target_id in <foreach item="id" index="index" collection="targetIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByTargetId" resultMap="RelationResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where target_id in <foreach item="id" index="index" collection="targetIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByPrincipalId" resultMap="RelationResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByPrincipalId" resultMap="RelationResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByPrincipalId" resultMap="RelationResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>


</mapper>