<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="cn.ibizlab.plm.core.base.mapper.SearchCommentMapper">

        <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="SearchCommentResultMap" type="cn.ibizlab.plm.core.base.domain.SearchComment" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="principalId" column="principal_id" />
		<result property="principalName" column="principal_name" />
		<result property="principalType" column="principal_type" />
		<result property="ownerType" column="owner_type" />
		<result property="updateMan" column="update_man" />
		<result property="updateTime" column="update_time" />
		<result property="createTime" column="create_time" />
		<result property="createMan" column="create_man" />
        <association property="derCustomer" javaType="cn.ibizlab.plm.core.prodmgmt.domain.Customer" column="principal_id" select="cn.ibizlab.plm.core.prodmgmt.mapper.CustomerMapper.selectById" fetchType="lazy"></association>
        <association property="derIdea" javaType="cn.ibizlab.plm.core.prodmgmt.domain.Idea" column="principal_id" select="cn.ibizlab.plm.core.prodmgmt.mapper.IdeaMapper.selectById" fetchType="lazy"></association>
        <association property="derPage" javaType="cn.ibizlab.plm.core.wiki.domain.ArticlePage" column="principal_id" select="cn.ibizlab.plm.core.wiki.mapper.ArticlePageMapper.selectById" fetchType="lazy"></association>
        <association property="derRun" javaType="cn.ibizlab.plm.core.testmgmt.domain.Run" column="principal_id" select="cn.ibizlab.plm.core.testmgmt.mapper.RunMapper.selectById" fetchType="lazy"></association>
        <association property="derTestCase" javaType="cn.ibizlab.plm.core.testmgmt.domain.TestCase" column="principal_id" select="cn.ibizlab.plm.core.testmgmt.mapper.TestCaseMapper.selectById" fetchType="lazy"></association>
        <association property="derTicket" javaType="cn.ibizlab.plm.core.prodmgmt.domain.Ticket" column="principal_id" select="cn.ibizlab.plm.core.prodmgmt.mapper.TicketMapper.selectById" fetchType="lazy"></association>
        <association property="derWorkItem" javaType="cn.ibizlab.plm.core.projmgmt.domain.WorkItem" column="principal_id" select="cn.ibizlab.plm.core.projmgmt.mapper.WorkItemMapper.selectById" fetchType="lazy"></association>
    </resultMap>

    <select id="selectById"  resultMap="SearchCommentResultMap">
        <include refid="view" /> 
         where 
         t1.id=#{ id }
    </select>

    <select id="selectEntity" parameterType="cn.ibizlab.plm.core.base.domain.SearchComment" resultMap="SearchCommentResultMap">
        <include refid="view" /> 
         where 
         (t1.id = #{ id })
    </select>

    <select id="selectEntities" parameterType="java.util.List" resultMap="SearchCommentResultMap">
        <include refid="view" /> 
         where 
         (t1.id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </select>

    <delete id="deleteEntities" parameterType="java.util.List">
    delete from COMMENT
    where (id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </delete>

    <sql id="default" databaseId="mysql">
         <![CDATA[ SELECT t1.`CONTENT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_NAME`, t1.`PRINCIPAL_TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `COMMENT` t1   ]]>  
    </sql>

    <sql id="view" databaseId="mysql">
         <![CDATA[ SELECT t1.`CONTENT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_NAME`, t1.`PRINCIPAL_TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `COMMENT` t1   ]]>  
    </sql>

    <sql id="relation" databaseId="mysql">
         <![CDATA[ SELECT t1.`CONTENT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_NAME`, t1.`PRINCIPAL_TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `COMMENT` t1   ]]>  where 1=1 and ( <choose><when test="ctx.webcontext.search_module != null and ctx.webcontext.search_module == 'project'"> exists(select 1 from work_item t2, project_member t3 where t2.project_id=t3.project_id  and t3.user_id=#{ctx.sessioncontext.srfpersonid} and t1.principal_id=t2.id and t1.principal_type='WORK_ITEM' and t2.is_deleted=0 &lt;if test="ctx.webcontext.project_id != null and ctx.webcontext.project_id != ''"&gt; and t2.project_id=#{ctx.webcontext.project_id}  &lt;/if&gt;)</when><when test="ctx.webcontext.search_module != null and ctx.webcontext.search_module == 'product'"> exists(select 1 from idea t2, product_member t3 where t2.product_id=t3.product_id          and t3.user_id=#{ctx.sessioncontext.srfpersonid} and t1.principal_type='IDEA'          and t1.principal_id=t2.id and t2.is_deleted=0 &lt;if test="ctx.webcontext.product_id != null and ctx.webcontext.product_id != ''"&gt; and t2.product_id=#{ctx.webcontext.product_id}  &lt;/if&gt;)         or exists(select 1 from ticket t2, product_member t3 where t2.product_id=t3.product_id          and t3.user_id=#{ctx.sessioncontext.srfpersonid} and t1.principal_type='TICKET'           and t1.principal_id=t2.id and t2.is_deleted=0 &lt;if test="ctx.webcontext.product_id != null and ctx.webcontext.product_id != ''"&gt; and t2.product_id=#{ctx.webcontext.product_id}  &lt;/if&gt;)         or exists(select 1 from customer t2, product_member t3 where t2.product_id=t3.product_id          and t3.user_id=#{ctx.sessioncontext.srfpersonid} and t1.principal_type='CUSTOMER'           and t1.principal_id=t2.id and t2.is_deleted=0 &lt;if test="ctx.webcontext.product_id != null and ctx.webcontext.product_id != ''"&gt; and t2.product_id=#{ctx.webcontext.product_id}&lt;/if&gt;)</when>     <when test="ctx.webcontext.search_module != null and ctx.webcontext.search_module == 'library'"> exists(select 1 from test_case t2, library_member t3 where t2.test_library_id=t3.library_id          and t3.user_id=#{ctx.sessioncontext.srfpersonid} and t1.principal_id=t2.id and t1.principal_type='TEST_CASE'  and t2.is_deleted=0 &lt;if test="library_id != null and library_id != ''"&gt; and t2.test_library_id=#{ctx.webcontext.library_id}  &lt;/if&gt;)</when>     <when test="ctx.webcontext.search_module != null and ctx.webcontext.search_module == 'space'"> exists(select 1 from page t2, space_member t3 where t2.space_id=t3.space_id          and t3.user_id=#{ctx.sessioncontext.srfpersonid} and t1.principal_id=t2.id and t1.principal_type='PAGE'         and t2.is_deleted=0 &lt;if test="ctx.webcontext.space_id != null and ctx.webcontext.space_id != ''"&gt; and t2.space_id=#{ctx.webcontext.space_id} &lt;/if&gt;)</when>     <otherwise> exists(select 1 from work_item t2, project_member t3 where t2.project_id=t3.project_id  and t3.user_id=#{ctx.sessioncontext.srfpersonid} and t1.principal_type='WORK_ITEM' and t1.principal_id=t2.id and t2.is_deleted=0)         or exists(select 1 from idea t2, product_member t3 where t2.product_id=t3.product_id          and t3.user_id=#{ctx.sessioncontext.srfpersonid} and t1.principal_type='IDEA'          and t1.principal_id=t2.id and t2.is_deleted=0)         or exists(select 1 from ticket t2, product_member t3 where t2.product_id=t3.product_id          and t3.user_id=#{ctx.sessioncontext.srfpersonid} and t1.principal_type='TICKET'          and t1.principal_id=t2.id and t2.is_deleted=0)         or exists(select 1 from customer t2, product_member t3 where t2.product_id=t3.product_id and t3.user_id=#{ctx.sessioncontext.srfpersonid} and t1.principal_type='CUSTOMER' and t1.principal_id=t2.id and t2.is_deleted=0) or exists(select 1 from test_case t2, library_member t3 where t2.test_library_id=t3.library_id and t3.user_id=#{ctx.sessioncontext.srfpersonid} and t1.principal_id='TEST_CASE' and t1.principal_id=t2.id and t2.is_deleted=0) or exists(select 1 from page t2, space_member t3 where t2.space_id = t3.space_id and t3.user_id=#{ctx.sessioncontext.srfpersonid} and t1.principal_type='PAGE' and t1.principal_id=t2.id and t2.is_deleted=0) </otherwise></choose>) 
    </sql>

    <select id="searchDefault"  parameterType="cn.ibizlab.plm.core.base.filter.SearchCommentSearchContext"  resultMap="SearchCommentResultMap">
        select t1.* 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDefault"  parameterType="cn.ibizlab.plm.core.base.filter.SearchCommentSearchContext"  resultMap="SearchCommentResultMap">
        select t1.*
        from (
            <include refid="default"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRelation"  parameterType="cn.ibizlab.plm.core.base.filter.SearchCommentSearchContext"  resultMap="SearchCommentResultMap">
        select t1.* 
        from (
            <include refid="relation"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRelation"  parameterType="cn.ibizlab.plm.core.base.filter.SearchCommentSearchContext"  resultMap="SearchCommentResultMap">
        select t1.*
        from (
            <include refid="relation"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="findByPrincipalId" resultMap="SearchCommentResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByPrincipalId" resultMap="SearchCommentResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByPrincipalId" resultMap="SearchCommentResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByPrincipalId" resultMap="SearchCommentResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByPrincipalId" resultMap="SearchCommentResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByPrincipalId" resultMap="SearchCommentResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByPrincipalId" resultMap="SearchCommentResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>


</mapper>