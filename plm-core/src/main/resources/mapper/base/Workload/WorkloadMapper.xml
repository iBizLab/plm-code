<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="cn.ibizlab.plm.core.base.mapper.WorkloadMapper">

        <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="WorkloadResultMap" type="cn.ibizlab.plm.core.base.domain.Workload" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="principalId" column="principal_id" />
		<result property="principalType" column="principal_type" />
		<result property="ownerType" column="owner_type" />
		<result property="registerDate" column="register_date" />
		<result property="recentParentName" column="recent_parent_name" />
		<result property="recentParent" column="recent_parent" />
		<result property="showIdentifier" column="show_identifier" />
		<result property="recentParentIdentifier" column="recent_parent_identifier" />
		<result property="updateTime" column="update_time" />
		<result property="createMan" column="create_man" />
		<result property="createTime" column="create_time" />
		<result property="updateMan" column="update_man" />
		<result property="typeId" column="type_id" />
		<result property="typeName" column="type_name" />
        <association property="workloadType" javaType="cn.ibizlab.plm.core.base.domain.WorkloadType" column="type_id" select="cn.ibizlab.plm.core.base.mapper.WorkloadTypeMapper.selectById" fetchType="lazy"></association>
        <association property="relIdea" javaType="cn.ibizlab.plm.core.prodmgmt.domain.Idea" column="principal_id" select="cn.ibizlab.plm.core.prodmgmt.mapper.IdeaMapper.selectById" fetchType="lazy"></association>
        <association property="relTestCase" javaType="cn.ibizlab.plm.core.testmgmt.domain.TestCase" column="principal_id" select="cn.ibizlab.plm.core.testmgmt.mapper.TestCaseMapper.selectById" fetchType="lazy"></association>
        <association property="relWorkItem" javaType="cn.ibizlab.plm.core.projmgmt.domain.WorkItem" column="principal_id" select="cn.ibizlab.plm.core.projmgmt.mapper.WorkItemMapper.selectById" fetchType="lazy"></association>
    </resultMap>

    <select id="selectById"  resultMap="WorkloadResultMap">
        <include refid="view" /> 
         where 
         t1.id=#{ id }
    </select>

    <select id="selectEntity" parameterType="cn.ibizlab.plm.core.base.domain.Workload" resultMap="WorkloadResultMap">
        <include refid="view" /> 
         where 
         (t1.id = #{ id })
    </select>

    <select id="selectEntities" parameterType="java.util.List" resultMap="WorkloadResultMap">
        <include refid="view" /> 
         where 
         (t1.id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </select>

    <delete id="deleteEntities" parameterType="java.util.List">
    delete from WORKLOAD
    where (id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </delete>

    <sql id="calendar" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`DESCRIPTION`, t1.`DURATION`, t1.`ID`, t1.`IDENTIFIER`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, t1.`REGISTER_DATE`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE_ID`, t11.`NAME` AS `TYPE_NAME`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `WORKLOAD` t1  LEFT JOIN `WORKLOAD_TYPE` t11 ON t1.`TYPE_ID` = t11.`ID`   ]]>  
    </sql>

    <sql id="default" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`DESCRIPTION`, t1.`DURATION`, t1.`ID`, t1.`IDENTIFIER`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, t1.`REGISTER_DATE`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE_ID`, t11.`NAME` AS `TYPE_NAME`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `WORKLOAD` t1  LEFT JOIN `WORKLOAD_TYPE` t11 ON t1.`TYPE_ID` = t11.`ID`   ]]>  
    </sql>

    <sql id="ideaWorkload" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`DESCRIPTION`, t1.`DURATION`, t1.`ID`, t1.`IDENTIFIER`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, t1.`REGISTER_DATE`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE_ID`, t11.`NAME` AS `TYPE_NAME`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `WORKLOAD` t1  LEFT JOIN `WORKLOAD_TYPE` t11 ON t1.`TYPE_ID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`PRINCIPAL_TYPE` = 'IDEA' ) ]]> 
    </sql>

    <sql id="log" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`DESCRIPTION`, t1.`DURATION`, t1.`ID`, t1.`IDENTIFIER`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, t1.`REGISTER_DATE`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE_ID`, t11.`NAME` AS `TYPE_NAME`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `WORKLOAD` t1  LEFT JOIN `WORKLOAD_TYPE` t11 ON t1.`TYPE_ID` = t11.`ID`   ]]>  
    </sql>

    <sql id="myCalendar" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`DESCRIPTION`, t1.`DURATION`, t1.`ID`, t1.`IDENTIFIER`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, t1.`REGISTER_DATE`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE_ID`, t11.`NAME` AS `TYPE_NAME`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `WORKLOAD` t1  LEFT JOIN `WORKLOAD_TYPE` t11 ON t1.`TYPE_ID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid} ) ]]> 
    </sql>

    <sql id="myIdeaWorkload" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`DESCRIPTION`, t1.`DURATION`, t1.`ID`, t1.`IDENTIFIER`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, t1.`REGISTER_DATE`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE_ID`, t11.`NAME` AS `TYPE_NAME`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `WORKLOAD` t1  LEFT JOIN `WORKLOAD_TYPE` t11 ON t1.`TYPE_ID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`PRINCIPAL_TYPE` = 'IDEA'  AND  t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid} ) ]]> 
    </sql>

    <sql id="myLog" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`DESCRIPTION`, t1.`DURATION`, t1.`ID`, t1.`IDENTIFIER`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, t1.`REGISTER_DATE`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE_ID`, t11.`NAME` AS `TYPE_NAME`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `WORKLOAD` t1  LEFT JOIN `WORKLOAD_TYPE` t11 ON t1.`TYPE_ID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid} ) ]]> 
    </sql>

    <sql id="myTestCaseWorkload" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`DESCRIPTION`, t1.`DURATION`, t1.`ID`, t1.`IDENTIFIER`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, t1.`REGISTER_DATE`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE_ID`, t11.`NAME` AS `TYPE_NAME`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `WORKLOAD` t1  LEFT JOIN `WORKLOAD_TYPE` t11 ON t1.`TYPE_ID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`PRINCIPAL_TYPE` = 'TEST_CASE'  AND  t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid} ) ]]> 
    </sql>

    <sql id="myTypeOf" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`DESCRIPTION`, t1.`DURATION`, t1.`ID`, t1.`IDENTIFIER`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, t1.`REGISTER_DATE`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE_ID`, t11.`NAME` AS `TYPE_NAME`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `WORKLOAD` t1  LEFT JOIN `WORKLOAD_TYPE` t11 ON t1.`TYPE_ID` = t11.`ID`   ]]>  where ( t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid}  AND  <choose><when test="ctx.webcontext.type_id !=null ">  t1.`TYPE_ID` = #{ctx.webcontext.type_id}  </when><otherwise>t1.`TYPE_ID` is null</otherwise></choose> ) 
    </sql>

    <sql id="myWorkItemWorkload" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`DESCRIPTION`, t1.`DURATION`, t1.`ID`, t1.`IDENTIFIER`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, t1.`REGISTER_DATE`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE_ID`, t11.`NAME` AS `TYPE_NAME`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `WORKLOAD` t1  LEFT JOIN `WORKLOAD_TYPE` t11 ON t1.`TYPE_ID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`PRINCIPAL_TYPE` = 'WORK_ITEM'  AND  t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid} ) ]]> 
    </sql>

    <sql id="testCaseWorkload" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`DESCRIPTION`, t1.`DURATION`, t1.`ID`, t1.`IDENTIFIER`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, t1.`REGISTER_DATE`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE_ID`, t11.`NAME` AS `TYPE_NAME`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `WORKLOAD` t1  LEFT JOIN `WORKLOAD_TYPE` t11 ON t1.`TYPE_ID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`PRINCIPAL_TYPE` = 'TEST_CASE' ) ]]> 
    </sql>

    <sql id="typeOf" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`DESCRIPTION`, t1.`DURATION`, t1.`ID`, t1.`IDENTIFIER`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, t1.`REGISTER_DATE`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE_ID`, t11.`NAME` AS `TYPE_NAME`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `WORKLOAD` t1  LEFT JOIN `WORKLOAD_TYPE` t11 ON t1.`TYPE_ID` = t11.`ID`   ]]>  where ( <choose><when test="ctx.webcontext.type_id !=null ">  t1.`TYPE_ID` = #{ctx.webcontext.type_id}  </when><otherwise>t1.`TYPE_ID` is null</otherwise></choose> ) 
    </sql>

    <sql id="view" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`DESCRIPTION`, t1.`DURATION`, t1.`ID`, t1.`IDENTIFIER`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, t1.`REGISTER_DATE`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE_ID`, t11.`NAME` AS `TYPE_NAME`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `WORKLOAD` t1  LEFT JOIN `WORKLOAD_TYPE` t11 ON t1.`TYPE_ID` = t11.`ID`   ]]>  
    </sql>

    <sql id="workItemWorkload" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`DESCRIPTION`, t1.`DURATION`, t1.`ID`, t1.`IDENTIFIER`, t1.`NAME`, t1.`OWNER_TYPE`, t1.`PRINCIPAL_ID`, t1.`PRINCIPAL_TYPE`, t1.`RECENT_PARENT`, t1.`RECENT_PARENT_IDENTIFIER`, t1.`RECENT_PARENT_NAME`, t1.`REGISTER_DATE`, concat(t1.`RECENT_PARENT_IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`TYPE_ID`, t11.`NAME` AS `TYPE_NAME`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `WORKLOAD` t1  LEFT JOIN `WORKLOAD_TYPE` t11 ON t1.`TYPE_ID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`PRINCIPAL_TYPE` = 'WORK_ITEM' ) ]]> 
    </sql>

    <select id="searchCalendar"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.* 
        from (
            <include refid="calendar"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listCalendar"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.*
        from (
            <include refid="calendar"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchDefault"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.* 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDefault"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.*
        from (
            <include refid="default"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchIdeaWorkload"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.* 
        from (
            <include refid="ideaWorkload"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listIdeaWorkload"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.*
        from (
            <include refid="ideaWorkload"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchLog"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.* 
        from (
            <include refid="log"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listLog"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.*
        from (
            <include refid="log"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyCalendar"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.* 
        from (
            <include refid="myCalendar"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyCalendar"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.*
        from (
            <include refid="myCalendar"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyIdeaWorkload"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.* 
        from (
            <include refid="myIdeaWorkload"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyIdeaWorkload"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.*
        from (
            <include refid="myIdeaWorkload"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyLog"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.* 
        from (
            <include refid="myLog"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyLog"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.*
        from (
            <include refid="myLog"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyTestCaseWorkload"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.* 
        from (
            <include refid="myTestCaseWorkload"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyTestCaseWorkload"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.*
        from (
            <include refid="myTestCaseWorkload"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyTypeOf"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.* 
        from (
            <include refid="myTypeOf"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyTypeOf"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.*
        from (
            <include refid="myTypeOf"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyWorkItemWorkload"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.* 
        from (
            <include refid="myWorkItemWorkload"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyWorkItemWorkload"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.*
        from (
            <include refid="myWorkItemWorkload"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTestCaseWorkload"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.* 
        from (
            <include refid="testCaseWorkload"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTestCaseWorkload"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.*
        from (
            <include refid="testCaseWorkload"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTypeOf"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.* 
        from (
            <include refid="typeOf"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTypeOf"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.*
        from (
            <include refid="typeOf"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchWorkItemWorkload"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.* 
        from (
            <include refid="workItemWorkload"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listWorkItemWorkload"  parameterType="cn.ibizlab.plm.core.base.filter.WorkloadSearchContext"  resultMap="WorkloadResultMap">
        select t1.*
        from (
            <include refid="workItemWorkload"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="findByTypeId" resultMap="WorkloadResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where type_id in <foreach item="id" index="index" collection="typeIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByPrincipalId" resultMap="WorkloadResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByPrincipalId" resultMap="WorkloadResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByPrincipalId" resultMap="WorkloadResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where principal_id in <foreach item="id" index="index" collection="principalIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>


</mapper>