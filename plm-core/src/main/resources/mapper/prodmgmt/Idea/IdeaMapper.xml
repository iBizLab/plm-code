<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="cn.ibizlab.plm.core.prodmgmt.mapper.IdeaMapper">

        <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="IdeaResultMap" type="cn.ibizlab.plm.core.prodmgmt.domain.Idea" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="planAt" column="plan_at" />
		<result property="planAtFrom" column="plan_at_from" />
		<result property="planAtTo" column="plan_at_to" />
		<result property="planAtGranularity" column="plan_at_granularity" />
		<result property="realAt" column="real_at" />
		<result property="realAtFrom" column="real_at_from" />
		<result property="realAtTo" column="real_at_to" />
		<result property="realAtGranularity" column="real_at_granularity" />
		<result property="isArchived" column="is_archived" />
		<result property="isDeleted" column="is_deleted" />
		<result property="productIdentifier" column="product_identifier" />
		<result property="assigneeName" column="assignee_name" />
		<result property="assigneeId" column="assignee_id" />
		<result property="curVersionId" column="cur_version_id" />
		<result property="sectionName" column="section_name" />
		<result property="sectionId" column="section_id" />
		<result property="showIdentifier" column="show_identifier" />
		<result property="ideaFrom" column="idea_from" />
		<result property="ideaType" column="idea_type" />
		<result property="estimatedWorkload" column="estimated_workload" />
		<result property="remainingWorkload" column="remaining_workload" />
		<result property="actualWorkload" column="actual_workload" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="createMan" column="create_man" />
		<result property="updateMan" column="update_man" />
		<result property="productId" column="product_id" />
		<result property="productName" column="product_name" />
		<result property="categoryId" column="category_id" />
		<result property="categoryName" column="category_name" />
        <association property="category" javaType="cn.ibizlab.plm.core.base.domain.Category" column="category_id" select="cn.ibizlab.plm.core.base.mapper.CategoryMapper.selectById" fetchType="lazy"></association>
        <association property="product" javaType="cn.ibizlab.plm.core.prodmgmt.domain.Product" column="product_id" select="cn.ibizlab.plm.core.prodmgmt.mapper.ProductMapper.selectById" fetchType="lazy"></association>
    </resultMap>

    <select id="selectById"  resultMap="IdeaResultMap">
        <include refid="view" /> 
         where 
         t1.id=#{ id }
    </select>

    <select id="selectEntity" parameterType="cn.ibizlab.plm.core.prodmgmt.domain.Idea" resultMap="IdeaResultMap">
        <include refid="view" /> 
         where 
         (t1.id = #{ id })
    </select>

    <select id="selectEntities" parameterType="java.util.List" resultMap="IdeaResultMap">
        <include refid="view" /> 
         where 
         (t1.id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </select>

    <delete id="deleteEntities" parameterType="java.util.List">
    delete from IDEA
    where (id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </delete>

    <sql id="default" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t21.`CATEGORIES`, t1.`CATEGORY_ID`, t21.`NAME` AS `CATEGORY_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`IDEA_FROM`, t1.`IDEA_TYPE`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PLAN_AT`, t1.`PLAN_AT_FROM`, t1.`PLAN_AT_GRANULARITY`, t1.`PLAN_AT_TO`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, t1.`PROGRESS`, t1.`REAL_AT`, t1.`REAL_AT_FROM`, t1.`REAL_AT_GRANULARITY`, t1.`REAL_AT_TO`, t21.`SECTION_ID`, t31.`NAME` AS `SECTION_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`STATE`, t1.`SUITE`, t1.`TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `IDEA` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CATEGORY` t21 ON t1.`CATEGORY_ID` = t21.`ID`  LEFT JOIN `SECTION` t31 ON t21.`SECTION_ID` = t31.`ID`   ]]>  
    </sql>

    <sql id="view" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t21.`CATEGORIES`, t1.`CATEGORY_ID`, t21.`NAME` AS `CATEGORY_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`DESCRIPTION`, t1.`ID`, t1.`IDEA_FROM`, t1.`IDEA_TYPE`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PLAN_AT`, t1.`PLAN_AT_FROM`, t1.`PLAN_AT_GRANULARITY`, t1.`PLAN_AT_TO`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, t1.`PROGRESS`, t1.`REAL_AT`, t1.`REAL_AT_FROM`, t1.`REAL_AT_GRANULARITY`, t1.`REAL_AT_TO`, t21.`SECTION_ID`, t31.`NAME` AS `SECTION_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`STATE`, t1.`SUITE`, t1.`TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `IDEA` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CATEGORY` t21 ON t1.`CATEGORY_ID` = t21.`ID`  LEFT JOIN `SECTION` t31 ON t21.`SECTION_ID` = t31.`ID`   ]]>  
    </sql>

    <sql id="advancedSearch" databaseId="mysql">
         <![CDATA[ SELECT t1.`ID`, t1.`IDENTIFIER`, t1.`PRODUCT_ID`, t11.`NAME` AS `PRODUCT_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`STATE`, t1.`TITLE` FROM `IDEA` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  exists(select 1 from product t2, product_member t3 where t1.product_id = t2.id and t2.id = t3.product_id and t3.user_id = #{ctx.sessioncontext.srfpersonid}) ) ]]> 
    </sql>

    <sql id="archived" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t21.`CATEGORIES`, t1.`CATEGORY_ID`, t21.`NAME` AS `CATEGORY_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`IDEA_FROM`, t1.`IDEA_TYPE`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PLAN_AT`, t1.`PLAN_AT_FROM`, t1.`PLAN_AT_GRANULARITY`, t1.`PLAN_AT_TO`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, t1.`PROGRESS`, t1.`REAL_AT`, t1.`REAL_AT_FROM`, t1.`REAL_AT_GRANULARITY`, t1.`REAL_AT_TO`, t21.`SECTION_ID`, t31.`NAME` AS `SECTION_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`STATE`, t1.`SUITE`, t1.`TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `IDEA` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CATEGORY` t21 ON t1.`CATEGORY_ID` = t21.`ID`  LEFT JOIN `SECTION` t31 ON t21.`SECTION_ID` = t31.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_ARCHIVED` = 1  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="baselineChooseIdea" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t21.`CATEGORIES`, t1.`CATEGORY_ID`, t21.`NAME` AS `CATEGORY_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`IDEA_FROM`, t1.`IDEA_TYPE`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PLAN_AT`, t1.`PLAN_AT_FROM`, t1.`PLAN_AT_GRANULARITY`, t1.`PLAN_AT_TO`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, t1.`PROGRESS`, t1.`REAL_AT`, t1.`REAL_AT_FROM`, t1.`REAL_AT_GRANULARITY`, t1.`REAL_AT_TO`, t21.`SECTION_ID`, t31.`NAME` AS `SECTION_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`STATE`, t1.`SUITE`, t1.`TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `IDEA` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CATEGORY` t21 ON t1.`CATEGORY_ID` = t21.`ID`  LEFT JOIN `SECTION` t31 ON t21.`SECTION_ID` = t31.`ID`   ]]>  where NOT(EXISTS(SELECT * FROM `RELATION` t41   WHERE   t1.`ID` = t41.`TARGET_ID`  AND  ( t41.`TARGET_TYPE` = 'idea'  AND  t41.`PRINCIPAL_TYPE` = 'baseline'  AND  t41.`PRINCIPAL_ID` = #{ctx.webcontext.baseline} ) )) and ( t1.`IS_DELETED` = 0  AND  ( <choose><when test="ctx.webcontext.category_id !=null ">  t1.`CATEGORY_ID` = #{ctx.webcontext.category_id}  </when><otherwise>1=1</otherwise></choose>  OR  <choose><when test="ctx.webcontext.category_id !=null ">  t21.`CATEGORIES` LIKE CONCAT('%',#{ctx.webcontext.category_id},'%')  </when><otherwise>1=1</otherwise></choose> ) ) 
    </sql>

    <sql id="commentNotifyAssignee" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`ID` FROM `IDEA` t1   ]]>  where  <![CDATA[ ( exists (select 1 from comment t2 where t1.ID = t2.PRINCIPAL_ID and t2.ID = #{ctx.webcontext.id} and t2.create_man != t1.assignee_id) ) ]]> 
    </sql>

    <sql id="common" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t21.`CATEGORIES`, t1.`CATEGORY_ID`, t21.`NAME` AS `CATEGORY_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`IDEA_FROM`, t1.`IDEA_TYPE`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PLAN_AT`, t1.`PLAN_AT_FROM`, t1.`PLAN_AT_GRANULARITY`, t1.`PLAN_AT_TO`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, t1.`PROGRESS`, t1.`REAL_AT`, t1.`REAL_AT_FROM`, t1.`REAL_AT_GRANULARITY`, t1.`REAL_AT_TO`, t21.`SECTION_ID`, t31.`NAME` AS `SECTION_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`STATE`, t1.`SUITE`, t1.`TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `IDEA` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CATEGORY` t21 ON t1.`CATEGORY_ID` = t21.`ID`  LEFT JOIN `SECTION` t31 ON t21.`SECTION_ID` = t31.`ID`   ]]>  where ( t1.`IS_DELETED` = '0'  AND  ( <choose><when test='!((ctx.webcontext.category_id == null or ctx.webcontext.category_id == "") and (ctx.webcontext.category_id == null or ctx.webcontext.category_id == ""))'><choose><when test='ctx.webcontext.category_id !=null and ctx.webcontext.category_id != &quot;&quot; '>  t21.`CATEGORIES` LIKE CONCAT('%',#{ctx.webcontext.category_id},'%')  </when><otherwise>1=1</otherwise></choose>  OR  <choose><when test='ctx.webcontext.category_id !=null and ctx.webcontext.category_id != &quot;&quot; '>  t1.`CATEGORY_ID` = #{ctx.webcontext.category_id}  </when><otherwise>1=1</otherwise></choose></when><otherwise>1=1</otherwise></choose> ) ) 
    </sql>

    <sql id="deleted" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t21.`CATEGORIES`, t1.`CATEGORY_ID`, t21.`NAME` AS `CATEGORY_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`IDEA_FROM`, t1.`IDEA_TYPE`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PLAN_AT`, t1.`PLAN_AT_FROM`, t1.`PLAN_AT_GRANULARITY`, t1.`PLAN_AT_TO`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, t1.`PROGRESS`, t1.`REAL_AT`, t1.`REAL_AT_FROM`, t1.`REAL_AT_GRANULARITY`, t1.`REAL_AT_TO`, t21.`SECTION_ID`, t31.`NAME` AS `SECTION_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`STATE`, t1.`SUITE`, t1.`TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `IDEA` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CATEGORY` t21 ON t1.`CATEGORY_ID` = t21.`ID`  LEFT JOIN `SECTION` t31 ON t21.`SECTION_ID` = t31.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 1 ) ]]> 
    </sql>

    <sql id="ideaRelationIdea" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t21.`CATEGORIES`, t1.`CATEGORY_ID`, t21.`NAME` AS `CATEGORY_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`IDEA_FROM`, t1.`IDEA_TYPE`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PLAN_AT`, t1.`PLAN_AT_FROM`, t1.`PLAN_AT_GRANULARITY`, t1.`PLAN_AT_TO`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, t1.`PROGRESS`, t1.`REAL_AT`, t1.`REAL_AT_FROM`, t1.`REAL_AT_GRANULARITY`, t1.`REAL_AT_TO`, t21.`SECTION_ID`, t31.`NAME` AS `SECTION_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`STATE`, t1.`SUITE`, t1.`TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `IDEA` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CATEGORY` t21 ON t1.`CATEGORY_ID` = t21.`ID`  LEFT JOIN `SECTION` t31 ON t21.`SECTION_ID` = t31.`ID`   ]]>  where  <![CDATA[ EXISTS(SELECT * FROM `RELATION` t41   WHERE   t1.`ID` = t41.`TARGET_ID`  AND  ( t41.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t41.`TARGET_TYPE` = 'idea'  AND  t41.`PRINCIPAL_TYPE` = 'idea' ) ) ]]> and  <![CDATA[ ( t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="myAssign" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t21.`CATEGORIES`, t1.`CATEGORY_ID`, t21.`NAME` AS `CATEGORY_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`IDEA_FROM`, t1.`IDEA_TYPE`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PLAN_AT`, t1.`PLAN_AT_FROM`, t1.`PLAN_AT_GRANULARITY`, t1.`PLAN_AT_TO`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, t1.`PROGRESS`, t1.`REAL_AT`, t1.`REAL_AT_FROM`, t1.`REAL_AT_GRANULARITY`, t1.`REAL_AT_TO`, t21.`SECTION_ID`, t31.`NAME` AS `SECTION_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`STATE`, t1.`SUITE`, t1.`TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `IDEA` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CATEGORY` t21 ON t1.`CATEGORY_ID` = t21.`ID`  LEFT JOIN `SECTION` t31 ON t21.`SECTION_ID` = t31.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_ARCHIVED` = 0  AND  ( t1.`ASSIGNEE_ID` = #{ctx.sessioncontext.srfpersonid}  OR  t1.`ASSIGNEE_NAME` = #{ctx.sessioncontext.srfpersonname} )  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="myAttention" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t21.`CATEGORIES`, t1.`CATEGORY_ID`, t21.`NAME` AS `CATEGORY_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`IDEA_FROM`, t1.`IDEA_TYPE`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PLAN_AT`, t1.`PLAN_AT_FROM`, t1.`PLAN_AT_GRANULARITY`, t1.`PLAN_AT_TO`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, t1.`PROGRESS`, t1.`REAL_AT`, t1.`REAL_AT_FROM`, t1.`REAL_AT_GRANULARITY`, t1.`REAL_AT_TO`, t21.`SECTION_ID`, t31.`NAME` AS `SECTION_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`STATE`, t1.`SUITE`, t1.`TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `IDEA` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CATEGORY` t21 ON t1.`CATEGORY_ID` = t21.`ID`  LEFT JOIN `SECTION` t31 ON t21.`SECTION_ID` = t31.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0  AND  exists(select 1 from `attention` t2 where t2.owner_id = t1.id and t2.`type` in ('20', '30', '40') and t2.user_id = #{ctx.sessioncontext.srfpersonid}) ) ]]> 
    </sql>

    <sql id="myCreated" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t21.`CATEGORIES`, t1.`CATEGORY_ID`, t21.`NAME` AS `CATEGORY_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`IDEA_FROM`, t1.`IDEA_TYPE`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PLAN_AT`, t1.`PLAN_AT_FROM`, t1.`PLAN_AT_GRANULARITY`, t1.`PLAN_AT_TO`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, t1.`PROGRESS`, t1.`REAL_AT`, t1.`REAL_AT_FROM`, t1.`REAL_AT_GRANULARITY`, t1.`REAL_AT_TO`, t21.`SECTION_ID`, t31.`NAME` AS `SECTION_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`STATE`, t1.`SUITE`, t1.`TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `IDEA` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CATEGORY` t21 ON t1.`CATEGORY_ID` = t21.`ID`  LEFT JOIN `SECTION` t31 ON t21.`SECTION_ID` = t31.`ID`   ]]>  where  <![CDATA[ ( ( t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid}  OR  t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonname} ) ) ]]> 
    </sql>

    <sql id="normal" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t21.`CATEGORIES`, t1.`CATEGORY_ID`, t21.`NAME` AS `CATEGORY_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`IDEA_FROM`, t1.`IDEA_TYPE`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PLAN_AT`, t1.`PLAN_AT_FROM`, t1.`PLAN_AT_GRANULARITY`, t1.`PLAN_AT_TO`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, t1.`PROGRESS`, t1.`REAL_AT`, t1.`REAL_AT_FROM`, t1.`REAL_AT_GRANULARITY`, t1.`REAL_AT_TO`, t21.`SECTION_ID`, t31.`NAME` AS `SECTION_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`STATE`, t1.`SUITE`, t1.`TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `IDEA` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CATEGORY` t21 ON t1.`CATEGORY_ID` = t21.`ID`  LEFT JOIN `SECTION` t31 ON t21.`SECTION_ID` = t31.`ID`   ]]>  where ( t1.`IS_DELETED` = '0'  AND  <choose><when test='ctx.webcontext.section_id !=null and ctx.webcontext.section_id != &quot;&quot; '>  t21.`SECTION_ID` = #{ctx.webcontext.section_id}  </when><otherwise>1=1</otherwise></choose> ) 
    </sql>

    <sql id="notExsistsRelation" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t21.`CATEGORIES`, t1.`CATEGORY_ID`, t21.`NAME` AS `CATEGORY_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`IDEA_FROM`, t1.`IDEA_TYPE`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PLAN_AT`, t1.`PLAN_AT_FROM`, t1.`PLAN_AT_GRANULARITY`, t1.`PLAN_AT_TO`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, t1.`PROGRESS`, t1.`REAL_AT`, t1.`REAL_AT_FROM`, t1.`REAL_AT_GRANULARITY`, t1.`REAL_AT_TO`, t21.`SECTION_ID`, t31.`NAME` AS `SECTION_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`STATE`, t1.`SUITE`, t1.`TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `IDEA` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CATEGORY` t21 ON t1.`CATEGORY_ID` = t21.`ID`  LEFT JOIN `SECTION` t31 ON t21.`SECTION_ID` = t31.`ID`   ]]>  where NOT(EXISTS(SELECT * FROM `RELATION` t41   WHERE   t1.`ID` = t41.`TARGET_ID`  AND  ( t41.`TARGET_TYPE` = #{ctx.webcontext.target_type}  AND  t41.`PRINCIPAL_TYPE` = #{ctx.webcontext.principal_type}  AND  t41.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id} ) )) and ( t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0  AND  ( <choose><when test="ctx.webcontext.category_id !=null ">  t21.`CATEGORIES` LIKE CONCAT('%',#{ctx.webcontext.category_id},'%')  </when><otherwise>1=1</otherwise></choose>  OR  <choose><when test="ctx.webcontext.category_id !=null ">  t1.`CATEGORY_ID` = #{ctx.webcontext.category_id}  </when><otherwise>1=1</otherwise></choose> )  AND  t1.`ID` &lt;&gt; #{ctx.webcontext.principal_id} ) 
    </sql>

    <sql id="notifyAssignee" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`ID` FROM `IDEA` t1   ]]>  where  <![CDATA[ ( t1.`ID` = #{ctx.webcontext.id}  AND  t1.`ASSIGNEE_ID` <> #{ctx.sessioncontext.srfpersonid} ) ]]> 
    </sql>

    <sql id="planRelationIdea" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t21.`CATEGORIES`, t1.`CATEGORY_ID`, t21.`NAME` AS `CATEGORY_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`IDEA_FROM`, t1.`IDEA_TYPE`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PLAN_AT`, t1.`PLAN_AT_FROM`, t1.`PLAN_AT_GRANULARITY`, t1.`PLAN_AT_TO`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, t1.`PROGRESS`, t1.`REAL_AT`, t1.`REAL_AT_FROM`, t1.`REAL_AT_GRANULARITY`, t1.`REAL_AT_TO`, t21.`SECTION_ID`, t31.`NAME` AS `SECTION_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`STATE`, t1.`SUITE`, t1.`TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `IDEA` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CATEGORY` t21 ON t1.`CATEGORY_ID` = t21.`ID`  LEFT JOIN `SECTION` t31 ON t21.`SECTION_ID` = t31.`ID`   ]]>  where  <![CDATA[ EXISTS(SELECT * FROM `RELATION` t41   WHERE   t1.`ID` = t41.`TARGET_ID`  AND  ( t41.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t41.`TARGET_TYPE` = 'idea'  AND  t41.`PRINCIPAL_TYPE` = 'product_plan' ) ) ]]> and  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0 ) ]]> 
    </sql>

    <sql id="recentIdea" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t21.`CATEGORIES`, t1.`CATEGORY_ID`, t21.`NAME` AS `CATEGORY_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`IDEA_FROM`, t1.`IDEA_TYPE`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PLAN_AT`, t1.`PLAN_AT_FROM`, t1.`PLAN_AT_GRANULARITY`, t1.`PLAN_AT_TO`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, t1.`PROGRESS`, t1.`REAL_AT`, t1.`REAL_AT_FROM`, t1.`REAL_AT_GRANULARITY`, t1.`REAL_AT_TO`, t21.`SECTION_ID`, t31.`NAME` AS `SECTION_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`STATE`, t1.`SUITE`, t1.`TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `IDEA` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CATEGORY` t21 ON t1.`CATEGORY_ID` = t21.`ID`  LEFT JOIN `SECTION` t31 ON t21.`SECTION_ID` = t31.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0  AND  exists(select 1 from recent t2 where t1.id=t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )  AND  NOT EXISTS(SELECT 1 FROM `RELATION` t3 WHERE t1.`ID` = t3.`TARGET_ID` AND  t3.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}   ) ) ]]> 
    </sql>

    <sql id="testCaseRelation" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t21.`CATEGORIES`, t1.`CATEGORY_ID`, t21.`NAME` AS `CATEGORY_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`IDEA_FROM`, t1.`IDEA_TYPE`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PLAN_AT`, t1.`PLAN_AT_FROM`, t1.`PLAN_AT_GRANULARITY`, t1.`PLAN_AT_TO`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, t1.`PROGRESS`, t1.`REAL_AT`, t1.`REAL_AT_FROM`, t1.`REAL_AT_GRANULARITY`, t1.`REAL_AT_TO`, t21.`SECTION_ID`, t31.`NAME` AS `SECTION_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`STATE`, t1.`SUITE`, t1.`TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `IDEA` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CATEGORY` t21 ON t1.`CATEGORY_ID` = t21.`ID`  LEFT JOIN `SECTION` t31 ON t21.`SECTION_ID` = t31.`ID`   ]]>  where  <![CDATA[ EXISTS(SELECT * FROM `RELATION` t41   WHERE   t1.`ID` = t41.`TARGET_ID`  AND  ( t41.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t41.`TARGET_TYPE` = 'idea'  AND  t41.`PRINCIPAL_TYPE` = 'test_case' ) ) ]]> and  <![CDATA[ ( t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="ticketRelationIdea" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t21.`CATEGORIES`, t1.`CATEGORY_ID`, t21.`NAME` AS `CATEGORY_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`IDEA_FROM`, t1.`IDEA_TYPE`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PLAN_AT`, t1.`PLAN_AT_FROM`, t1.`PLAN_AT_GRANULARITY`, t1.`PLAN_AT_TO`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, t1.`PROGRESS`, t1.`REAL_AT`, t1.`REAL_AT_FROM`, t1.`REAL_AT_GRANULARITY`, t1.`REAL_AT_TO`, t21.`SECTION_ID`, t31.`NAME` AS `SECTION_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`STATE`, t1.`SUITE`, t1.`TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `IDEA` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CATEGORY` t21 ON t1.`CATEGORY_ID` = t21.`ID`  LEFT JOIN `SECTION` t31 ON t21.`SECTION_ID` = t31.`ID`   ]]>  where  <![CDATA[ EXISTS(SELECT * FROM `RELATION` t41   WHERE   t1.`ID` = t41.`TARGET_ID`  AND  ( t41.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t41.`TARGET_TYPE` = 'idea'  AND  t41.`PRINCIPAL_TYPE` = 'ticket' ) ) ]]> and  <![CDATA[ ( t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="workItemRelationIdea" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t21.`CATEGORIES`, t1.`CATEGORY_ID`, t21.`NAME` AS `CATEGORY_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`IDEA_FROM`, t1.`IDEA_TYPE`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PLAN_AT`, t1.`PLAN_AT_FROM`, t1.`PLAN_AT_GRANULARITY`, t1.`PLAN_AT_TO`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, t1.`PROGRESS`, t1.`REAL_AT`, t1.`REAL_AT_FROM`, t1.`REAL_AT_GRANULARITY`, t1.`REAL_AT_TO`, t21.`SECTION_ID`, t31.`NAME` AS `SECTION_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`STATE`, t1.`SUITE`, t1.`TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `IDEA` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CATEGORY` t21 ON t1.`CATEGORY_ID` = t21.`ID`  LEFT JOIN `SECTION` t31 ON t21.`SECTION_ID` = t31.`ID`   ]]>  where  <![CDATA[ EXISTS(SELECT * FROM `RELATION` t41   WHERE   t1.`ID` = t41.`TARGET_ID`  AND  ( t41.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t41.`TARGET_TYPE` = 'idea'  AND  t41.`PRINCIPAL_TYPE` = 'work_item' ) ) ]]> and  <![CDATA[ ( t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <select id="searchDefault"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.* 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDefault"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.*
        from (
            <include refid="default"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchAdvancedSearch"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.* 
        from (
            <include refid="advancedSearch"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listAdvancedSearch"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.*
        from (
            <include refid="advancedSearch"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchArchived"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.* 
        from (
            <include refid="archived"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listArchived"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.*
        from (
            <include refid="archived"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchBaselineChooseIdea"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.* 
        from (
            <include refid="baselineChooseIdea"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listBaselineChooseIdea"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.*
        from (
            <include refid="baselineChooseIdea"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchCommentNotifyAssignee"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.* 
        from (
            <include refid="commentNotifyAssignee"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listCommentNotifyAssignee"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.*
        from (
            <include refid="commentNotifyAssignee"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchCommon"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.* 
        from (
            <include refid="common"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listCommon"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.*
        from (
            <include refid="common"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchDeleted"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.* 
        from (
            <include refid="deleted"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDeleted"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.*
        from (
            <include refid="deleted"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchIdeaRelationIdea"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.* 
        from (
            <include refid="ideaRelationIdea"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listIdeaRelationIdea"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.*
        from (
            <include refid="ideaRelationIdea"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyAssign"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.* 
        from (
            <include refid="myAssign"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyAssign"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.*
        from (
            <include refid="myAssign"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyAssigneeCount"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultType="java.util.HashMap">
        select count(1) as count_idea,IS_ARCHIVED as is_archived 
        from (
            <include refid="myAssign"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by IS_ARCHIVED
    </select>


    <select id="listMyAssigneeCount"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultType="java.util.HashMap">
        select count(1) as count_idea,IS_ARCHIVED as is_archived
        from (
            <include refid="myAssign"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by IS_ARCHIVED
    </select>

    <select id="searchMyAttention"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.* 
        from (
            <include refid="myAttention"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyAttention"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.*
        from (
            <include refid="myAttention"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyCreated"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.* 
        from (
            <include refid="myCreated"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyCreated"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.*
        from (
            <include refid="myCreated"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNormal"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.* 
        from (
            <include refid="normal"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNormal"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.*
        from (
            <include refid="normal"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNotExsistsRelation"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.* 
        from (
            <include refid="notExsistsRelation"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNotExsistsRelation"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.*
        from (
            <include refid="notExsistsRelation"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNotifyAssignee"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.* 
        from (
            <include refid="notifyAssignee"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNotifyAssignee"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.*
        from (
            <include refid="notifyAssignee"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchPlanRelationIdea"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.* 
        from (
            <include refid="planRelationIdea"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listPlanRelationIdea"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.*
        from (
            <include refid="planRelationIdea"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRecentIdea"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.* 
        from (
            <include refid="recentIdea"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRecentIdea"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.*
        from (
            <include refid="recentIdea"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTestCaseRelation"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.* 
        from (
            <include refid="testCaseRelation"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTestCaseRelation"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.*
        from (
            <include refid="testCaseRelation"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTicketRelationIdea"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.* 
        from (
            <include refid="ticketRelationIdea"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTicketRelationIdea"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.*
        from (
            <include refid="ticketRelationIdea"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchWorkItemRelationIdea"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.* 
        from (
            <include refid="workItemRelationIdea"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listWorkItemRelationIdea"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.IdeaSearchContext"  resultMap="IdeaResultMap">
        select t1.*
        from (
            <include refid="workItemRelationIdea"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="findByCategoryId" resultMap="IdeaResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where category_id in <foreach item="id" index="index" collection="categoryIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByProductId" resultMap="IdeaResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where product_id in <foreach item="id" index="index" collection="productIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByAssigneeId" resultMap="IdeaResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where assignee_id in <foreach item="id" index="index" collection="assigneeIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>


</mapper>