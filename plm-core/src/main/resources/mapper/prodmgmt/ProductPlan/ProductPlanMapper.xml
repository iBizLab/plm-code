<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="cn.ibizlab.plm.core.prodmgmt.mapper.ProductPlanMapper">

        <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="ProductPlanResultMap" type="cn.ibizlab.plm.core.prodmgmt.domain.ProductPlan" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="startAt" column="start_at" />
		<result property="endAt" column="end_at" />
		<result property="categoriesName" column="categories_name" />
		<result property="isDeleted" column="is_deleted" />
		<result property="assigneeName" column="assignee_name" />
		<result property="assigneeId" column="assignee_id" />
		<result property="updateMan" column="update_man" />
		<result property="updateTime" column="update_time" />
		<result property="createTime" column="create_time" />
		<result property="createMan" column="create_man" />
		<result property="productId" column="product_id" />
        <association property="product" javaType="cn.ibizlab.plm.core.prodmgmt.domain.Product" column="product_id" select="cn.ibizlab.plm.core.prodmgmt.mapper.ProductMapper.selectById" fetchType="lazy"></association>
    </resultMap>

    <select id="selectById"  resultMap="ProductPlanResultMap">
        <include refid="view" /> 
         where 
         t1.id=#{ id }
    </select>

    <select id="selectEntity" parameterType="cn.ibizlab.plm.core.prodmgmt.domain.ProductPlan" resultMap="ProductPlanResultMap">
        <include refid="view" /> 
         where 
         (t1.id = #{ id })
    </select>

    <select id="selectEntities" parameterType="java.util.List" resultMap="ProductPlanResultMap">
        <include refid="view" /> 
         where 
         (t1.id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </select>

    <delete id="deleteEntities" parameterType="java.util.List">
    delete from PRODUCT_PLAN
    where (id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </delete>

    <sql id="default" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CATEGORIES`, t1.`CATEGORIES_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ID`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRODUCT_ID`, t1.`START_AT`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `PRODUCT_PLAN` t1   ]]>  
    </sql>

    <sql id="view" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CATEGORIES`, t1.`CATEGORIES_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ID`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRODUCT_ID`, t1.`START_AT`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `PRODUCT_PLAN` t1   ]]>  
    </sql>

    <sql id="categoryPlan" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CATEGORIES`, t1.`CATEGORIES_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ID`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRODUCT_ID`, t1.`START_AT`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `PRODUCT_PLAN` t1   ]]>  where  <![CDATA[ ( t1.`CATEGORIES` LIKE CONCAT('%',#{ctx.webcontext.category_id},'%')  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="normal" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CATEGORIES`, t1.`CATEGORIES_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ID`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRODUCT_ID`, t1.`START_AT`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `PRODUCT_PLAN` t1   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`PRODUCT_ID` = #{ctx.webcontext.product} ) ]]> 
    </sql>

    <sql id="thisPlan" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CATEGORIES`, t1.`CATEGORIES_NAME`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ID`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRODUCT_ID`, t1.`START_AT`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `PRODUCT_PLAN` t1   ]]>  where  <![CDATA[ ( t1.`ID` = #{ctx.webcontext.product_plan}  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <select id="searchDefault"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.ProductPlanSearchContext"  resultMap="ProductPlanResultMap">
        select t1.* 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDefault"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.ProductPlanSearchContext"  resultMap="ProductPlanResultMap">
        select t1.*
        from (
            <include refid="default"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNormal"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.ProductPlanSearchContext"  resultMap="ProductPlanResultMap">
        select t1.* 
        from (
            <include refid="normal"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNormal"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.ProductPlanSearchContext"  resultMap="ProductPlanResultMap">
        select t1.*
        from (
            <include refid="normal"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="findByProductId" resultMap="ProductPlanResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where product_id in <foreach item="id" index="index" collection="productIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>


</mapper>