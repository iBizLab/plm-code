<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="cn.ibizlab.plm.core.prodmgmt.mapper.TicketMapper">

        <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="TicketResultMap" type="cn.ibizlab.plm.core.prodmgmt.domain.Ticket" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="submittedAt" column="submitted_at" />
		<result property="isArchived" column="is_archived" />
		<result property="isDeleted" column="is_deleted" />
		<result property="estimatedAt" column="estimated_at" />
		<result property="assigneeName" column="assignee_name" />
		<result property="assigneeId" column="assignee_id" />
		<result property="submitterId" column="submitter_id" />
		<result property="submitterName" column="submitter_name" />
		<result property="showIdentifier" column="show_identifier" />
		<result property="productIdentifier" column="product_identifier" />
		<result property="updateTime" column="update_time" />
		<result property="createMan" column="create_man" />
		<result property="createTime" column="create_time" />
		<result property="updateMan" column="update_man" />
		<result property="productId" column="product_id" />
		<result property="customerId" column="customer_id" />
		<result property="customerName" column="customer_name" />
		<result property="productName" column="product_name" />
        <association property="customer" javaType="cn.ibizlab.plm.core.prodmgmt.domain.Customer" column="customer_id" select="cn.ibizlab.plm.core.prodmgmt.mapper.CustomerMapper.selectById" fetchType="lazy"></association>
        <association property="product" javaType="cn.ibizlab.plm.core.prodmgmt.domain.Product" column="product_id" select="cn.ibizlab.plm.core.prodmgmt.mapper.ProductMapper.selectById" fetchType="lazy"></association>
    </resultMap>

    <select id="selectById"  resultMap="TicketResultMap">
        <include refid="view" /> 
         where 
         t1.id=#{ id }
    </select>

    <select id="selectEntity" parameterType="cn.ibizlab.plm.core.prodmgmt.domain.Ticket" resultMap="TicketResultMap">
        <include refid="view" /> 
         where 
         (t1.id = #{ id })
    </select>

    <select id="selectEntities" parameterType="java.util.List" resultMap="TicketResultMap">
        <include refid="view" /> 
         where 
         (t1.id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </select>

    <delete id="deleteEntities" parameterType="java.util.List">
    delete from TICKET
    where (id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </delete>

    <sql id="archived" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CHANNEL`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUSTOMER_ID`, t21.`NAME` AS `CUSTOMER_NAME`, t1.`DESCRIPTION`, t1.`ESTIMATED_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION`, t1.`STATE`, t1.`SUBMITTED_AT`, t1.`SUBMITTER_ID`, t1.`SUBMITTER_NAME`, t1.`TAGS`, t1.`TITLE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TICKET` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CUSTOMER` t21 ON t1.`CUSTOMER_ID` = t21.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 1 ) ]]> 
    </sql>

    <sql id="commentNotifyAssignee" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`ID` FROM `TICKET` t1   ]]>  where  <![CDATA[ ( exists (select 1 from comment t2 where t1.ID = t2.PRINCIPAL_ID and t2.ID = #{ctx.webcontext.id}) ) ]]> 
    </sql>

    <sql id="common" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CHANNEL`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUSTOMER_ID`, t21.`NAME` AS `CUSTOMER_NAME`, t1.`DESCRIPTION`, t1.`ESTIMATED_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION`, t1.`STATE`, t1.`SUBMITTED_AT`, t1.`SUBMITTER_ID`, t1.`SUBMITTER_NAME`, t1.`TAGS`, t1.`TITLE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TICKET` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CUSTOMER` t21 ON t1.`CUSTOMER_ID` = t21.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="customerNotreTicket" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CHANNEL`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUSTOMER_ID`, t21.`NAME` AS `CUSTOMER_NAME`, t1.`DESCRIPTION`, t1.`ESTIMATED_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION`, t1.`STATE`, t1.`SUBMITTED_AT`, t1.`SUBMITTER_ID`, t1.`SUBMITTER_NAME`, t1.`TAGS`, t1.`TITLE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TICKET` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CUSTOMER` t21 ON t1.`CUSTOMER_ID` = t21.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0  AND  t1.`CUSTOMER_ID` IS NULL ) ]]> 
    </sql>

    <sql id="customerRelationTicket" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CHANNEL`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUSTOMER_ID`, t21.`NAME` AS `CUSTOMER_NAME`, t1.`DESCRIPTION`, t1.`ESTIMATED_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION`, t1.`STATE`, t1.`SUBMITTED_AT`, t1.`SUBMITTER_ID`, t1.`SUBMITTER_NAME`, t1.`TAGS`, t1.`TITLE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TICKET` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CUSTOMER` t21 ON t1.`CUSTOMER_ID` = t21.`ID`   ]]>  where  <![CDATA[ EXISTS(SELECT * FROM `RELATION` t31   WHERE   t1.`ID` = t31.`TARGET_ID`  AND  ( t31.`TARGET_TYPE` = 'ticket'  AND  t31.`PRINCIPAL_TYPE` = 'customer'  AND  t31.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id} ) ) ]]> and  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0 ) ]]> 
    </sql>

    <sql id="default" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CHANNEL`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUSTOMER_ID`, t21.`NAME` AS `CUSTOMER_NAME`, t1.`DESCRIPTION`, t1.`ESTIMATED_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION`, t1.`STATE`, t1.`SUBMITTED_AT`, t1.`SUBMITTER_ID`, t1.`SUBMITTER_NAME`, t1.`TAGS`, t1.`TITLE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TICKET` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CUSTOMER` t21 ON t1.`CUSTOMER_ID` = t21.`ID`   ]]>  
    </sql>

    <sql id="deleted" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CHANNEL`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUSTOMER_ID`, t21.`NAME` AS `CUSTOMER_NAME`, t1.`DESCRIPTION`, t1.`ESTIMATED_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION`, t1.`STATE`, t1.`SUBMITTED_AT`, t1.`SUBMITTER_ID`, t1.`SUBMITTER_NAME`, t1.`TAGS`, t1.`TITLE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TICKET` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CUSTOMER` t21 ON t1.`CUSTOMER_ID` = t21.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 1 ) ]]> 
    </sql>

    <sql id="ideaRelationTicket" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CHANNEL`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUSTOMER_ID`, t21.`NAME` AS `CUSTOMER_NAME`, t1.`DESCRIPTION`, t1.`ESTIMATED_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION`, t1.`STATE`, t1.`SUBMITTED_AT`, t1.`SUBMITTER_ID`, t1.`SUBMITTER_NAME`, t1.`TAGS`, t1.`TITLE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TICKET` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CUSTOMER` t21 ON t1.`CUSTOMER_ID` = t21.`ID`   ]]>  where  <![CDATA[ EXISTS(SELECT * FROM `RELATION` t31   WHERE   t1.`ID` = t31.`TARGET_ID`  AND  ( t31.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t31.`TARGET_TYPE` = 'ticket'  AND  t31.`PRINCIPAL_TYPE` = 'idea' ) ) ]]> and  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0 ) ]]> 
    </sql>

    <sql id="myAssign" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CHANNEL`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUSTOMER_ID`, t21.`NAME` AS `CUSTOMER_NAME`, t1.`DESCRIPTION`, t1.`ESTIMATED_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION`, t1.`STATE`, t1.`SUBMITTED_AT`, t1.`SUBMITTER_ID`, t1.`SUBMITTER_NAME`, t1.`TAGS`, t1.`TITLE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TICKET` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CUSTOMER` t21 ON t1.`CUSTOMER_ID` = t21.`ID`   ]]>  where  <![CDATA[ ( t1.`ASSIGNEE_ID` = #{ctx.sessioncontext.srfpersonid}  AND  t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0 ) ]]> 
    </sql>

    <sql id="myAttention" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CHANNEL`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUSTOMER_ID`, t21.`NAME` AS `CUSTOMER_NAME`, t1.`DESCRIPTION`, t1.`ESTIMATED_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION`, t1.`STATE`, t1.`SUBMITTED_AT`, t1.`SUBMITTER_ID`, t1.`SUBMITTER_NAME`, t1.`TAGS`, t1.`TITLE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TICKET` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CUSTOMER` t21 ON t1.`CUSTOMER_ID` = t21.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0  AND  exists(select 1 from `attention` t2 where t2.owner_id = t1.id and t2.`type` in ('20', '30', '40') and t2.user_id = #{ctx.sessioncontext.srfpersonid}) ) ]]> 
    </sql>

    <sql id="myCreated" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CHANNEL`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUSTOMER_ID`, t21.`NAME` AS `CUSTOMER_NAME`, t1.`DESCRIPTION`, t1.`ESTIMATED_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION`, t1.`STATE`, t1.`SUBMITTED_AT`, t1.`SUBMITTER_ID`, t1.`SUBMITTER_NAME`, t1.`TAGS`, t1.`TITLE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TICKET` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CUSTOMER` t21 ON t1.`CUSTOMER_ID` = t21.`ID`   ]]>  where  <![CDATA[ ( t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid} ) ]]> 
    </sql>

    <sql id="normal" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CHANNEL`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUSTOMER_ID`, t21.`NAME` AS `CUSTOMER_NAME`, t1.`DESCRIPTION`, t1.`ESTIMATED_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION`, t1.`STATE`, t1.`SUBMITTED_AT`, t1.`SUBMITTER_ID`, t1.`SUBMITTER_NAME`, t1.`TAGS`, t1.`TITLE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TICKET` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CUSTOMER` t21 ON t1.`CUSTOMER_ID` = t21.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="notExsistsRelation" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CHANNEL`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUSTOMER_ID`, t21.`NAME` AS `CUSTOMER_NAME`, t1.`DESCRIPTION`, t1.`ESTIMATED_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION`, t1.`STATE`, t1.`SUBMITTED_AT`, t1.`SUBMITTER_ID`, t1.`SUBMITTER_NAME`, t1.`TAGS`, t1.`TITLE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TICKET` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CUSTOMER` t21 ON t1.`CUSTOMER_ID` = t21.`ID`   ]]>  where  <![CDATA[ NOT(EXISTS(SELECT * FROM `RELATION` t31   WHERE   t1.`ID` = t31.`TARGET_ID`  AND  ( t31.`TARGET_TYPE` = #{ctx.webcontext.target_type}  AND  t31.`PRINCIPAL_TYPE` = #{ctx.webcontext.principal_type}  AND  t31.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id} ) )) ]]> and  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0 ) ]]> 
    </sql>

    <sql id="recentTicket" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CHANNEL`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUSTOMER_ID`, t21.`NAME` AS `CUSTOMER_NAME`, t1.`DESCRIPTION`, t1.`ESTIMATED_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION`, t1.`STATE`, t1.`SUBMITTED_AT`, t1.`SUBMITTER_ID`, t1.`SUBMITTER_NAME`, t1.`TAGS`, t1.`TITLE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TICKET` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CUSTOMER` t21 ON t1.`CUSTOMER_ID` = t21.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0  AND  exists(select 1 from recent t2 where t1.id=t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )  AND  NOT EXISTS(SELECT 1 FROM `RELATION` t3 WHERE t1.`ID` = t3.`TARGET_ID` AND  t3.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}   ) ) ]]> 
    </sql>

    <sql id="ticketReProductTag" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CHANNEL`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUSTOMER_ID`, t21.`NAME` AS `CUSTOMER_NAME`, t1.`DESCRIPTION`, t1.`ESTIMATED_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION`, t1.`STATE`, t1.`SUBMITTED_AT`, t1.`SUBMITTER_ID`, t1.`SUBMITTER_NAME`, t1.`TAGS`, t1.`TITLE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TICKET` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CUSTOMER` t21 ON t1.`CUSTOMER_ID` = t21.`ID`   ]]>  where  <![CDATA[ ( t1.`TAGS` LIKE CONCAT('%',#{ctx.webcontext.product_tag},'%')  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="ticketRelationTicket" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CHANNEL`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUSTOMER_ID`, t21.`NAME` AS `CUSTOMER_NAME`, t1.`DESCRIPTION`, t1.`ESTIMATED_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION`, t1.`STATE`, t1.`SUBMITTED_AT`, t1.`SUBMITTER_ID`, t1.`SUBMITTER_NAME`, t1.`TAGS`, t1.`TITLE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TICKET` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CUSTOMER` t21 ON t1.`CUSTOMER_ID` = t21.`ID`   ]]>  where  <![CDATA[ EXISTS(SELECT * FROM `RELATION` t31   WHERE   t1.`ID` = t31.`TARGET_ID`  AND  ( t31.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t31.`TARGET_TYPE` = 'ticket'  AND  t31.`PRINCIPAL_TYPE` = 'ticket' ) ) ]]> and  <![CDATA[ ( t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="view" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CHANNEL`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUSTOMER_ID`, t21.`NAME` AS `CUSTOMER_NAME`, t1.`DESCRIPTION`, t1.`ESTIMATED_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION`, t1.`STATE`, t1.`SUBMITTED_AT`, t1.`SUBMITTER_ID`, t1.`SUBMITTER_NAME`, t1.`TAGS`, t1.`TITLE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TICKET` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CUSTOMER` t21 ON t1.`CUSTOMER_ID` = t21.`ID`   ]]>  
    </sql>

    <sql id="workItemRelationTicket" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CHANNEL`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUSTOMER_ID`, t21.`NAME` AS `CUSTOMER_NAME`, t1.`DESCRIPTION`, t1.`ESTIMATED_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`NAME`, t1.`PRIORITY`, t1.`PRODUCT_ID`, t11.`IDENTIFIER` AS `PRODUCT_IDENTIFIER`, t11.`NAME` AS `PRODUCT_NAME`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION`, t1.`STATE`, t1.`SUBMITTED_AT`, t1.`SUBMITTER_ID`, t1.`SUBMITTER_NAME`, t1.`TAGS`, t1.`TITLE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TICKET` t1  LEFT JOIN `PRODUCT` t11 ON t1.`PRODUCT_ID` = t11.`ID`  LEFT JOIN `CUSTOMER` t21 ON t1.`CUSTOMER_ID` = t21.`ID`   ]]>  where  <![CDATA[ EXISTS(SELECT * FROM `RELATION` t31   WHERE   t1.`ID` = t31.`TARGET_ID`  AND  ( t31.`TARGET_TYPE` = 'ticket'  AND  t31.`PRINCIPAL_TYPE` = 'work_item'  AND  t31.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id} ) ) ]]> and  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0 ) ]]> 
    </sql>

    <select id="searchArchived"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.* 
        from (
            <include refid="archived"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listArchived"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.*
        from (
            <include refid="archived"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchCommentNotifyAssignee"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.* 
        from (
            <include refid="commentNotifyAssignee"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listCommentNotifyAssignee"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.*
        from (
            <include refid="commentNotifyAssignee"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchCommon"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.* 
        from (
            <include refid="common"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listCommon"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.*
        from (
            <include refid="common"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchCustomerNotreTicket"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.* 
        from (
            <include refid="customerNotreTicket"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listCustomerNotreTicket"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.*
        from (
            <include refid="customerNotreTicket"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchCustomerRelationTicket"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.* 
        from (
            <include refid="customerRelationTicket"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listCustomerRelationTicket"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.*
        from (
            <include refid="customerRelationTicket"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchDefault"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.* 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDefault"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.*
        from (
            <include refid="default"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchDeleted"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.* 
        from (
            <include refid="deleted"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDeleted"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.*
        from (
            <include refid="deleted"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchIdeaRelationTicket"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.* 
        from (
            <include refid="ideaRelationTicket"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listIdeaRelationTicket"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.*
        from (
            <include refid="ideaRelationTicket"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyAssign"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.* 
        from (
            <include refid="myAssign"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyAssign"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.*
        from (
            <include refid="myAssign"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyAssigneeCount"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultType="java.util.HashMap">
        select IS_ARCHIVED as is_archived,count(1) as count_ticket 
        from (
            <include refid="myAssign"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by IS_ARCHIVED
    </select>


    <select id="listMyAssigneeCount"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultType="java.util.HashMap">
        select IS_ARCHIVED as is_archived,count(1) as count_ticket
        from (
            <include refid="myAssign"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by IS_ARCHIVED
    </select>

    <select id="searchMyAttention"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.* 
        from (
            <include refid="myAttention"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyAttention"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.*
        from (
            <include refid="myAttention"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyCreated"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.* 
        from (
            <include refid="myCreated"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyCreated"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.*
        from (
            <include refid="myCreated"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNormal"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.* 
        from (
            <include refid="normal"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNormal"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.*
        from (
            <include refid="normal"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNotExsistsRelation"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.* 
        from (
            <include refid="notExsistsRelation"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNotExsistsRelation"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.*
        from (
            <include refid="notExsistsRelation"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRecentTicket"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.* 
        from (
            <include refid="recentTicket"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRecentTicket"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.*
        from (
            <include refid="recentTicket"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTicketReProductTag"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.* 
        from (
            <include refid="ticketReProductTag"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTicketReProductTag"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.*
        from (
            <include refid="ticketReProductTag"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTicketRelationTicket"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.* 
        from (
            <include refid="ticketRelationTicket"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTicketRelationTicket"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.*
        from (
            <include refid="ticketRelationTicket"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchWorkItemRelationTicket"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.* 
        from (
            <include refid="workItemRelationTicket"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listWorkItemRelationTicket"  parameterType="cn.ibizlab.plm.core.prodmgmt.filter.TicketSearchContext"  resultMap="TicketResultMap">
        select t1.*
        from (
            <include refid="workItemRelationTicket"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="findByCustomerId" resultMap="TicketResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where customer_id in <foreach item="id" index="index" collection="customerIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByProductId" resultMap="TicketResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where product_id in <foreach item="id" index="index" collection="productIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByAssigneeId" resultMap="TicketResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where assignee_id in <foreach item="id" index="index" collection="assigneeIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>


</mapper>