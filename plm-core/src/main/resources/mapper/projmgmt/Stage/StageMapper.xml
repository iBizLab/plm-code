<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="cn.ibizlab.plm.core.projmgmt.mapper.StageMapper">

        <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="StageResultMap" type="cn.ibizlab.plm.core.projmgmt.domain.Stage" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="isCurrent" column="is_current"/>
		<result property="operatedTime" column="operated_time"/>
		<result property="pColor" column="p_color"/>
		<result property="pType" column="p_type"/>
		<result property="pSequence" column="p_sequence"/>
		<result property="createMan" column="create_man"/>
		<result property="createTime" column="create_time"/>
		<result property="updateMan" column="update_man"/>
		<result property="updateTime" column="update_time"/>
		<result property="releaseId" column="release_id"/>
		<result property="pid" column="pid"/>
        <association property="release" javaType="cn.ibizlab.plm.core.projmgmt.domain.Release" column="release_id" select="cn.ibizlab.plm.core.projmgmt.mapper.ReleaseMapper.selectById" fetchType="lazy"></association>
        <association property="stage" javaType="cn.ibizlab.plm.core.projmgmt.domain.Stage" column="pid" select="cn.ibizlab.plm.core.projmgmt.mapper.StageMapper.selectById" fetchType="lazy"></association>
    </resultMap>

    <select id="selectById"  resultMap="StageResultMap">
        <include refid="view" /> 
         where 
         t1.id=#{ id }
    </select>

    <select id="selectEntity" parameterType="cn.ibizlab.plm.core.projmgmt.domain.Stage" resultMap="StageResultMap">
        <include refid="view" /> 
         where 
         (t1.id = #{ id })
    </select>

    <select id="selectEntities" parameterType="java.util.List" resultMap="StageResultMap">
        <include refid="view" /> 
         where 
         (t1.id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </select>

    <delete id="deleteEntities" parameterType="java.util.List">
    delete from STAGE
    where (id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </delete>

    <sql id="default" databaseId="mysql">
         <![CDATA[ SELECT t1.`COLOR`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IS_CURRENT`, t1.`NAME`, t1.`OPERATED_TIME`, t1.`PID`, t11.`NAME` AS `PNAME`, t11.`COLOR` AS `P_COLOR`, t11.`SEQUENCE` AS `P_SEQUENCE`, t11.`TYPE` AS `P_TYPE`, t1.`RELEASE_ID`, t1.`SEQUENCE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `STAGE` t1  LEFT JOIN `STAGE` t11 ON t1.`PID` = t11.`ID`   ]]>  
    </sql>

    <sql id="view" databaseId="mysql">
         <![CDATA[ SELECT t1.`COLOR`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IS_CURRENT`, t1.`NAME`, t1.`OPERATED_TIME`, t1.`PID`, t11.`NAME` AS `PNAME`, t11.`COLOR` AS `P_COLOR`, t11.`SEQUENCE` AS `P_SEQUENCE`, t11.`TYPE` AS `P_TYPE`, t1.`RELEASE_ID`, t1.`SEQUENCE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `STAGE` t1  LEFT JOIN `STAGE` t11 ON t1.`PID` = t11.`ID`   ]]>  
    </sql>

    <sql id="curProject" databaseId="mysql">
         <![CDATA[ SELECT t1.`COLOR`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IS_CURRENT`, t1.`NAME`, t1.`OPERATED_TIME`, t1.`PID`, t11.`NAME` AS `PNAME`, t11.`COLOR` AS `P_COLOR`, t11.`SEQUENCE` AS `P_SEQUENCE`, t11.`TYPE` AS `P_TYPE`, t1.`RELEASE_ID`, t1.`SEQUENCE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `STAGE` t1  LEFT JOIN `STAGE` t11 ON t1.`PID` = t11.`ID`  LEFT JOIN `PROJECT_RELEASE` t21 ON t1.`RELEASE_ID` = t21.`ID`   ]]>  where  <![CDATA[ ( t21.`PROJECT_ID` = #{ctx.webcontext.project} ) ]]> 
    </sql>

    <sql id="curStage" databaseId="mysql">
         <![CDATA[ SELECT t1.`COLOR`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IS_CURRENT`, t1.`NAME`, t1.`OPERATED_TIME`, t1.`PID`, t11.`NAME` AS `PNAME`, t11.`COLOR` AS `P_COLOR`, t11.`SEQUENCE` AS `P_SEQUENCE`, t11.`TYPE` AS `P_TYPE`, t1.`RELEASE_ID`, t1.`SEQUENCE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `STAGE` t1  LEFT JOIN `STAGE` t11 ON t1.`PID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`RELEASE_ID` = #{ctx.datacontext.release} ) ]]> 
    </sql>

    <sql id="owner" databaseId="mysql">
         <![CDATA[ SELECT t1.`COLOR`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IS_CURRENT`, t1.`NAME`, t1.`OPERATED_TIME`, t1.`PID`, t11.`NAME` AS `PNAME`, t11.`COLOR` AS `P_COLOR`, t11.`SEQUENCE` AS `P_SEQUENCE`, t11.`TYPE` AS `P_TYPE`, t1.`RELEASE_ID`, t1.`SEQUENCE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `STAGE` t1  LEFT JOIN `STAGE` t11 ON t1.`PID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`ID` = #{ctx.datacontext.owner_id} ) ]]> 
    </sql>

    <sql id="system" databaseId="mysql">
         <![CDATA[ SELECT t1.`COLOR`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IS_CURRENT`, t1.`NAME`, t1.`OPERATED_TIME`, t1.`PID`, t11.`NAME` AS `PNAME`, t11.`COLOR` AS `P_COLOR`, t11.`SEQUENCE` AS `P_SEQUENCE`, t11.`TYPE` AS `P_TYPE`, t1.`RELEASE_ID`, t1.`SEQUENCE`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `STAGE` t1  LEFT JOIN `STAGE` t11 ON t1.`PID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`RELEASE_ID` IS NULL ) ]]> 
    </sql>

    <select id="searchDefault"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.StageSearchContext"  resultMap="StageResultMap">
        select t1.* 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDefault"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.StageSearchContext"  resultMap="StageResultMap">
        select t1.*
        from (
            <include refid="default"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchCurOwnerSys"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.StageSearchContext"  resultMap="StageResultMap">
        select t1.* 
        from (
            <include refid="system"/>
                 union
            <include refid="curStage"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listCurOwnerSys"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.StageSearchContext"  resultMap="StageResultMap">
        select t1.*
        from (
            <include refid="system"/>
                 union
            <include refid="curStage"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchCurProject"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.StageSearchContext"  resultMap="StageResultMap">
        select t1.* 
        from (
            <include refid="curProject"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listCurProject"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.StageSearchContext"  resultMap="StageResultMap">
        select t1.*
        from (
            <include refid="curProject"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchCurStage"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.StageSearchContext"  resultMap="StageResultMap">
        select t1.* 
        from (
            <include refid="curStage"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listCurStage"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.StageSearchContext"  resultMap="StageResultMap">
        select t1.*
        from (
            <include refid="curStage"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchOwner"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.StageSearchContext"  resultMap="StageResultMap">
        select t1.* 
        from (
            <include refid="owner"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listOwner"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.StageSearchContext"  resultMap="StageResultMap">
        select t1.*
        from (
            <include refid="owner"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchSystem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.StageSearchContext"  resultMap="StageResultMap">
        select t1.* 
        from (
            <include refid="system"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listSystem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.StageSearchContext"  resultMap="StageResultMap">
        select t1.*
        from (
            <include refid="system"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="listView"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.StageSearchContext"  resultMap="StageResultMap">
        select t1.*
        from (
            <include refid="view" />
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
    </select>

    <select id="findByReleaseId" resultMap="StageResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where release_id in <foreach item="id" index="index" collection="releaseIds" open="(" separator="," close=")">#{id}</foreach>  order by SEQUENCE ASC
    </select>

    <select id="findByPid" resultMap="StageResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where pid in <foreach item="id" index="index" collection="pids" open="(" separator="," close=")">#{id}</foreach>  order by SEQUENCE ASC
    </select>


</mapper>