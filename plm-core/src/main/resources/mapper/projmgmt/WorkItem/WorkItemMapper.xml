<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="cn.ibizlab.plm.core.projmgmt.mapper.WorkItemMapper">

        <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="WorkItemResultMap" type="cn.ibizlab.plm.core.projmgmt.domain.WorkItem" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="isArchived" column="is_archived" />
		<result property="isDeleted" column="is_deleted" />
		<result property="startAt" column="start_at" />
		<result property="endAt" column="end_at" />
		<result property="state" column="state" />
		<result property="isLeaf" column="is_leaf" />
		<result property="backlogType" column="backlog_type" />
		<result property="backlogFrom" column="backlog_from" />
		<result property="assigneeName" column="assignee_name" />
		<result property="reappearProbability" column="reappear_probability" />
		<result property="assigneeId" column="assignee_id" />
		<result property="projectType" column="project_type" />
		<result property="workItemTypeGroup" column="work_item_type_group" />
		<result property="entryStatus" column="entry_status" />
		<result property="entryPosition" column="entry_position" />
		<result property="repNum" column="rep_num" />
		<result property="workItemTypeSequence" column="work_item_type_sequence" />
		<result property="completedAt" column="completed_at" />
		<result property="estimatedWorkload" column="estimated_workload" />
		<result property="jobType" column="job_type" />
		<result property="remainingWorkload" column="remaining_workload" />
		<result property="showIdentifier" column="show_identifier" />
		<result property="projectIdentifier" column="project_identifier" />
		<result property="stateType" column="state_type" />
		<result property="updateMan" column="update_man" />
		<result property="createTime" column="create_time" />
		<result property="createMan" column="create_man" />
		<result property="updateTime" column="update_time" />
		<result property="projectId" column="project_id" />
		<result property="workItemTypeId" column="work_item_type_id" />
		<result property="projectName" column="project_name" />
		<result property="workItemTypeName" column="work_item_type_name" />
		<result property="pid" column="pid" />
		<result property="sprintId" column="sprint_id" />
		<result property="versionId" column="version_id" />
		<result property="boardId" column="board_id" />
		<result property="entryId" column="entry_id" />
		<result property="swimlaneId" column="swimlane_id" />
		<result property="entryName" column="entry_name" />
		<result property="boardName" column="board_name" />
		<result property="topId" column="top_id" />
		<result property="topTitle" column="top_title" />
		<result property="versionName" column="version_name" />
		<result property="sprintName" column="sprint_name" />
		<result property="releaseId" column="release_id" />
        <association property="board" javaType="cn.ibizlab.plm.core.projmgmt.domain.Board" column="board_id" select="cn.ibizlab.plm.core.projmgmt.mapper.BoardMapper.selectById" fetchType="lazy"></association>
        <association property="entry" javaType="cn.ibizlab.plm.core.projmgmt.domain.Entry" column="entry_id" select="cn.ibizlab.plm.core.projmgmt.mapper.EntryMapper.selectById" fetchType="lazy"></association>
        <association property="project" javaType="cn.ibizlab.plm.core.projmgmt.domain.Project" column="project_id" select="cn.ibizlab.plm.core.projmgmt.mapper.ProjectMapper.selectById" fetchType="lazy"></association>
        <association property="release" javaType="cn.ibizlab.plm.core.projmgmt.domain.Release" column="release_id" select="cn.ibizlab.plm.core.projmgmt.mapper.ReleaseMapper.selectById" fetchType="lazy"></association>
        <association property="sprint" javaType="cn.ibizlab.plm.core.projmgmt.domain.Sprint" column="sprint_id" select="cn.ibizlab.plm.core.projmgmt.mapper.SprintMapper.selectById" fetchType="lazy"></association>
        <association property="swimlane" javaType="cn.ibizlab.plm.core.projmgmt.domain.Swimlane" column="swimlane_id" select="cn.ibizlab.plm.core.projmgmt.mapper.SwimlaneMapper.selectById" fetchType="lazy"></association>
        <association property="version" javaType="cn.ibizlab.plm.core.projmgmt.domain.Version" column="version_id" select="cn.ibizlab.plm.core.projmgmt.mapper.VersionMapper.selectById" fetchType="lazy"></association>
        <association property="workItem" javaType="cn.ibizlab.plm.core.projmgmt.domain.WorkItem" column="pid" select="cn.ibizlab.plm.core.projmgmt.mapper.WorkItemMapper.selectById" fetchType="lazy"></association>
        <association property="workItemState" javaType="cn.ibizlab.plm.core.projmgmt.domain.WorkItemState" column="state" select="cn.ibizlab.plm.core.projmgmt.mapper.WorkItemStateMapper.selectById" fetchType="lazy"></association>
        <association property="workItem2" javaType="cn.ibizlab.plm.core.projmgmt.domain.WorkItem" column="top_id" select="cn.ibizlab.plm.core.projmgmt.mapper.WorkItemMapper.selectById" fetchType="lazy"></association>
        <association property="workItemType" javaType="cn.ibizlab.plm.core.projmgmt.domain.WorkItemType" column="work_item_type_id" select="cn.ibizlab.plm.core.projmgmt.mapper.WorkItemTypeMapper.selectById" fetchType="lazy"></association>
    </resultMap>

    <select id="selectById"  resultMap="WorkItemResultMap">
        <include refid="view" /> 
         where 
         t1.id=#{ id }
    </select>

    <select id="selectEntity" parameterType="cn.ibizlab.plm.core.projmgmt.domain.WorkItem" resultMap="WorkItemResultMap">
        <include refid="view" /> 
         where 
         (t1.id = #{ id })
    </select>

    <select id="selectEntities" parameterType="java.util.List" resultMap="WorkItemResultMap">
        <include refid="view" /> 
         where 
         (t1.id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </select>

    <delete id="deleteEntities" parameterType="java.util.List">
    delete from WORK_ITEM
    where (id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </delete>

    <sql id="archived" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_ARCHIVED` = 1  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="bug" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0  AND  t21.`GROUP` = 'bug' ) ]]> 
    </sql>

    <sql id="bugStateGroupGrid" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t21.`GROUP` = 'bug' ) ]]> 
    </sql>

    <sql id="changeParent" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where ( ( <choose><when test="ctx.webcontext.query_recent !=null ">  exists(select 1 from recent t2 where t1.ID = t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> ) 

  AND  t1.`IS_DELETED` = '0'  AND  t1.`IS_ARCHIVED` = '0' ) 
    </sql>

    <sql id="chooseChild" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where ( t1.`IS_DELETED` = '0'  AND  t1.`IS_ARCHIVED` = '0'  AND  t1.`ID` &lt;&gt; #{ctx.webcontext.principal_id}  AND  t1.`PROJECT_ID` = #{ctx.webcontext.project_id}  AND  ( <choose><when test="ctx.webcontext.query_recent !=null ">  exists(select 1 from recent t2 where t1.ID = t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> )  AND  ( t1.`PID` &lt;&gt; #{ctx.webcontext.principal_id}  OR  t1.`PID` IS NULL 'null' ) ) 
    </sql>

    <sql id="commentNotifyAssignee" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`ID` FROM `WORK_ITEM` t1   ]]>  where  <![CDATA[ EXISTS(SELECT * FROM `ATTENTION` t11   WHERE   t1.`ID` = t11.`OWNER_ID`  AND  t11.`OWNER_TYPE` = 'WORK_ITEM'  AND  t11.`OWNER_SUBTYPE` = 'WORK_ITEM'  AND  ( t11.`USER_ID` = #{ctx.sessioncontext.srfuserid} ) ) ]]> and  <![CDATA[ ( exists (select 1 from comment t2 where t1.ID = t2.PRINCIPAL_ID and t2.ID = #{ctx.webcontext.id}) ) ]]> 
    </sql>

    <sql id="common" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`END_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`SEVERITY`, t1.`START_AT`, t1.`STATE`, t1.`TITLE`, t1.`TOP_ID`, t1.`WORK_ITEM_TYPE_ID` FROM `WORK_ITEM` t1  LEFT JOIN `WORK_ITEM` t11 ON t1.`PID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="commonBug" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`END_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`SEVERITY`, t1.`START_AT`, t1.`STATE`, t1.`TITLE`, t1.`TOP_ID`, t1.`WORK_ITEM_TYPE_ID` FROM `WORK_ITEM` t1  LEFT JOIN `WORK_ITEM` t11 ON t1.`PID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t21.`GROUP` = 'bug' ) ]]> 
    </sql>

    <sql id="default" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  
    </sql>

    <sql id="deleted" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 1 ) ]]> 
    </sql>

    <sql id="ideaRelationWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ EXISTS(SELECT * FROM `RELATION` t101   WHERE   t1.`ID` = t101.`TARGET_ID`  AND  ( t101.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t101.`TARGET_TYPE` = 'work_item'  AND  t101.`PRINCIPAL_TYPE` = 'idea' ) ) ]]> and  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0 ) ]]> 
    </sql>

    <sql id="milestone" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0  AND  t1.`WORK_ITEM_TYPE_ID` = 'waterfall_milestone' ) ]]> 
    </sql>

    <sql id="myAssignee" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`ASSIGNEE_ID` = #{ctx.sessioncontext.srfpersonid}  AND  t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="myAttention" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0  AND  exists(select 1 from `attention` t2 where t2.owner_id = t1.id and t2.`type` in ('20', '30', '40') and t2.user_id = #{ctx.sessioncontext.srfpersonid}) ) ]]> 
    </sql>

    <sql id="myCreated" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid} ) ]]> 
    </sql>

    <sql id="myFilter" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where ( t1.`IS_DELETED` = '0'  AND  <choose><when test="ctx.webcontext.my_join !=null ">  exists(select 1 from `attention` t2 where t1.id = t2.owner_id and t2.user_id = #{ctx.sessioncontext.srfpersonid}) </when><otherwise>1=1</otherwise></choose>
 ) 
    </sql>

    <sql id="myTodo" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`ASSIGNEE_ID` = #{ctx.sessioncontext.srfpersonid}  AND  t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0  AND  t1.`STATE` <> '40' ) ]]> 
    </sql>

    <sql id="noBugWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where NOT(EXISTS(SELECT * FROM `RELATION` t101   WHERE   t1.`ID` = t101.`TARGET_ID`  AND  ( t101.`PRINCIPAL_TYPE` = 'test_case'  AND  t101.`TARGET_TYPE` = 'work_item'  AND  t101.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id} ) )) and ( ( <choose><when test="ctx.webcontext.query_recent !=null ">  exists(select 1 from recent t2 where t1.ID = t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> )  AND  t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0  AND  t21.`GROUP` &lt;&gt; 'bug' ) 
    </sql>

    <sql id="normal" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0 ) ]]> 
    </sql>

    <sql id="notExsistsBugRelation" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where NOT(EXISTS(SELECT * FROM `RELATION` t101   WHERE   t1.`ID` = t101.`TARGET_ID`  AND  ( t101.`PRINCIPAL_TYPE` = #{ctx.webcontext.principal_type}  AND  t101.`TARGET_TYPE` = #{ctx.webcontext.target_type}  AND  t101.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id} ) )) and ( ( <choose><when test="ctx.webcontext.query_recent !=null ">  exists(select 1 from recent t2 where t1.ID = t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> )  AND  t1.`WORK_ITEM_TYPE_ID` LIKE '%bug%'  AND  t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0 ) 
    </sql>

    <sql id="notExsistsRelation" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where NOT(EXISTS(SELECT * FROM `RELATION` t101   WHERE   t1.`ID` = t101.`TARGET_ID`  AND  ( <choose><when test="ctx.webcontext.principal_type !=null ">  t101.`PRINCIPAL_TYPE` = #{ctx.webcontext.principal_type}  </when><otherwise>1=1</otherwise></choose>  AND  <choose><when test="ctx.webcontext.target_type !=null ">  t101.`TARGET_TYPE` = #{ctx.webcontext.target_type}  </when><otherwise>1=1</otherwise></choose>  AND  <choose><when test="ctx.webcontext.principal_id !=null ">  t101.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  </when><otherwise>1=1</otherwise></choose> ) )) and ( ( <choose><when test="ctx.webcontext.query_recent !=null ">  exists(select 1 from recent t2 where t1.ID = t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> )  AND  t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0  AND  <choose><when test="ctx.webcontext.principal_id !=null ">  t1.`ID` &lt;&gt; #{ctx.webcontext.principal_id}  </when><otherwise>1=1</otherwise></choose> ) 
    </sql>

    <sql id="notbugExsistsRelation" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where NOT(EXISTS(SELECT * FROM `RELATION` t101   WHERE   t1.`ID` = t101.`TARGET_ID`  AND  ( <choose><when test="ctx.webcontext.principal_type !=null ">  t101.`PRINCIPAL_TYPE` = #{ctx.webcontext.principal_type}  </when><otherwise>1=1</otherwise></choose>  AND  <choose><when test="ctx.webcontext.target_type !=null ">  t101.`TARGET_TYPE` = #{ctx.webcontext.target_type}  </when><otherwise>1=1</otherwise></choose>  AND  <choose><when test="ctx.webcontext.principal_id !=null ">  t101.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  </when><otherwise>1=1</otherwise></choose> ) )) and ( ( <choose><when test="ctx.webcontext.query_recent !=null ">  exists(select 1 from recent t2 where t1.ID = t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> )  AND  t1.`WORK_ITEM_TYPE_ID` &lt;&gt; 'kanban_bug'  AND  t1.`WORK_ITEM_TYPE_ID` &lt;&gt; 'scrum_bug'  AND  t1.`WORK_ITEM_TYPE_ID` &lt;&gt; 'waterfall_bug'  AND  t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0  AND  <choose><when test="ctx.webcontext.principal_id !=null ">  t1.`ID` &lt;&gt; #{ctx.webcontext.principal_id}  </when><otherwise>1=1</otherwise></choose> ) 
    </sql>

    <sql id="overviewChart" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="plan" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where ( ( <choose><when test="ctx.webcontext.query_recent !=null ">  exists(select 1 from recent t2 where t1.ID = t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> )  AND  t1.`IS_DELETED` = '0'  AND  t1.`IS_ARCHIVED` = '0'  AND  ( t1.`RELEASE_ID` &lt;&gt; #{ctx.webcontext.release_id}  OR  t1.`RELEASE_ID` IS NULL 'null' ) ) 
    </sql>

    <sql id="recentWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0  AND  exists(select 1 from recent t2 where t1.id=t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )  AND  NOT EXISTS(SELECT 1 FROM `RELATION` t3 WHERE t1.`ID` = t3.`TARGET_ID` AND  t3.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}   ) ) ]]> 
    </sql>

    <sql id="requirement" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t21.`GROUP` = 'requirement'  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="runRelationBug" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ EXISTS(SELECT * FROM `RELATION` t101   WHERE   t1.`ID` = t101.`TARGET_ID`  AND  ( t101.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t101.`PRINCIPAL_TYPE` = 'run'  AND  t101.`TARGET_TYPE` = 'work_item' ) ) ]]> and  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0  AND  t21.`GROUP` = 'bug' ) ]]> 
    </sql>

    <sql id="runRelationWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ EXISTS(SELECT * FROM `RELATION` t101   WHERE   t1.`ID` = t101.`TARGET_ID`  AND  ( t101.`TARGET_TYPE` = 'bug'  AND  t101.`PRINCIPAL_ID` = #{ctx.webcontext.run}  AND  ( t101.`PRINCIPAL_TYPE` = 'run'  OR  t101.`PRINCIPAL_TYPE` = 'test_case' ) ) ) ]]> and  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0 ) ]]> 
    </sql>

    <sql id="testCaseRelationBug" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ EXISTS(SELECT * FROM `RELATION` t101   WHERE   t1.`ID` = t101.`TARGET_ID`  AND  ( t101.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t101.`PRINCIPAL_TYPE` = 'test_case'  AND  t101.`TARGET_TYPE` = 'bug' ) ) ]]> and  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0 ) ]]> 
    </sql>

    <sql id="testCaseRelationWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ EXISTS(SELECT * FROM `RELATION` t101   WHERE   t1.`ID` = t101.`TARGET_ID`  AND  ( t101.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t101.`TARGET_TYPE` = 'work_item'  AND  t101.`PRINCIPAL_TYPE` = 'test_case' ) ) ]]> and  <![CDATA[ ( t1.WORK_ITEM_TYPE_ID not like '%bug%'  AND  t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0 ) ]]> 
    </sql>

    <sql id="testPlanRelationBug" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0  AND  t21.`GROUP` = 'bug'  AND  (     EXISTS (       -- 与计划ID关联的RUN的WORK_ITEM       SELECT 1       FROM `relation` rel       INNER JOIN `RUN` ru ON ru.`ID` = rel.`PRINCIPAL_ID`       WHERE         rel.`TARGET_ID` = t1.`ID`         AND ru.`PLAN_ID` = #{ctx.webcontext.principal_id}         AND rel.`TARGET_TYPE` = 'bug'         AND rel.`PRINCIPAL_TYPE` = 'run'     )     OR EXISTS (       -- 直接与计划ID关联的WORK_ITEM       SELECT 1       FROM `relation` r       WHERE         r.`TARGET_ID` = t1.`ID`         AND r.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}         AND r.`TARGET_TYPE` = 'work_item'         AND r.`PRINCIPAL_TYPE` = 'test_plan'     ) 		) ) ]]> 
    </sql>

    <sql id="ticketRelationWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ EXISTS(SELECT * FROM `RELATION` t101   WHERE   t1.`ID` = t101.`TARGET_ID`  AND  ( t101.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  AND  t101.`TARGET_TYPE` = 'work_item'  AND  t101.`PRINCIPAL_TYPE` = 'ticket' ) ) ]]> and  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0 ) ]]> 
    </sql>

    <sql id="top" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`PID` IS NULL  AND  t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="treeGrid" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`TOP_ID` IS NULL  AND  t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="underWork" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0  AND  ( exists (select 1 from `work` t2, project t3 where t1.PROJECT_ID = t3.id and t2.PRINCIPAL_ID = t3.id  and t2.PRINCIPAL_TYPE = 'project' and t2.PORTFOLIO_ID =#{ctx.webcontext.portfolio_id})  OR  exists (select 1 from project t2 where t1.PROJECT_ID = t2.id and t2.IS_ARCHIVED = 0 and t2.IS_DELETED  = 0) and exists (select 1 from `work` a1, `work` a2 where a1.PORTFOLIO_ID  = a2.PRINCIPAL_ID   and a1.PRINCIPAL_ID = t1.project_id and a2.PORTFOLIO_ID = #{ctx.webcontext.portfolio_id}) ) ) ]]> 
    </sql>

    <sql id="view" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`DESCRIPTION`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  
    </sql>

    <sql id="workItemRelationWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t61.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t51.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, t1.`JOB_TYPE`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t41.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RELEASE_ID`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t91.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t71.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`VERSION_ID`, t81.`NAME` AS `VERSION_NAME`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `WORK_ITEM` t41 ON t1.`PID` = t41.`ID`  LEFT JOIN `ENTRY` t51 ON t1.`ENTRY_ID` = t51.`ID`  LEFT JOIN `BOARD` t61 ON t1.`BOARD_ID` = t61.`ID`  LEFT JOIN `WORK_ITEM` t71 ON t1.`TOP_ID` = t71.`ID`  LEFT JOIN `VERSION` t81 ON t1.`VERSION_ID` = t81.`ID`  LEFT JOIN `SPRINT` t91 ON t1.`SPRINT_ID` = t91.`ID`   ]]>  where  <![CDATA[ EXISTS(SELECT * FROM `RELATION` t101   WHERE   t1.`ID` = t101.`TARGET_ID`  AND  ( t101.`TARGET_TYPE` = 'work_item'  AND  t101.`PRINCIPAL_TYPE` = 'work_item'  AND  t101.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id} ) ) ]]> and  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0 ) ]]> 
    </sql>

    <select id="searchArchived"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="archived"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listArchived"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="archived"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchBug"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="bug"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listBug"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="bug"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchBugStateGroupGrid"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultType="java.util.HashMap">
        select count(1) as rep_value_1,state as rep_group_value 
        from (
            <include refid="bugStateGroupGrid"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by state
    </select>


    <select id="listBugStateGroupGrid"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultType="java.util.HashMap">
        select count(1) as rep_value_1,state as rep_group_value
        from (
            <include refid="bugStateGroupGrid"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by state
    </select>

    <select id="searchChangeParent"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="changeParent"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listChangeParent"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="changeParent"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchChooseChild"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="chooseChild"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listChooseChild"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="chooseChild"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchCommentNotifyAssignee"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="commentNotifyAssignee"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listCommentNotifyAssignee"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="commentNotifyAssignee"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchCommon"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="common"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listCommon"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="common"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchCommonBug"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="commonBug"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listCommonBug"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="commonBug"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchDefault"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDefault"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="default"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchDeleted"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="deleted"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDeleted"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="deleted"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchIdeaRelationWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="ideaRelationWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listIdeaRelationWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="ideaRelationWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMilestone"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="milestone"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMilestone"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="milestone"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyAssignee"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="myAssignee"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyAssignee"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="myAssignee"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyAssigneeCount"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultType="java.util.HashMap">
        select count(1) as count_work_item,IS_ARCHIVED as is_archived 
        from (
            <include refid="myAssignee"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by IS_ARCHIVED
    </select>


    <select id="listMyAssigneeCount"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultType="java.util.HashMap">
        select count(1) as count_work_item,IS_ARCHIVED as is_archived
        from (
            <include refid="myAssignee"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by IS_ARCHIVED
    </select>

    <select id="searchMyAttention"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="myAttention"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyAttention"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="myAttention"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyCreated"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="myCreated"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyCreated"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="myCreated"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyFilter"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="myFilter"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyFilter"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="myFilter"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyTodo"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="myTodo"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyTodo"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="myTodo"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNoBugWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="noBugWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNoBugWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="noBugWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNormal"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="normal"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNormal"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="normal"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNotExsistsBugRelation"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="notExsistsBugRelation"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNotExsistsBugRelation"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="notExsistsBugRelation"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNotExsistsRelation"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="notExsistsRelation"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNotExsistsRelation"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="notExsistsRelation"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNotbugExsistsRelation"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="notbugExsistsRelation"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNotbugExsistsRelation"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="notbugExsistsRelation"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchOverviewChart"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="overviewChart"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listOverviewChart"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="overviewChart"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchPlan"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="plan"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listPlan"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="plan"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchPropertyDistribution"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultType="java.util.HashMap">
        select RISK as risk,BACKLOG_TYPE as backlog_type,STATE as state,count(1) as count,BACKLOG_FROM as backlog_from,SPRINT_NAME as sprint_name,WORK_ITEM_TYPE_NAME as work_item_type_name,PRIORITY as priority 
        from (
            <include refid="requirement"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by RISK,BACKLOG_TYPE,STATE,BACKLOG_FROM,SPRINT_NAME,WORK_ITEM_TYPE_NAME,PRIORITY
    </select>


    <select id="listPropertyDistribution"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultType="java.util.HashMap">
        select RISK as risk,BACKLOG_TYPE as backlog_type,STATE as state,count(1) as count,BACKLOG_FROM as backlog_from,SPRINT_NAME as sprint_name,WORK_ITEM_TYPE_NAME as work_item_type_name,PRIORITY as priority
        from (
            <include refid="requirement"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by RISK,BACKLOG_TYPE,STATE,BACKLOG_FROM,SPRINT_NAME,WORK_ITEM_TYPE_NAME,PRIORITY
    </select>

    <select id="searchRecentWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="recentWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRecentWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="recentWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRequirement"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="requirement"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRequirement"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="requirement"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRunRelationBug"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="runRelationBug"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRunRelationBug"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="runRelationBug"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRunRelationWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="runRelationWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRunRelationWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="runRelationWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTestCaseRelationBug"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="testCaseRelationBug"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTestCaseRelationBug"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="testCaseRelationBug"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTestCaseRelationWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="testCaseRelationWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTestCaseRelationWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="testCaseRelationWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTestPlanRelationBug"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="testPlanRelationBug"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTestPlanRelationBug"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="testPlanRelationBug"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTicketRelationWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="ticketRelationWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTicketRelationWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="ticketRelationWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTop"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="top"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTop"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="top"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTreeGrid"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="treeGrid"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTreeGrid"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="treeGrid"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchUnderWork"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="underWork"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listUnderWork"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="underWork"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchWorkItemRelationWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="workItemRelationWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listWorkItemRelationWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="workItemRelationWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="findByBoardId" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where board_id in <foreach item="id" index="index" collection="boardIds" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findByEntryId" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where entry_id in <foreach item="id" index="index" collection="entryIds" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findByProjectId" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where project_id in <foreach item="id" index="index" collection="projectIds" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findByReleaseId" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where release_id in <foreach item="id" index="index" collection="releaseIds" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findBySprintId" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where sprint_id in <foreach item="id" index="index" collection="sprintIds" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findBySwimlaneId" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where swimlane_id in <foreach item="id" index="index" collection="swimlaneIds" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findByAssigneeId" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where assignee_id in <foreach item="id" index="index" collection="assigneeIds" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findByVersionId" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where version_id in <foreach item="id" index="index" collection="versionIds" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findByPid" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where pid in <foreach item="id" index="index" collection="pids" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findByState" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where state in <foreach item="id" index="index" collection="states" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findByTopId" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where top_id in <foreach item="id" index="index" collection="topIds" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findByWorkItemTypeId" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where work_item_type_id in <foreach item="id" index="index" collection="workItemTypeIds" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>


</mapper>