<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="cn.ibizlab.plm.core.projmgmt.mapper.WorkItemMapper">

        <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="WorkItemResultMap" type="cn.ibizlab.plm.core.projmgmt.domain.WorkItem" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="showIdentifier" column="show_identifier"/>
		<result property="isArchived" column="is_archived"/>
		<result property="isDeleted" column="is_deleted"/>
		<result property="startAt" column="start_at"/>
		<result property="endAt" column="end_at"/>
		<result property="state" column="state"/>
		<result property="isLeaf" column="is_leaf"/>
		<result property="backlogType" column="backlog_type"/>
		<result property="backlogFrom" column="backlog_from"/>
		<result property="assigneeName" column="assignee_name"/>
		<result property="reappearProbability" column="reappear_probability"/>
		<result property="assigneeId" column="assignee_id"/>
		<result property="curVersionId" column="cur_version_id"/>
		<result property="projectType" column="project_type"/>
		<result property="workItemTypeGroup" column="work_item_type_group"/>
		<result property="entryStatus" column="entry_status"/>
		<result property="entryPosition" column="entry_position"/>
		<result property="repNum" column="rep_num"/>
		<result property="solutionWay" column="solution_way"/>
		<result property="workItemTypeSequence" column="work_item_type_sequence"/>
		<result property="completedAt" column="completed_at"/>
		<result property="estimatedWorkload" column="estimated_workload"/>
		<result property="jobType" column="job_type"/>
		<result property="remainingWorkload" column="remaining_workload"/>
		<result property="actualWorkload" column="actual_workload"/>
		<result property="pWorkItemTypeId" column="p_work_item_type_id"/>
		<result property="attentionCount" column="attention_count"/>
		<result property="projectIdentifier" column="project_identifier"/>
		<result property="commentCount" column="comment_count"/>
		<result property="stateType" column="state_type"/>
		<result property="sprintStatus" column="sprint_status"/>
		<result property="releaseStatus" column="release_status"/>
		<result property="workItemSubType" column="work_item_sub_type"/>
		<result property="recentCreateDays" column="recent_create_days"/>
		<result property="relationTotalIdea" column="relation_total_idea"/>
		<result property="relationTotalTestCase" column="relation_total_test_case"/>
		<result property="relationTotalTicket" column="relation_total_ticket"/>
		<result property="relationTotalWorkItem" column="relation_total_work_item"/>
		<result property="workItemOriginState" column="work_item_origin_state"/>
		<result property="isOvertime" column="is_overtime"/>
		<result property="multiplePeople" column="multiple_people"/>
		<result property="actualStartAt" column="actual_start_at"/>
		<result property="actualEndAt" column="actual_end_at"/>
		<result property="overdueTime" column="overdue_time"/>
		<result property="projectIsDeleted" column="project_is_deleted"/>
		<result property="projectIsArchived" column="project_is_archived"/>
		<result property="createMan" column="create_man"/>
		<result property="createTime" column="create_time"/>
		<result property="updateMan" column="update_man"/>
		<result property="updateTime" column="update_time"/>
		<result property="projectId" column="project_id"/>
		<result property="workItemTypeId" column="work_item_type_id"/>
		<result property="projectName" column="project_name"/>
		<result property="workItemTypeName" column="work_item_type_name"/>
		<result property="pid" column="pid"/>
		<result property="sprintId" column="sprint_id"/>
		<result property="boardId" column="board_id"/>
		<result property="entryId" column="entry_id"/>
		<result property="swimlaneId" column="swimlane_id"/>
		<result property="entryName" column="entry_name"/>
		<result property="boardName" column="board_name"/>
		<result property="topId" column="top_id"/>
		<result property="topTitle" column="top_title"/>
		<result property="sprintName" column="sprint_name"/>
		<result property="releaseId" column="release_id"/>
		<result property="releaseName" column="release_name"/>
        <association property="board" javaType="cn.ibizlab.plm.core.projmgmt.domain.Board" column="board_id" select="cn.ibizlab.plm.core.projmgmt.mapper.BoardMapper.selectById" fetchType="lazy"></association>
        <association property="entry" javaType="cn.ibizlab.plm.core.projmgmt.domain.Entry" column="entry_id" select="cn.ibizlab.plm.core.projmgmt.mapper.EntryMapper.selectById" fetchType="lazy"></association>
        <association property="project" javaType="cn.ibizlab.plm.core.projmgmt.domain.Project" column="project_id" select="cn.ibizlab.plm.core.projmgmt.mapper.ProjectMapper.selectById" fetchType="lazy"></association>
        <association property="release" javaType="cn.ibizlab.plm.core.projmgmt.domain.Release" column="release_id" select="cn.ibizlab.plm.core.projmgmt.mapper.ReleaseMapper.selectById" fetchType="lazy"></association>
        <association property="sprint" javaType="cn.ibizlab.plm.core.projmgmt.domain.Sprint" column="sprint_id" select="cn.ibizlab.plm.core.projmgmt.mapper.SprintMapper.selectById" fetchType="lazy"></association>
        <association property="swimlane" javaType="cn.ibizlab.plm.core.projmgmt.domain.Swimlane" column="swimlane_id" select="cn.ibizlab.plm.core.projmgmt.mapper.SwimlaneMapper.selectById" fetchType="lazy"></association>
        <association property="workItem" javaType="cn.ibizlab.plm.core.projmgmt.domain.WorkItem" column="pid" select="cn.ibizlab.plm.core.projmgmt.mapper.WorkItemMapper.selectById" fetchType="lazy"></association>
        <association property="workItemState" javaType="cn.ibizlab.plm.core.projmgmt.domain.WorkItemState" column="state" select="cn.ibizlab.plm.core.projmgmt.mapper.WorkItemStateMapper.selectById" fetchType="lazy"></association>
        <association property="workItem2" javaType="cn.ibizlab.plm.core.projmgmt.domain.WorkItem" column="top_id" select="cn.ibizlab.plm.core.projmgmt.mapper.WorkItemMapper.selectById" fetchType="lazy"></association>
        <association property="workItemType" javaType="cn.ibizlab.plm.core.projmgmt.domain.WorkItemType" column="work_item_type_id" select="cn.ibizlab.plm.core.projmgmt.mapper.WorkItemTypeMapper.selectById" fetchType="lazy"></association>
    </resultMap>

    <select id="selectById"  resultMap="WorkItemResultMap">
        <include refid="view" /> 
         where 
         t1.id=#{ id }
    </select>

    <select id="selectEntity" parameterType="cn.ibizlab.plm.core.projmgmt.domain.WorkItem" resultMap="WorkItemResultMap">
        <include refid="view" /> 
         where 
         (t1.id = #{ id })
    </select>

    <select id="selectEntities" parameterType="java.util.List" resultMap="WorkItemResultMap">
        <include refid="view" /> 
         where 
         (t1.id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </select>

    <delete id="deleteEntities" parameterType="java.util.List">
    delete from WORK_ITEM
    where (id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </delete>

    <sql id="default" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  
    </sql>

    <sql id="view" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, (SELECT COUNT( att.ID ) AS attention_count FROM work_item w LEFT JOIN `attention` att ON w.ID = att.OWNER_ID WHERE w.ID = t1.`ID`) AS `ATTENTION_COUNT`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, (SELECT COUNT( com.ID ) AS comment_count FROM work_item p LEFT JOIN `comment` com ON p.ID = com.PRINCIPAL_ID WHERE p.ID = t1.`ID`) AS `COMMENT_COUNT`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`DESCRIPTION`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, (SELECT COUNT(1) FROM RELATION WHERE PRINCIPAL_ID = t1.`ID` AND TARGET_TYPE ='IDEA') AS `RELATION_TOTAL_IDEA`, (SELECT COUNT(1) FROM RELATION WHERE PRINCIPAL_ID = t1.`ID` AND TARGET_TYPE ='TEST_CASE') AS `RELATION_TOTAL_TEST_CASE`, (SELECT COUNT(1) FROM RELATION WHERE PRINCIPAL_ID = t1.`ID` AND TARGET_TYPE ='TICKET') AS `RELATION_TOTAL_TICKET`, (SELECT COUNT(1) FROM RELATION WHERE PRINCIPAL_ID = t1.`ID` AND TARGET_TYPE ='WORK_ITEM') AS `RELATION_TOTAL_WORK_ITEM`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  
    </sql>

    <sql id="advancedSearch" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  exists(select 1 from project t2, project_member t3 where t1.project_id = t2.id and t2.id = t3.project_id and t3.user_id = #{ctx.sessioncontext.srfpersonid}) ) ]]> 
    </sql>

    <sql id="archived" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_ARCHIVED` = 1  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="baselineChooseWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CUR_VERSION_ID`, t1.`ID`, t1.`IDENTIFIER`, t1.`PRIORITY`, t1.`PROJECT_ID`, t1.`STATE`, t1.`TITLE`, t1.`WORK_ITEM_TYPE_ID`, t11.`NAME` AS `WORK_ITEM_TYPE_NAME` FROM `WORK_ITEM` t1  LEFT JOIN `WORK_ITEM_TYPE` t11 ON t1.`WORK_ITEM_TYPE_ID` = t11.`ID`   ]]>  where NOT(EXISTS(SELECT * FROM `RELATION` t21   WHERE   t1.`ID` = t21.`TARGET_ID`  AND  ( t21.`PRINCIPAL_ID` = #{ctx.webcontext.baseline}  AND  t21.`TARGET_TYPE` = 'work_item'  AND  t21.`PRINCIPAL_TYPE` = 'baseline' ) )) and ( ( <choose><when test="ctx.webcontext.query_recent !=null ">  exists(select 1 from recent t2 where t1.ID = t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> )  AND  ( <choose><when test="ctx.webcontext.query_attention !=null ">  exists(select 1 from attention t2 where t1.ID = t2.owner_id and t2.user_id =#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> )  AND  t1.`IS_DELETED` = 0 ) 
    </sql>

    <sql id="biDetail" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t51.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t41.`NAME` AS `ENTRY_NAME`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`JOB_TYPE`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t1.`REAPPEAR_PROBABILITY`, (SELECT COUNT(1) FROM RELATION WHERE PRINCIPAL_ID = t1.`ID` AND TARGET_TYPE ='IDEA') AS `RELATION_TOTAL_IDEA`, (SELECT COUNT(1) FROM RELATION WHERE PRINCIPAL_ID = t1.`ID` AND TARGET_TYPE ='TEST_CASE') AS `RELATION_TOTAL_TEST_CASE`, (SELECT COUNT(1) FROM RELATION WHERE PRINCIPAL_ID = t1.`ID` AND TARGET_TYPE ='TICKET') AS `RELATION_TOTAL_TICKET`, (SELECT COUNT(1) FROM RELATION WHERE PRINCIPAL_ID = t1.`ID` AND TARGET_TYPE ='WORK_ITEM') AS `RELATION_TOTAL_WORK_ITEM`, t1.`RELEASE_ID`, t71.`NAME` AS `RELEASE_NAME`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t61.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`TAGS`, t1.`TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `ENTRY` t41 ON t1.`ENTRY_ID` = t41.`ID`  LEFT JOIN `BOARD` t51 ON t1.`BOARD_ID` = t51.`ID`  LEFT JOIN `SPRINT` t61 ON t1.`SPRINT_ID` = t61.`ID`  LEFT JOIN `PROJECT_RELEASE` t71 ON t1.`RELEASE_ID` = t71.`ID`   ]]>  
    </sql>

    <sql id="biSearch" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t51.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ENTRY_ID`, t41.`NAME` AS `ENTRY_NAME`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`JOB_TYPE`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t1.`REAPPEAR_PROBABILITY`, (SELECT COUNT(1) FROM RELATION WHERE PRINCIPAL_ID = t1.`ID` AND TARGET_TYPE ='IDEA') AS `RELATION_TOTAL_IDEA`, (SELECT COUNT(1) FROM RELATION WHERE PRINCIPAL_ID = t1.`ID` AND TARGET_TYPE ='TEST_CASE') AS `RELATION_TOTAL_TEST_CASE`, (SELECT COUNT(1) FROM RELATION WHERE PRINCIPAL_ID = t1.`ID` AND TARGET_TYPE ='TICKET') AS `RELATION_TOTAL_TICKET`, (SELECT COUNT(1) FROM RELATION WHERE PRINCIPAL_ID = t1.`ID` AND TARGET_TYPE ='WORK_ITEM') AS `RELATION_TOTAL_WORK_ITEM`, t1.`RELEASE_ID`, t71.`NAME` AS `RELEASE_NAME`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t61.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t31.`TYPE` AS `STATE_TYPE`, t1.`TAGS`, t1.`TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID`  LEFT JOIN `ENTRY` t41 ON t1.`ENTRY_ID` = t41.`ID`  LEFT JOIN `BOARD` t51 ON t1.`BOARD_ID` = t51.`ID`  LEFT JOIN `SPRINT` t61 ON t1.`SPRINT_ID` = t61.`ID`  LEFT JOIN `PROJECT_RELEASE` t71 ON t1.`RELEASE_ID` = t71.`ID`   ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="bug" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0  AND  t21.`GROUP` = 'bug' ) ]]> 
    </sql>

    <sql id="bugWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t21.`GROUP` = 'bug' ) ]]> 
    </sql>

    <sql id="changeParent" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where ( ( <choose><when test="ctx.webcontext.query_recent !=null ">  exists(select 1 from recent t2 where t1.ID = t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> ) 

  AND  t1.`IS_DELETED` = '0'  AND  t1.`IS_ARCHIVED` = '0'  AND  ( <choose><when test="ctx.webcontext.query_attention !=null ">  exists(select 1 from attention t2 where t1.ID = t2.owner_id and t2.user_id =#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> ) 
 ) 
    </sql>

    <sql id="child" databaseId="mysql">
         <![CDATA[ SELECT t1.`ID`, t1.`PID`, t1.`PROJECT_ID`, t1.`TOP_ID` FROM `WORK_ITEM` t1   ]]>  
    </sql>

    <sql id="choose" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where ( t1.`IS_DELETED` = '0'  AND  t1.`PROJECT_ID` = #{ctx.webcontext.project_id}  AND  ( <choose><when test="ctx.webcontext.query_recent !=null ">  exists(select 1 from recent t2 where t1.ID = t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> )  AND  ( <choose><when test="ctx.webcontext.query_attention !=null ">  exists(select 1 from attention t2 where t1.ID = t2.owner_id and t2.user_id =#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> ) ) 
    </sql>

    <sql id="chooseChild" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where ( t1.`IS_DELETED` = '0'  AND  t1.`ID` &lt;&gt; #{ctx.webcontext.principal_id}  AND  t1.`PROJECT_ID` = #{ctx.webcontext.project_id}  AND  ( <choose><when test="ctx.webcontext.query_recent !=null ">  exists(select 1 from recent t2 where t1.ID = t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> )  AND  ( <choose><when test="ctx.webcontext.query_attention !=null ">  exists(select 1 from attention t2 where t1.ID = t2.owner_id and t2.user_id =#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> )  AND  ( t1.`PID` &lt;&gt; #{ctx.webcontext.principal_id}  OR  t1.`PID` IS NULL 'null' ) ) 
    </sql>

    <sql id="chooseDependency" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where ( t1.`IS_DELETED` = '0'  AND  t1.`ID` &lt;&gt; #{ctx.webcontext.principal_id}  AND  ( <choose><when test="ctx.webcontext.query_recent !=null ">  exists(select 1 from recent t2 where t1.ID = t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> )  AND  ( <choose><when test="ctx.webcontext.query_attention !=null ">  exists(select 1 from attention t2 where t1.ID = t2.owner_id and t2.user_id =#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> )  AND  not exists(select 1 from `relation` t2 where (t1.id = t2.principal_id or t1.id = t2.target_id) and t2.principal_type = 'dependency') ) 
    </sql>

    <sql id="chooseParentWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t21.`SUB_TYPE` LIKE CONCAT('%',#{ctx.webcontext.work_item_type_id},'%') ) ]]> and  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0 ) ]]> 
    </sql>

    <sql id="commentNotifyAssignee" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`ID` FROM `WORK_ITEM` t1   ]]>  where  <![CDATA[ ( exists (select 1 from comment t2 where t1.ID = t2.PRINCIPAL_ID and t2.ID = #{ctx.webcontext.id}  and t2.create_man != t1.assignee_id) ) ]]> 
    </sql>

    <sql id="common" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, (CASE WHEN t21.`TYPE` <> 'completed' and t21.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`NAME` AS `PROJECT_NAME`, t31.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t41.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t21.`TYPE` AS `STATE_TYPE`, t1.`TITLE`, t1.`TOP_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`WORK_ITEM_TYPE_ID` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_STATE` t21 ON t1.`STATE` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `SPRINT` t41 ON t1.`SPRINT_ID` = t41.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="commonBug" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, (CASE WHEN t21.`TYPE` <> 'completed' and t21.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`NAME` AS `PROJECT_NAME`, t31.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t41.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t21.`TYPE` AS `STATE_TYPE`, t1.`TITLE`, t1.`TOP_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`WORK_ITEM_TYPE_ID` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_STATE` t21 ON t1.`STATE` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `SPRINT` t41 ON t1.`SPRINT_ID` = t41.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t51 ON t1.`WORK_ITEM_TYPE_ID` = t51.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t51.`GROUP` = 'bug' ) ]]> 
    </sql>

    <sql id="deleted" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 1 ) ]]> 
    </sql>

    <sql id="kanbanWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`BOARD_ID` IS NOT NULL  AND  t1.`ENTRY_ID` IS NOT NULL ) ]]> 
    </sql>

    <sql id="milestone" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0  AND  ( t1.`WORK_ITEM_TYPE_ID` = 'waterfall_milestone'  OR  t1.`WORK_ITEM_TYPE_ID` = 'hybrid_milestone' ) ) ]]> 
    </sql>

    <sql id="moveWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`PROJECT_ID` = #{ctx.datacontext.project_id} ) ]]> 
    </sql>

    <sql id="myAssignee" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( ( t1.`ASSIGNEE_ID` = #{ctx.sessioncontext.srfpersonid}  OR  exists(select 1 from executor t2 where t1.id = t2.owner_id and t2.owner_type = 'WORK_ITEM' and t2.owner_subtype = 'WORK_ITEM' and t2.user_id = #{ctx.sessioncontext.srfpersonid}) )  AND  t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="myAttention" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0  AND  exists(select 1 from `attention` t2 where t2.owner_id = t1.id and t2.`type` in ('20', '30', '40') and t2.user_id = #{ctx.sessioncontext.srfpersonid}) ) ]]> 
    </sql>

    <sql id="myCreated" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid}  AND  t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="myFilter" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0 ) ]]> and  <![CDATA[ ( t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="mySummaryBug" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0  AND  t11.`IS_ARCHIVED` = 0 ) ]]> and  <![CDATA[ ( ( t1.`ASSIGNEE_ID` = #{ctx.sessioncontext.srfpersonid}  OR  exists(select 1 from executor t2 where t1.id = t2.owner_id and t2.owner_type = 'WORK_ITEM' and t2.owner_subtype = 'WORK_ITEM' and t2.user_id = #{ctx.sessioncontext.srfpersonid}) )  AND  t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0  AND  t21.`GROUP` = 'bug'  AND  t41.`TYPE` = 'in_progress' ) ]]> 
    </sql>

    <sql id="mySummaryOther" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0  AND  t11.`IS_ARCHIVED` = 0 ) ]]> and  <![CDATA[ ( ( t1.`ASSIGNEE_ID` = #{ctx.sessioncontext.srfpersonid}  OR  exists(select 1 from executor t2 where t1.id = t2.owner_id and t2.owner_type = 'WORK_ITEM' and t2.owner_subtype = 'WORK_ITEM' and t2.user_id = #{ctx.sessioncontext.srfpersonid}) )  AND  t21.`GROUP` <> 'bug'  AND  t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0  AND  t21.`GROUP` <> 'task'  AND  t41.`TYPE` = 'in_progress' ) ]]> 
    </sql>

    <sql id="mySummaryTask" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t11.`IS_DELETED` = 0  AND  t11.`IS_ARCHIVED` = 0 ) ]]> and  <![CDATA[ ( ( t1.`ASSIGNEE_ID` = #{ctx.sessioncontext.srfpersonid}  OR  exists(select 1 from executor t2 where t1.id = t2.owner_id and t2.owner_type = 'WORK_ITEM' and t2.owner_subtype = 'WORK_ITEM' and t2.user_id = #{ctx.sessioncontext.srfpersonid}) )  AND  t21.`GROUP` = 'task'  AND  t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0  AND  t41.`TYPE` = 'in_progress' ) ]]> 
    </sql>

    <sql id="myTodo" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( ( t1.`ASSIGNEE_ID` = #{ctx.sessioncontext.srfpersonid}  OR  exists(select 1 from executor t2 where t1.id = t2.owner_id and t2.owner_type = 'WORK_ITEM' and t2.owner_subtype = 'WORK_ITEM' and t2.user_id = #{ctx.sessioncontext.srfpersonid}) )  AND  t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0  AND  t41.`TYPE` <> 'completed' ) ]]> 
    </sql>

    <sql id="noBugWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where NOT(EXISTS(SELECT * FROM `RELATION` t101   WHERE   t1.`ID` = t101.`TARGET_ID`  AND  ( t101.`PRINCIPAL_TYPE` = 'test_case'  AND  t101.`TARGET_TYPE` = 'work_item'  AND  t101.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id} ) )) and ( ( <choose><when test="ctx.webcontext.query_recent !=null ">  exists(select 1 from recent t2 where t1.ID = t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> )  AND  t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0  AND  t21.`GROUP` &lt;&gt; 'bug' ) 
    </sql>

    <sql id="noCompleted" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, (CASE WHEN t21.`TYPE` <> 'completed' and t21.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`NAME` AS `PROJECT_NAME`, t31.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t41.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t21.`TYPE` AS `STATE_TYPE`, t1.`TITLE`, t1.`TOP_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`WORK_ITEM_TYPE_ID` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_STATE` t21 ON t1.`STATE` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `SPRINT` t41 ON t1.`SPRINT_ID` = t41.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0  AND  t21.`TYPE` <> 'completed' ) ]]> 
    </sql>

    <sql id="normal" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0 ) ]]> 
    </sql>

    <sql id="notExsistsBugRelation" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where NOT(EXISTS(SELECT * FROM `RELATION` t101   WHERE   t1.`ID` = t101.`TARGET_ID`  AND  ( t101.`PRINCIPAL_TYPE` = #{ctx.webcontext.principal_type}  AND  t101.`TARGET_TYPE` = #{ctx.webcontext.target_type}  AND  t101.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id} ) )) and ( ( <choose><when test="ctx.webcontext.query_recent !=null ">  exists(select 1 from recent t2 where t1.ID = t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> )  AND  t21.`GROUP` = 'bug'  AND  t1.`IS_DELETED` = 0 ) 
    </sql>

    <sql id="notExsistsRelation" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where NOT(EXISTS(SELECT * FROM `RELATION` t101   WHERE   t1.`ID` = t101.`TARGET_ID`  AND  ( <choose><when test="ctx.webcontext.principal_type !=null ">  t101.`PRINCIPAL_TYPE` = #{ctx.webcontext.principal_type}  </when><otherwise>1=1</otherwise></choose>  AND  <choose><when test="ctx.webcontext.target_type !=null ">  t101.`TARGET_TYPE` = #{ctx.webcontext.target_type}  </when><otherwise>1=1</otherwise></choose>  AND  <choose><when test="ctx.webcontext.principal_id !=null ">  t101.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  </when><otherwise>1=1</otherwise></choose> ) )) and ( ( <choose><when test="ctx.webcontext.query_recent !=null ">  exists(select 1 from recent t2 where t1.ID = t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> )  AND  t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0  AND  <choose><when test="ctx.webcontext.principal_id !=null ">  t1.`ID` &lt;&gt; #{ctx.webcontext.principal_id}  </when><otherwise>1=1</otherwise></choose> ) 
    </sql>

    <sql id="notbugExsistsRelation" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where NOT(EXISTS(SELECT * FROM `RELATION` t101   WHERE   t1.`ID` = t101.`TARGET_ID`  AND  ( <choose><when test="ctx.webcontext.principal_type !=null ">  t101.`PRINCIPAL_TYPE` = #{ctx.webcontext.principal_type}  </when><otherwise>1=1</otherwise></choose>  AND  <choose><when test="ctx.webcontext.target_type !=null ">  t101.`TARGET_TYPE` = #{ctx.webcontext.target_type}  </when><otherwise>1=1</otherwise></choose>  AND  <choose><when test="ctx.webcontext.principal_id !=null ">  t101.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}  </when><otherwise>1=1</otherwise></choose> ) )) and ( ( <choose><when test="ctx.webcontext.query_recent !=null ">  exists(select 1 from recent t2 where t1.ID = t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> )  AND  t1.`WORK_ITEM_TYPE_ID` &lt;&gt; 'kanban_bug'  AND  t1.`WORK_ITEM_TYPE_ID` &lt;&gt; 'scrum_bug'  AND  t1.`WORK_ITEM_TYPE_ID` &lt;&gt; 'waterfall_bug'  AND  t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0  AND  <choose><when test="ctx.webcontext.principal_id !=null ">  t1.`ID` &lt;&gt; #{ctx.webcontext.principal_id}  </when><otherwise>1=1</otherwise></choose> ) 
    </sql>

    <sql id="notifyAssignee" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`ID` FROM `WORK_ITEM` t1   ]]>  where  <![CDATA[ ( t1.`ID` = #{ctx.webcontext.id}  AND  t1.`ASSIGNEE_ID` <> #{ctx.sessioncontext.srfpersonid} ) ]]> 
    </sql>

    <sql id="overdueWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, (CASE WHEN t21.`TYPE` <> 'completed' and t21.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`NAME` AS `PROJECT_NAME`, t31.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t41.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t21.`TYPE` AS `STATE_TYPE`, t1.`TITLE`, t1.`TOP_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`WORK_ITEM_TYPE_ID` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_STATE` t21 ON t1.`STATE` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `SPRINT` t41 ON t1.`SPRINT_ID` = t41.`ID`   ]]>  where  <![CDATA[ ( IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) IS NOT NULL  AND  IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) > '0' ) ]]> 
    </sql>

    <sql id="overviewChart" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="planSnapshot" databaseId="mysql">
         <![CDATA[ SELECT t1.`CUR_VERSION_ID`, t1.`ID` FROM `WORK_ITEM` t1   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="projectResource" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`END_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`START_AT`, t1.`STATE`, t1.`TITLE`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  ( t1.START_AT BETWEEN #{ctx.webcontext.n_date_scope_gtandeq} AND #{ctx.webcontext.n_date_scope_ltandeq}  OR  t1.END_AT BETWEEN #{ctx.webcontext.n_date_scope_gtandeq} AND #{ctx.webcontext.n_date_scope_ltandeq}  OR  (t1.start_at <= #{ctx.webcontext.n_date_scope_gtandeq} and t1.end_at >= #{ctx.webcontext.n_date_scope_ltandeq}) ) ) ]]> 
    </sql>

    <sql id="public" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t11.`VISIBILITY` = 'public' ) ]]> 
    </sql>

    <sql id="reader" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ EXISTS(SELECT * FROM `PROJECT_MEMBER` t101   WHERE   t11.`ID` = t101.`PROJECT_ID`  AND  ( t101.`USER_ID` = #{ctx.sessioncontext.srfpersonid} ) ) ]]> 
    </sql>

    <sql id="recentWorkItem" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0  AND  exists(select 1 from recent t2 where t1.id=t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )  AND  NOT EXISTS(SELECT 1 FROM `RELATION` t3 WHERE t1.`ID` = t3.`TARGET_ID` AND  t3.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}   ) ) ]]> 
    </sql>

    <sql id="release" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, (CASE WHEN t21.`TYPE` <> 'completed' and t21.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`NAME` AS `PROJECT_NAME`, t31.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t41.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t21.`TYPE` AS `STATE_TYPE`, t1.`TITLE`, t1.`TOP_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`WORK_ITEM_TYPE_ID` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_STATE` t21 ON t1.`STATE` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `SPRINT` t41 ON t1.`SPRINT_ID` = t41.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="releasePlan" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where ( ( <choose><when test="ctx.webcontext.query_recent !=null ">  exists(select 1 from recent t2 where t1.ID = t2.owner_id and t2.create_man=#{ctx.sessioncontext.srfpersonid} )</when><otherwise>1=1</otherwise></choose> )  AND  t1.`IS_DELETED` = '0'  AND  t1.`IS_ARCHIVED` = '0'  AND  ( t1.`RELEASE_ID` &lt;&gt; #{ctx.webcontext.release_id}  OR  t1.`RELEASE_ID` IS NULL 'null' ) ) 
    </sql>

    <sql id="releaseWorkItemChart" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`RELEASE_ID` = #{ctx.webcontext.release} ) ]]> 
    </sql>

    <sql id="requirement" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, (CASE WHEN t21.`TYPE` <> 'completed' and t21.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`NAME` AS `PROJECT_NAME`, t31.`TITLE` AS `PTITLE`, t1.`REAPPEAR_PROBABILITY`, t1.`RISK`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPRINT_ID`, t41.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATE`, t21.`TYPE` AS `STATE_TYPE`, t1.`TITLE`, t1.`TOP_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t1.`WORK_ITEM_TYPE_ID` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_STATE` t21 ON t1.`STATE` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `SPRINT` t41 ON t1.`SPRINT_ID` = t41.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t51 ON t1.`WORK_ITEM_TYPE_ID` = t51.`ID`   ]]>  where  <![CDATA[ ( t51.`GROUP` = 'requirement'  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="resource" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  ( t1.START_AT BETWEEN #{ctx.webcontext.n_date_scope_gtandeq} AND #{ctx.webcontext.n_date_scope_ltandeq}  OR  t1.END_AT BETWEEN #{ctx.webcontext.n_date_scope_gtandeq} AND #{ctx.webcontext.n_date_scope_ltandeq}  OR  (t1.start_at <= #{ctx.webcontext.n_date_scope_gtandeq} and t1.end_at >= #{ctx.webcontext.n_date_scope_ltandeq}) ) ) ]]> 
    </sql>

    <sql id="scrumStoryNormal" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`WORK_ITEM_TYPE_ID` LIKE '%story%' ) ]]> 
    </sql>

    <sql id="sevenDays" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( ( DATEDIFF(sysdate(),t1.`CREATE_TIME`) < 7  OR  DATEDIFF(sysdate(),t1.`COMPLETED_AT`) < 7 )  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="sprintCompleted" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`COMPLETED_AT` IS NOT NULL  AND  t41.`TYPE` = 'completed' ) ]]> 
    </sql>

    <sql id="sprintWorkItemChart" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`SPRINT_ID` = #{ctx.webcontext.sprint} ) ]]> 
    </sql>

    <sql id="testPlanRelationBug" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t21.`GROUP` = 'bug'  AND  (             EXISTS (                     SELECT 1                     FROM `relation` rel                              INNER JOIN `RUN` ru ON ru.`ID` = rel.`PRINCIPAL_ID`                     WHERE                             rel.`TARGET_ID` = t1.`ID`                       AND ru.`PLAN_ID` = #{ctx.webcontext.principal_id}                       AND rel.`TARGET_TYPE` = 'work_item'                       AND rel.`PRINCIPAL_TYPE` = 'run'                 )             OR EXISTS (                     SELECT 1                     FROM `relation` r                     WHERE                             r.`TARGET_ID` = t1.`ID`                       AND r.`PRINCIPAL_ID` = #{ctx.webcontext.principal_id}                       AND r.`TARGET_TYPE` = 'work_item'                       AND r.`PRINCIPAL_TYPE` = 'test_plan'                 )         ) ) ]]> 
    </sql>

    <sql id="top" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`PID` IS NULL  AND  t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="unDeletd" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="underWork" databaseId="mysql">
         <![CDATA[ SELECT t1.`ACTUAL_END_AT`, t1.`ACTUAL_START_AT`, t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`BACKLOG_FROM`, t1.`BACKLOG_TYPE`, t1.`BOARD_ID`, t81.`NAME` AS `BOARD_NAME`, t1.`COMPLETED_AT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`END_AT`, t1.`ENTRY_ID`, t71.`NAME` AS `ENTRY_NAME`, t1.`ENTRY_POSITION`, t1.`ENTRY_STATUS`, t1.`FINISHER`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, t1.`IS_LEAF`, (CASE WHEN t41.`TYPE` <> 'completed' and t41.`TYPE` <> 'closed' and t1.`END_AT` < CURDATE() THEN 1 else 0 END) AS `IS_OVERTIME`, t1.`JOB_TYPE`, t1.`MULTIPLE_PEOPLE`, IFNULL((TIMESTAMPDIFF(DAY,t1.`END_AT`,IFNULL(t1.`ACTUAL_END_AT`,CURDATE()))),NULL) AS `OVERDUE_TIME`, t1.`PID`, t1.`PRIORITY`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`IS_ARCHIVED` AS `PROJECT_IS_ARCHIVED`, t11.`IS_DELETED` AS `PROJECT_IS_DELETED`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t31.`TITLE` AS `PTITLE`, t31.`WORK_ITEM_TYPE_ID` AS `P_WORK_ITEM_TYPE_ID`, t1.`REAPPEAR_PROBABILITY`, DATEDIFF(CURDATE(), t1.`CREATE_TIME`) AS `RECENT_CREATE_DAYS`, t1.`RELEASE_ID`, t61.`NAME` AS `RELEASE_NAME`, t61.`STATUS` AS `RELEASE_STATUS`, 1 AS `REP_NUM`, t1.`RISK`, t1.`SEQUENCE`, t1.`SEVERITY`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SOLUTION_WAY`, t1.`SPRINT_ID`, t51.`NAME` AS `SPRINT_NAME`, t51.`STATUS` AS `SPRINT_STATUS`, t1.`START_AT`, t1.`STATE`, t41.`TYPE` AS `STATE_TYPE`, t1.`SWIMLANE_ID`, t1.`TAGS`, t1.`TITLE`, t1.`TOP_ID`, t91.`TITLE` AS `TOP_TITLE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME`, t21.`ORGIN_STATE` AS `WORK_ITEM_ORIGIN_STATE`, t21.`SUB_TYPE` AS `WORK_ITEM_SUB_TYPE`, t21.`GROUP` AS `WORK_ITEM_TYPE_GROUP`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME`, t21.`SEQUENCE` AS `WORK_ITEM_TYPE_SEQUENCE` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`  LEFT JOIN `WORK_ITEM` t31 ON t1.`PID` = t31.`ID`  LEFT JOIN `WORK_ITEM_STATE` t41 ON t1.`STATE` = t41.`ID`  LEFT JOIN `SPRINT` t51 ON t1.`SPRINT_ID` = t51.`ID`  LEFT JOIN `PROJECT_RELEASE` t61 ON t1.`RELEASE_ID` = t61.`ID`  LEFT JOIN `ENTRY` t71 ON t1.`ENTRY_ID` = t71.`ID`  LEFT JOIN `BOARD` t81 ON t1.`BOARD_ID` = t81.`ID`  LEFT JOIN `WORK_ITEM` t91 ON t1.`TOP_ID` = t91.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0  AND  ( exists (select 1 from `work` t2, project t3 where t1.PROJECT_ID = t3.id and t2.PRINCIPAL_ID = t3.id  and t2.PRINCIPAL_TYPE = 'project' and t2.PORTFOLIO_ID =#{ctx.webcontext.portfolio_id})  OR  exists (select 1 from project t2 where t1.PROJECT_ID = t2.id and t2.IS_ARCHIVED = 0 and t2.IS_DELETED  = 0) and exists (select 1 from `work` a1, `work` a2 where a1.PORTFOLIO_ID  = a2.PRINCIPAL_ID   and a1.PRINCIPAL_ID = t1.project_id and a2.PORTFOLIO_ID = #{ctx.webcontext.portfolio_id}) ) ) ]]> 
    </sql>

    <sql id="underWorkResource" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`END_AT`, t1.`ID`, t1.`IDENTIFIER`, t1.`PROJECT_ID`, t11.`IDENTIFIER` AS `PROJECT_IDENTIFIER`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`START_AT`, t1.`STATE`, t1.`TITLE`, t1.`WORK_ITEM_TYPE_ID`, t21.`NAME` AS `WORK_ITEM_TYPE_NAME` FROM `WORK_ITEM` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  ( exists (select 1 from `work` t2, project t3 where t1.PROJECT_ID = t3.id and t2.PRINCIPAL_ID = t3.id  and t2.PRINCIPAL_TYPE = 'project' and t2.PORTFOLIO_ID =#{ctx.webcontext.portfolio_id})  OR  exists (select 1 from project t2 where t1.PROJECT_ID = t2.id and t2.IS_ARCHIVED = 0 and t2.IS_DELETED  = 0) and exists (select 1 from `work` a1, `work` a2 where a1.PORTFOLIO_ID  = a2.PRINCIPAL_ID   and a1.PRINCIPAL_ID = t1.project_id and a2.PORTFOLIO_ID = #{ctx.webcontext.portfolio_id}) )  AND  ( t1.START_AT BETWEEN #{ctx.webcontext.n_date_scope_gtandeq} AND #{ctx.webcontext.n_date_scope_ltandeq}  OR  t1.END_AT BETWEEN #{ctx.webcontext.n_date_scope_gtandeq} AND #{ctx.webcontext.n_date_scope_ltandeq}  OR  (t1.start_at <= #{ctx.webcontext.n_date_scope_gtandeq} and t1.end_at >= #{ctx.webcontext.n_date_scope_ltandeq}) ) ) ]]> 
    </sql>

    <sql id="workItemType" databaseId="mysql">
         <![CDATA[ SELECT t1.`ID`, t1.`WORK_ITEM_TYPE_ID` FROM `WORK_ITEM` t1   ]]>  
    </sql>

    <select id="searchDefault"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDefault"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="default"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchAdvancedSearch"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="advancedSearch"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listAdvancedSearch"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="advancedSearch"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchArchived"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="archived"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listArchived"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="archived"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchBacklogPropertyDistribution"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultType="java.util.HashMap">
        select BACKLOG_FROM as backlog_from,IF(TRIM(backlog_type) is null, '未分配需求类型', backlog_type) as backlog_type,count(1) as count,IF(TRIM(priority) is null, '未设置优先级', priority) as priority,IF(TRIM(risk) is null, '未设置风险', risk) as risk,IF(TRIM(sprint_id) is null, '未分组', sprint_id) as sprint_id,STATE as state,WORK_ITEM_TYPE_NAME as work_item_type_name 
        from (
            <include refid="requirement"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by BACKLOG_FROM,IF(TRIM(backlog_type) is null, '未分配需求类型', backlog_type),IF(TRIM(priority) is null, '未设置优先级', priority),IF(TRIM(risk) is null, '未设置风险', risk),IF(TRIM(sprint_id) is null, '未分组', sprint_id),STATE,WORK_ITEM_TYPE_NAME
    </select>


    <select id="listBacklogPropertyDistribution"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultType="java.util.HashMap">
        select BACKLOG_FROM as backlog_from,IF(TRIM(backlog_type) is null, '未分配需求类型', backlog_type) as backlog_type,count(1) as count,IF(TRIM(priority) is null, '未设置优先级', priority) as priority,IF(TRIM(risk) is null, '未设置风险', risk) as risk,IF(TRIM(sprint_id) is null, '未分组', sprint_id) as sprint_id,STATE as state,WORK_ITEM_TYPE_NAME as work_item_type_name
        from (
            <include refid="requirement"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by BACKLOG_FROM,IF(TRIM(backlog_type) is null, '未分配需求类型', backlog_type),IF(TRIM(priority) is null, '未设置优先级', priority),IF(TRIM(risk) is null, '未设置风险', risk),IF(TRIM(sprint_id) is null, '未分组', sprint_id),STATE,WORK_ITEM_TYPE_NAME
    </select>

    <select id="searchBacklogStateDistribution"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultType="java.util.HashMap">
        select count(1) as count,state as state 
        from (
            <include refid="requirement"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by state
    </select>


    <select id="listBacklogStateDistribution"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultType="java.util.HashMap">
        select count(1) as count,state as state
        from (
            <include refid="requirement"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by state
    </select>

    <select id="searchBaselineChooseWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="baselineChooseWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listBaselineChooseWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="baselineChooseWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchBiDetail"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="biDetail"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listBiDetail"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="biDetail"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchBiSearch"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="biSearch"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listBiSearch"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="biSearch"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchBug"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="bug"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listBug"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="bug"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchBugStateGroupGrid"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultType="java.util.HashMap">
        select count(1) as count,state as state 
        from (
            <include refid="bugWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by state
    </select>


    <select id="listBugStateGroupGrid"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultType="java.util.HashMap">
        select count(1) as count,state as state
        from (
            <include refid="bugWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by state
    </select>

    <select id="searchChangeParent"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="changeParent"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listChangeParent"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="changeParent"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchChild"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="child"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listChild"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="child"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchChoose"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="choose"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listChoose"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="choose"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchChooseChild"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="chooseChild"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listChooseChild"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="chooseChild"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchChooseDependency"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="chooseDependency"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listChooseDependency"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="chooseDependency"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchChooseParentWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="chooseParentWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listChooseParentWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="chooseParentWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchCommentNotifyAssignee"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="commentNotifyAssignee"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listCommentNotifyAssignee"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="commentNotifyAssignee"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchCommon"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="common"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listCommon"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="common"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchCommonBug"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="commonBug"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listCommonBug"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="commonBug"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchDefectPropertyDistribution"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultType="java.util.HashMap">
        select count(1) as count,IF(TRIM(priority) is null, '未分配优先级', priority) as priority,IF(TRIM(REAPPEAR_PROBABILITY) is null, '未设置复现概率', REAPPEAR_PROBABILITY) as reappear_probability,IF(TRIM(severity) is null, '未分配严重程度', severity) as severity,IF(TRIM(SPRINT_ID) is null, '未分配迭代', SPRINT_ID) as sprint_id,STATE as state,STATE_TYPE as state_type 
        from (
            <include refid="bugWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by IF(TRIM(priority) is null, '未分配优先级', priority),IF(TRIM(REAPPEAR_PROBABILITY) is null, '未设置复现概率', REAPPEAR_PROBABILITY),IF(TRIM(severity) is null, '未分配严重程度', severity),IF(TRIM(SPRINT_ID) is null, '未分配迭代', SPRINT_ID),STATE,STATE_TYPE
    </select>


    <select id="listDefectPropertyDistribution"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultType="java.util.HashMap">
        select count(1) as count,IF(TRIM(priority) is null, '未分配优先级', priority) as priority,IF(TRIM(REAPPEAR_PROBABILITY) is null, '未设置复现概率', REAPPEAR_PROBABILITY) as reappear_probability,IF(TRIM(severity) is null, '未分配严重程度', severity) as severity,IF(TRIM(SPRINT_ID) is null, '未分配迭代', SPRINT_ID) as sprint_id,STATE as state,STATE_TYPE as state_type
        from (
            <include refid="bugWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by IF(TRIM(priority) is null, '未分配优先级', priority),IF(TRIM(REAPPEAR_PROBABILITY) is null, '未设置复现概率', REAPPEAR_PROBABILITY),IF(TRIM(severity) is null, '未分配严重程度', severity),IF(TRIM(SPRINT_ID) is null, '未分配迭代', SPRINT_ID),STATE,STATE_TYPE
    </select>

    <select id="searchDeleted"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="deleted"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDeleted"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="deleted"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchKanbanUserStat"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultType="java.util.HashMap">
        select IF(TRIM(ASSIGNEE_ID) is null, '未分组', ASSIGNEE_ID) as assignee_id,count(1) as count 
        from (
            <include refid="kanbanWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by IF(TRIM(ASSIGNEE_ID) is null, '未分组', ASSIGNEE_ID)
    </select>


    <select id="listKanbanUserStat"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultType="java.util.HashMap">
        select IF(TRIM(ASSIGNEE_ID) is null, '未分组', ASSIGNEE_ID) as assignee_id,count(1) as count
        from (
            <include refid="kanbanWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by IF(TRIM(ASSIGNEE_ID) is null, '未分组', ASSIGNEE_ID)
    </select>

    <select id="searchMilestone"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="milestone"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMilestone"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="milestone"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMoveWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="moveWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMoveWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="moveWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyAssignee"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="myAssignee"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyAssignee"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="myAssignee"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyAssigneeCount"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultType="java.util.HashMap">
        select count(1) as count_work_item,IS_ARCHIVED as is_archived 
        from (
            <include refid="myAssignee"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by IS_ARCHIVED
    </select>


    <select id="listMyAssigneeCount"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultType="java.util.HashMap">
        select count(1) as count_work_item,IS_ARCHIVED as is_archived
        from (
            <include refid="myAssignee"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by IS_ARCHIVED
    </select>

    <select id="searchMyAttention"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="myAttention"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyAttention"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="myAttention"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyCreated"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="myCreated"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyCreated"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="myCreated"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyFilter"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="myFilter"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyFilter"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="myFilter"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMySummaryBug"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="mySummaryBug"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMySummaryBug"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="mySummaryBug"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMySummaryOther"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="mySummaryOther"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMySummaryOther"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="mySummaryOther"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMySummaryTask"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="mySummaryTask"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMySummaryTask"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="mySummaryTask"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyTodo"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="myTodo"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyTodo"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="myTodo"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNoBugWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="noBugWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNoBugWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="noBugWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNoCompleted"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="noCompleted"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNoCompleted"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="noCompleted"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNormal"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="normal"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNormal"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="normal"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNotExsistsBugRelation"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="notExsistsBugRelation"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNotExsistsBugRelation"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="notExsistsBugRelation"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNotExsistsRelation"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="notExsistsRelation"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNotExsistsRelation"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="notExsistsRelation"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNotbugExsistsRelation"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="notbugExsistsRelation"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNotbugExsistsRelation"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="notbugExsistsRelation"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNotifyAssignee"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="notifyAssignee"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNotifyAssignee"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="notifyAssignee"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchOverdueWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="overdueWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listOverdueWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="overdueWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchOverviewChart"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="overviewChart"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listOverviewChart"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="overviewChart"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchPlanSnapshot"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="planSnapshot"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listPlanSnapshot"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="planSnapshot"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchProjectResource"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="projectResource"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listProjectResource"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="projectResource"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchPropertyDistribution"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultType="java.util.HashMap">
        select BACKLOG_FROM as backlog_from,BACKLOG_TYPE as backlog_type,count(1) as count,PRIORITY as priority,RISK as risk,SPRINT_NAME as sprint_name,STATE as state 
        from (
            <include refid="requirement"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by BACKLOG_FROM,BACKLOG_TYPE,PRIORITY,RISK,SPRINT_NAME,STATE
    </select>


    <select id="listPropertyDistribution"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultType="java.util.HashMap">
        select BACKLOG_FROM as backlog_from,BACKLOG_TYPE as backlog_type,count(1) as count,PRIORITY as priority,RISK as risk,SPRINT_NAME as sprint_name,STATE as state
        from (
            <include refid="requirement"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
         group by BACKLOG_FROM,BACKLOG_TYPE,PRIORITY,RISK,SPRINT_NAME,STATE
    </select>

    <select id="searchReader"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="reader"/>
                 union
            <include refid="public"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listReader"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="reader"/>
                 union
            <include refid="public"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRecentWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="recentWorkItem"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRecentWorkItem"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="recentWorkItem"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRelease"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="release"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRelease"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="release"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchReleasePlan"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="releasePlan"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listReleasePlan"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="releasePlan"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchReleaseWorkItemChart"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="releaseWorkItemChart"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listReleaseWorkItemChart"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="releaseWorkItemChart"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRequirement"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="requirement"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRequirement"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="requirement"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRequirementTree"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="requirement"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRequirementTree"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="requirement"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchResource"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="resource"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listResource"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="resource"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchSevenDays"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="sevenDays"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listSevenDays"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="sevenDays"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchSprintCompleted"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="sprintCompleted"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listSprintCompleted"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="sprintCompleted"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchSprintWorkItemChart"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="sprintWorkItemChart"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listSprintWorkItemChart"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="sprintWorkItemChart"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTestPlanRelationBug"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="testPlanRelationBug"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTestPlanRelationBug"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="testPlanRelationBug"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTop"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="top"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTop"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="top"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchTree"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="common"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listTree"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="common"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchUnderWork"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="underWork"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listUnderWork"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="underWork"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchUnderWorkResource"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="underWorkResource"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listUnderWorkResource"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="underWorkResource"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchWorkItemType"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.* 
        from (
            <include refid="workItemType"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listWorkItemType"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="workItemType"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="listView"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemSearchContext"  resultMap="WorkItemResultMap">
        select t1.*
        from (
            <include refid="view" />
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
    </select>

    <select id="findByBoardId" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where board_id in <foreach item="id" index="index" collection="boardIds" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findByEntryId" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where entry_id in <foreach item="id" index="index" collection="entryIds" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findByProjectId" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where project_id in <foreach item="id" index="index" collection="projectIds" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findByReleaseId" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where release_id in <foreach item="id" index="index" collection="releaseIds" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findBySprintId" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where sprint_id in <foreach item="id" index="index" collection="sprintIds" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findBySwimlaneId" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where swimlane_id in <foreach item="id" index="index" collection="swimlaneIds" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findByAssigneeId" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where assignee_id in <foreach item="id" index="index" collection="assigneeIds" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findByPid" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where pid in <foreach item="id" index="index" collection="pids" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findByState" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where state in <foreach item="id" index="index" collection="states" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findByTopId" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where top_id in <foreach item="id" index="index" collection="topIds" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findByWorkItemTypeId" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where work_item_type_id in <foreach item="id" index="index" collection="workItemTypeIds" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>

    <select id="findById" resultMap="WorkItemResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where id in <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">#{id}</foreach>  order by IDENTIFIER ASC
    </select>


</mapper>