<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="cn.ibizlab.plm.core.projmgmt.mapper.WorkItemTypeMapper">

        <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="WorkItemTypeResultMap" type="cn.ibizlab.plm.core.projmgmt.domain.WorkItemType" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="isSystem" column="is_system" />
		<result property="projectType" column="project_type" />
		<result property="subType" column="sub_type" />
		<result property="createMan" column="create_man" />
		<result property="createTime" column="create_time" />
		<result property="updateMan" column="update_man" />
		<result property="updateTime" column="update_time" />
		<result property="projectId" column="project_id" />
        <association property="project" javaType="cn.ibizlab.plm.core.projmgmt.domain.Project" column="project_id" select="cn.ibizlab.plm.core.projmgmt.mapper.ProjectMapper.selectById" fetchType="lazy"></association>
    </resultMap>

    <select id="selectById"  resultMap="WorkItemTypeResultMap">
        <include refid="view" /> 
         where 
         t1.id=#{ id }
    </select>

    <select id="selectEntity" parameterType="cn.ibizlab.plm.core.projmgmt.domain.WorkItemType" resultMap="WorkItemTypeResultMap">
        <include refid="view" /> 
         where 
         (t1.id = #{ id })
    </select>

    <select id="selectEntities" parameterType="java.util.List" resultMap="WorkItemTypeResultMap">
        <include refid="view" /> 
         where 
         (t1.id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </select>

    <delete id="deleteEntities" parameterType="java.util.List">
    delete from WORK_ITEM_TYPE
    where (id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </delete>

    <sql id="default" databaseId="mysql">
         <![CDATA[ SELECT t1.`CODE`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`GROUP`, t1.`ICON`, t1.`ID`, t1.`IS_SYSTEM`, t1.`NAME`, t1.`PROJECT_ID`, t1.`PROJECT_TYPE`, t1.`SEQUENCE`, t1.`SUB_TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `WORK_ITEM_TYPE` t1   ]]>  
    </sql>

    <sql id="view" databaseId="mysql">
         <![CDATA[ SELECT t1.`CODE`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`GROUP`, t1.`ICON`, t1.`ID`, t1.`IS_SYSTEM`, t1.`NAME`, t1.`PROJECT_ID`, t1.`PROJECT_TYPE`, t1.`SEQUENCE`, t1.`SUB_TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `WORK_ITEM_TYPE` t1   ]]>  
    </sql>

    <sql id="curProjectType" databaseId="mysql">
         <![CDATA[ SELECT t1.`CODE`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`GROUP`, t1.`ICON`, t1.`ID`, t1.`IS_SYSTEM`, t1.`NAME`, t1.`PROJECT_ID`, t1.`PROJECT_TYPE`, t1.`SEQUENCE`, t1.`SUB_TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `WORK_ITEM_TYPE` t1   ]]>  where  <![CDATA[ ( `PROJECT_TYPE` = (select type from project where id=#{ctx.datacontext.project}) ) ]]> 
    </sql>

    <sql id="projectWorkItemType" databaseId="mysql">
         <![CDATA[ SELECT t1.`CODE`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`GROUP`, t1.`ICON`, t1.`ID`, t1.`IS_SYSTEM`, t1.`NAME`, t1.`PROJECT_ID`, t1.`PROJECT_TYPE`, t1.`SEQUENCE`, t1.`SUB_TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `WORK_ITEM_TYPE` t1   ]]>  where  <![CDATA[ ( `PROJECT_TYPE` = (select type from project where id=#{ctx.webcontext.project_id}) ) ]]> 
    </sql>

    <sql id="projectWorkItemTypeNotBug" databaseId="mysql">
         <![CDATA[ SELECT t1.`CODE`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`GROUP`, t1.`ICON`, t1.`ID`, t1.`IS_SYSTEM`, t1.`NAME`, t1.`PROJECT_ID`, t1.`PROJECT_TYPE`, t1.`SEQUENCE`, t1.`SUB_TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `WORK_ITEM_TYPE` t1   ]]>  where  <![CDATA[ ( `PROJECT_TYPE` = (select type from project where id=#{ctx.webcontext.project_id}) and `group` <> 'bug' ) ]]> 
    </sql>

    <select id="searchDefault"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemTypeSearchContext"  resultMap="WorkItemTypeResultMap">
        select t1.* 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDefault"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemTypeSearchContext"  resultMap="WorkItemTypeResultMap">
        select t1.*
        from (
            <include refid="default"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchCurProjectType"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemTypeSearchContext"  resultMap="WorkItemTypeResultMap">
        select t1.* 
        from (
            <include refid="curProjectType"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listCurProjectType"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemTypeSearchContext"  resultMap="WorkItemTypeResultMap">
        select t1.*
        from (
            <include refid="curProjectType"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchProjectWorkItemType"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemTypeSearchContext"  resultMap="WorkItemTypeResultMap">
        select t1.* 
        from (
            <include refid="projectWorkItemType"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listProjectWorkItemType"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemTypeSearchContext"  resultMap="WorkItemTypeResultMap">
        select t1.*
        from (
            <include refid="projectWorkItemType"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchProjectWorkItemTypeNotBug"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemTypeSearchContext"  resultMap="WorkItemTypeResultMap">
        select t1.* 
        from (
            <include refid="projectWorkItemTypeNotBug"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listProjectWorkItemTypeNotBug"  parameterType="cn.ibizlab.plm.core.projmgmt.filter.WorkItemTypeSearchContext"  resultMap="WorkItemTypeResultMap">
        select t1.*
        from (
            <include refid="projectWorkItemTypeNotBug"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="findByProjectId" resultMap="WorkItemTypeResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where project_id in <foreach item="id" index="index" collection="projectIds" open="(" separator="," close=")">#{id}</foreach>  order by SEQUENCE ASC
    </select>


</mapper>