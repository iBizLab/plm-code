<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="cn.ibizlab.plm.core.team.mapper.DiscussReplyMapper">

        <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="DiscussReplyResultMap" type="cn.ibizlab.plm.core.team.domain.DiscussReply" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="replyCommentNum" column="comment_num"/>
		<result property="discussName" column="discuss_name"/>
		<result property="commentCount" column="comment_count"/>
		<result property="createMan" column="create_man"/>
		<result property="createTime" column="create_time"/>
		<result property="updateMan" column="update_man"/>
		<result property="updateTime" column="update_time"/>
		<result property="postId" column="post_id"/>
        <association property="discussPost" javaType="cn.ibizlab.plm.core.team.domain.DiscussPost" column="post_id" select="cn.ibizlab.plm.core.team.mapper.DiscussPostMapper.selectById" fetchType="lazy"></association>
    </resultMap>

    <select id="selectById"  resultMap="DiscussReplyResultMap">
        <include refid="view" /> 
         where 
         t1.id=#{ id }
    </select>

    <select id="selectEntity" parameterType="cn.ibizlab.plm.core.team.domain.DiscussReply" resultMap="DiscussReplyResultMap">
        <include refid="view" /> 
         where 
         (t1.id = #{ id })
    </select>

    <select id="selectEntities" parameterType="java.util.List" resultMap="DiscussReplyResultMap">
        <include refid="view" /> 
         where 
         (t1.id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </select>

    <delete id="deleteEntities" parameterType="java.util.List">
    delete from DISCUSS_REPLY
    where (id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </delete>

    <sql id="default" databaseId="mysql">
         <![CDATA[ SELECT (SELECT COUNT( com.ID ) AS comment_count FROM DISCUSS_REPLY reply LEFT JOIN `COMMENT` com ON reply.ID = com.PRINCIPAL_ID WHERE reply.ID = t1.`ID`) AS `COMMENT_COUNT`, (SELECT COUNT( com.ID ) AS comment_count FROM DISCUSS_REPLY reply LEFT JOIN `COMMENT` com ON reply.ID = com.PRINCIPAL_ID WHERE reply.ID = t1.`ID`) AS `COMMENT_NUM`, t1.`CONTENT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t11.`NAME` AS `DISCUSS_NAME`, t1.`ID`, t1.`NAME`, t1.`POST_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `DISCUSS_REPLY` t1  LEFT JOIN `DISCUSS_POST` t11 ON t1.`POST_ID` = t11.`ID`   ]]>  
    </sql>

    <sql id="view" databaseId="mysql">
         <![CDATA[ SELECT (SELECT COUNT( com.ID ) AS comment_count FROM DISCUSS_REPLY reply LEFT JOIN `COMMENT` com ON reply.ID = com.PRINCIPAL_ID WHERE reply.ID = t1.`ID`) AS `COMMENT_COUNT`, (SELECT COUNT( com.ID ) AS comment_count FROM DISCUSS_REPLY reply LEFT JOIN `COMMENT` com ON reply.ID = com.PRINCIPAL_ID WHERE reply.ID = t1.`ID`) AS `COMMENT_NUM`, t1.`CONTENT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t11.`NAME` AS `DISCUSS_NAME`, t1.`ID`, t1.`NAME`, t1.`POST_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `DISCUSS_REPLY` t1  LEFT JOIN `DISCUSS_POST` t11 ON t1.`POST_ID` = t11.`ID`   ]]>  
    </sql>

    <sql id="myReply" databaseId="mysql">
         <![CDATA[ SELECT (SELECT COUNT( com.ID ) AS comment_count FROM DISCUSS_REPLY reply LEFT JOIN `COMMENT` com ON reply.ID = com.PRINCIPAL_ID WHERE reply.ID = t1.`ID`) AS `COMMENT_COUNT`, (SELECT COUNT( com.ID ) AS comment_count FROM DISCUSS_REPLY reply LEFT JOIN `COMMENT` com ON reply.ID = com.PRINCIPAL_ID WHERE reply.ID = t1.`ID`) AS `COMMENT_NUM`, t1.`CONTENT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t11.`NAME` AS `DISCUSS_NAME`, t1.`ID`, t1.`NAME`, t1.`POST_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `DISCUSS_REPLY` t1  LEFT JOIN `DISCUSS_POST` t11 ON t1.`POST_ID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`CREATE_MAN` = #{ctx.sessioncontext.srfpersonid}  AND  exists(select 1 from discuss_post t2, discuss_topic t3 where t2.topic_id = t3.id   and t1.post_id = t2.id and t3.id = #{ctx.webcontext.discuss_topic}) ) ]]> 
    </sql>

    <sql id="recent" databaseId="mysql">
         <![CDATA[ SELECT (SELECT COUNT( com.ID ) AS comment_count FROM DISCUSS_REPLY reply LEFT JOIN `COMMENT` com ON reply.ID = com.PRINCIPAL_ID WHERE reply.ID = t1.`ID`) AS `COMMENT_COUNT`, (SELECT COUNT( com.ID ) AS comment_count FROM DISCUSS_REPLY reply LEFT JOIN `COMMENT` com ON reply.ID = com.PRINCIPAL_ID WHERE reply.ID = t1.`ID`) AS `COMMENT_NUM`, t1.`CONTENT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t11.`NAME` AS `DISCUSS_NAME`, t1.`ID`, t1.`NAME`, t1.`POST_ID`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `DISCUSS_REPLY` t1  LEFT JOIN `DISCUSS_POST` t11 ON t1.`POST_ID` = t11.`ID`   ]]>  where  <![CDATA[ ( DATEDIFF(sysdate(),t1.`CREATE_TIME`) <= 30  AND  exists(select 1 from `discuss_post` t2, `member` t3 where t1.post_id = t2.id and t2.topic_id = t3.owner_id and t3.user_id = #{ctx.sessioncontext.srfpersonid})  AND  exists(select 1 from discuss_post t2, discuss_topic t3 where t2.topic_id = t3.id   and t1.post_id = t2.id and t3.id = #{ctx.webcontext.discuss_topic}) ) ]]> 
    </sql>

    <select id="searchDefault"  parameterType="cn.ibizlab.plm.core.team.filter.DiscussReplySearchContext"  resultMap="DiscussReplyResultMap">
        select t1.* 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDefault"  parameterType="cn.ibizlab.plm.core.team.filter.DiscussReplySearchContext"  resultMap="DiscussReplyResultMap">
        select t1.*
        from (
            <include refid="default"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyReply"  parameterType="cn.ibizlab.plm.core.team.filter.DiscussReplySearchContext"  resultMap="DiscussReplyResultMap">
        select t1.* 
        from (
            <include refid="myReply"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyReply"  parameterType="cn.ibizlab.plm.core.team.filter.DiscussReplySearchContext"  resultMap="DiscussReplyResultMap">
        select t1.*
        from (
            <include refid="myReply"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRecent"  parameterType="cn.ibizlab.plm.core.team.filter.DiscussReplySearchContext"  resultMap="DiscussReplyResultMap">
        select t1.* 
        from (
            <include refid="recent"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRecent"  parameterType="cn.ibizlab.plm.core.team.filter.DiscussReplySearchContext"  resultMap="DiscussReplyResultMap">
        select t1.*
        from (
            <include refid="recent"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="listView"  parameterType="cn.ibizlab.plm.core.team.filter.DiscussReplySearchContext"  resultMap="DiscussReplyResultMap">
        select t1.*
        from (
            <include refid="view" />
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
    </select>

    <select id="findByPostId" resultMap="DiscussReplyResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where post_id in <foreach item="id" index="index" collection="postIds" open="(" separator="," close=")">#{id}</foreach>  order by CREATE_TIME ASC
    </select>


</mapper>