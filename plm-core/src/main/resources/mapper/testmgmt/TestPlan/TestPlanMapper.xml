<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="cn.ibizlab.plm.core.testmgmt.mapper.TestPlanMapper">

        <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="TestPlanResultMap" type="cn.ibizlab.plm.core.testmgmt.domain.TestPlan" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="startAt" column="start_at"/>
		<result property="endAt" column="end_at"/>
		<result property="assigneeName" column="assignee_name"/>
		<result property="assigneeId" column="assignee_id"/>
		<result property="projectType" column="project_type"/>
		<result property="libraryIdentifier" column="library_identifier"/>
		<result property="libraryIsDeleted" column="library_is_deleted"/>
		<result property="createMan" column="create_man"/>
		<result property="createTime" column="create_time"/>
		<result property="updateMan" column="update_man"/>
		<result property="updateTime" column="update_time"/>
		<result property="libraryId" column="library_id"/>
		<result property="projectId" column="project_id"/>
		<result property="sprintId" column="sprint_id"/>
		<result property="projectName" column="project_name"/>
		<result property="sprintName" column="sprint_name"/>
		<result property="libraryName" column="library_name"/>
		<result property="releaseId" column="release_id"/>
		<result property="releaseName" column="release_name"/>
        <association property="library" javaType="cn.ibizlab.plm.core.testmgmt.domain.Library" column="library_id" select="cn.ibizlab.plm.core.testmgmt.mapper.LibraryMapper.selectById" fetchType="lazy"></association>
        <association property="project" javaType="cn.ibizlab.plm.core.projmgmt.domain.Project" column="project_id" select="cn.ibizlab.plm.core.projmgmt.mapper.ProjectMapper.selectById" fetchType="lazy"></association>
        <association property="release" javaType="cn.ibizlab.plm.core.projmgmt.domain.Release" column="release_id" select="cn.ibizlab.plm.core.projmgmt.mapper.ReleaseMapper.selectById" fetchType="lazy"></association>
        <association property="sprint" javaType="cn.ibizlab.plm.core.projmgmt.domain.Sprint" column="sprint_id" select="cn.ibizlab.plm.core.projmgmt.mapper.SprintMapper.selectById" fetchType="lazy"></association>
    </resultMap>

    <select id="selectById"  resultMap="TestPlanResultMap">
        <include refid="view" /> 
         where 
         t1.id=#{ id }
    </select>

    <select id="selectEntity" parameterType="cn.ibizlab.plm.core.testmgmt.domain.TestPlan" resultMap="TestPlanResultMap">
        <include refid="view" /> 
         where 
         (t1.id = #{ id })
    </select>

    <select id="selectEntities" parameterType="java.util.List" resultMap="TestPlanResultMap">
        <include refid="view" /> 
         where 
         (t1.id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </select>

    <delete id="deleteEntities" parameterType="java.util.List">
    delete from TEST_PLAN
    where (id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </delete>

    <sql id="default" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ID`, t1.`LIBRARY_ID`, t21.`IDENTIFIER` AS `LIBRARY_IDENTIFIER`, t21.`IS_DELETED` AS `LIBRARY_IS_DELETED`, t21.`NAME` AS `LIBRARY_NAME`, t1.`NAME`, t1.`PROJECT_ID`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t1.`RELEASE_ID`, t41.`NAME` AS `RELEASE_NAME`, t1.`SPRINT_ID`, t31.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATUS`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TEST_PLAN` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `LIBRARY` t21 ON t1.`LIBRARY_ID` = t21.`ID`  LEFT JOIN `SPRINT` t31 ON t1.`SPRINT_ID` = t31.`ID`  LEFT JOIN `PROJECT_RELEASE` t41 ON t1.`RELEASE_ID` = t41.`ID`   ]]>  where ( <choose><when test='ctx.webcontext.type !=null and ctx.webcontext.type != &quot;&quot; '>  t1.`TYPE` = #{ctx.webcontext.type}  </when><otherwise>1=1</otherwise></choose> ) 
    </sql>

    <sql id="view" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ID`, t1.`LIBRARY_ID`, t21.`IDENTIFIER` AS `LIBRARY_IDENTIFIER`, t21.`IS_DELETED` AS `LIBRARY_IS_DELETED`, t21.`NAME` AS `LIBRARY_NAME`, t1.`NAME`, t1.`PROJECT_ID`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t1.`RELEASE_ID`, t41.`NAME` AS `RELEASE_NAME`, t1.`SPRINT_ID`, t31.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATUS`, t1.`SUMMARY`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TEST_PLAN` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `LIBRARY` t21 ON t1.`LIBRARY_ID` = t21.`ID`  LEFT JOIN `SPRINT` t31 ON t1.`SPRINT_ID` = t31.`ID`  LEFT JOIN `PROJECT_RELEASE` t41 ON t1.`RELEASE_ID` = t41.`ID`   ]]>  
    </sql>

    <sql id="biDetail" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ID`, t1.`LIBRARY_ID`, t21.`IDENTIFIER` AS `LIBRARY_IDENTIFIER`, t21.`IS_DELETED` AS `LIBRARY_IS_DELETED`, t21.`NAME` AS `LIBRARY_NAME`, t1.`NAME`, t1.`PROJECT_ID`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t1.`RELEASE_ID`, t41.`NAME` AS `RELEASE_NAME`, t1.`SPRINT_ID`, t31.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATUS`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TEST_PLAN` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `LIBRARY` t21 ON t1.`LIBRARY_ID` = t21.`ID`  LEFT JOIN `SPRINT` t31 ON t1.`SPRINT_ID` = t31.`ID`  LEFT JOIN `PROJECT_RELEASE` t41 ON t1.`RELEASE_ID` = t41.`ID`   ]]>  
    </sql>

    <sql id="biSearch" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ID`, t1.`LIBRARY_ID`, t21.`IDENTIFIER` AS `LIBRARY_IDENTIFIER`, t21.`IS_DELETED` AS `LIBRARY_IS_DELETED`, t21.`NAME` AS `LIBRARY_NAME`, t1.`NAME`, t1.`PROJECT_ID`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t1.`RELEASE_ID`, t41.`NAME` AS `RELEASE_NAME`, t1.`SPRINT_ID`, t31.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATUS`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TEST_PLAN` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `LIBRARY` t21 ON t1.`LIBRARY_ID` = t21.`ID`  LEFT JOIN `SPRINT` t31 ON t1.`SPRINT_ID` = t31.`ID`  LEFT JOIN `PROJECT_RELEASE` t41 ON t1.`RELEASE_ID` = t41.`ID`   ]]>  
    </sql>

    <sql id="myAssignee" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ID`, t1.`LIBRARY_ID`, t21.`IDENTIFIER` AS `LIBRARY_IDENTIFIER`, t21.`IS_DELETED` AS `LIBRARY_IS_DELETED`, t21.`NAME` AS `LIBRARY_NAME`, t1.`NAME`, t1.`PROJECT_ID`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t1.`RELEASE_ID`, t41.`NAME` AS `RELEASE_NAME`, t1.`SPRINT_ID`, t31.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATUS`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TEST_PLAN` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `LIBRARY` t21 ON t1.`LIBRARY_ID` = t21.`ID`  LEFT JOIN `SPRINT` t31 ON t1.`SPRINT_ID` = t31.`ID`  LEFT JOIN `PROJECT_RELEASE` t41 ON t1.`RELEASE_ID` = t41.`ID`   ]]>  where  <![CDATA[ ( t21.`IS_DELETED` = 0 ) ]]> and  <![CDATA[ ( t1.`ASSIGNEE_ID` = #{ctx.sessioncontext.srfpersonid} ) ]]> 
    </sql>

    <sql id="myInProgress" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ID`, t1.`LIBRARY_ID`, t21.`IDENTIFIER` AS `LIBRARY_IDENTIFIER`, t21.`IS_DELETED` AS `LIBRARY_IS_DELETED`, t21.`NAME` AS `LIBRARY_NAME`, t1.`NAME`, t1.`PROJECT_ID`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t1.`RELEASE_ID`, t41.`NAME` AS `RELEASE_NAME`, t1.`SPRINT_ID`, t31.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATUS`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TEST_PLAN` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `LIBRARY` t21 ON t1.`LIBRARY_ID` = t21.`ID`  LEFT JOIN `SPRINT` t31 ON t1.`SPRINT_ID` = t31.`ID`  LEFT JOIN `PROJECT_RELEASE` t41 ON t1.`RELEASE_ID` = t41.`ID`   ]]>  where  <![CDATA[ ( t21.`IS_DELETED` = 0 ) ]]> and  <![CDATA[ ( t1.`STATUS` = 'in_progress' ) ]]> 
    </sql>

    <sql id="myParticipate" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ID`, t1.`LIBRARY_ID`, t21.`IDENTIFIER` AS `LIBRARY_IDENTIFIER`, t21.`IS_DELETED` AS `LIBRARY_IS_DELETED`, t21.`NAME` AS `LIBRARY_NAME`, t1.`NAME`, t1.`PROJECT_ID`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t1.`RELEASE_ID`, t41.`NAME` AS `RELEASE_NAME`, t1.`SPRINT_ID`, t31.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATUS`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TEST_PLAN` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `LIBRARY` t21 ON t1.`LIBRARY_ID` = t21.`ID`  LEFT JOIN `SPRINT` t31 ON t1.`SPRINT_ID` = t31.`ID`  LEFT JOIN `PROJECT_RELEASE` t41 ON t1.`RELEASE_ID` = t41.`ID`   ]]>  where  <![CDATA[ EXISTS(SELECT * FROM `RUN` t51   WHERE   t1.`ID` = t51.`PLAN_ID`  AND  ( t51.`EXECUTOR_ID` = #{ctx.sessioncontext.srfpersonid} ) ) ]]> and  <![CDATA[ ( t21.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="pendingAndInProgress" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ID`, t1.`LIBRARY_ID`, t21.`IDENTIFIER` AS `LIBRARY_IDENTIFIER`, t21.`IS_DELETED` AS `LIBRARY_IS_DELETED`, t21.`NAME` AS `LIBRARY_NAME`, t1.`NAME`, t1.`PROJECT_ID`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t1.`RELEASE_ID`, t41.`NAME` AS `RELEASE_NAME`, t1.`SPRINT_ID`, t31.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATUS`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TEST_PLAN` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `LIBRARY` t21 ON t1.`LIBRARY_ID` = t21.`ID`  LEFT JOIN `SPRINT` t31 ON t1.`SPRINT_ID` = t31.`ID`  LEFT JOIN `PROJECT_RELEASE` t41 ON t1.`RELEASE_ID` = t41.`ID`   ]]>  where  <![CDATA[ ( t1.`STATUS` <> 'completed' ) ]]> 
    </sql>

    <sql id="queryNoShiftIn" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ID`, t1.`LIBRARY_ID`, t21.`IDENTIFIER` AS `LIBRARY_IDENTIFIER`, t21.`IS_DELETED` AS `LIBRARY_IS_DELETED`, t21.`NAME` AS `LIBRARY_NAME`, t1.`NAME`, t1.`PROJECT_ID`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t1.`RELEASE_ID`, t41.`NAME` AS `RELEASE_NAME`, t1.`SPRINT_ID`, t31.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATUS`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TEST_PLAN` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `LIBRARY` t21 ON t1.`LIBRARY_ID` = t21.`ID`  LEFT JOIN `SPRINT` t31 ON t1.`SPRINT_ID` = t31.`ID`  LEFT JOIN `PROJECT_RELEASE` t41 ON t1.`RELEASE_ID` = t41.`ID`   ]]>  where  <![CDATA[ ( not exists (select 1 from run t2 where t1.ID = t2.PLAN_ID and t2.CASE_ID= #{ctx.webcontext.testcaseid}) ) ]]> 
    </sql>

    <sql id="unJoinPlan" databaseId="mysql">
         <![CDATA[ SELECT t1.`ASSIGNEE_ID`, t1.`ASSIGNEE_NAME`, t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`END_AT`, t1.`ID`, t1.`LIBRARY_ID`, t21.`IDENTIFIER` AS `LIBRARY_IDENTIFIER`, t21.`IS_DELETED` AS `LIBRARY_IS_DELETED`, t21.`NAME` AS `LIBRARY_NAME`, t1.`NAME`, t1.`PROJECT_ID`, t11.`NAME` AS `PROJECT_NAME`, t11.`TYPE` AS `PROJECT_TYPE`, t1.`RELEASE_ID`, t41.`NAME` AS `RELEASE_NAME`, t1.`SPRINT_ID`, t31.`NAME` AS `SPRINT_NAME`, t1.`START_AT`, t1.`STATUS`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TEST_PLAN` t1  LEFT JOIN `PROJECT` t11 ON t1.`PROJECT_ID` = t11.`ID`  LEFT JOIN `LIBRARY` t21 ON t1.`LIBRARY_ID` = t21.`ID`  LEFT JOIN `SPRINT` t31 ON t1.`SPRINT_ID` = t31.`ID`  LEFT JOIN `PROJECT_RELEASE` t41 ON t1.`RELEASE_ID` = t41.`ID`   ]]>  where  <![CDATA[ ( t1.`STATUS` <> 'completed'  AND  EXISTS (     SELECT 1      FROM `test_case`      LEFT JOIN `run` ON `test_case`.`ID` = `run`.`CASE_ID` ) and NOT EXISTS (     SELECT 1      FROM `run`      WHERE `run`.`CASE_ID` = #{ctx.webcontext.test_case}     AND `run`.`PLAN_ID` = t1.`ID` ) ) ]]> 
    </sql>

    <select id="searchDefault"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestPlanSearchContext"  resultMap="TestPlanResultMap">
        select t1.* 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDefault"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestPlanSearchContext"  resultMap="TestPlanResultMap">
        select t1.*
        from (
            <include refid="default"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchBiDetail"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestPlanSearchContext"  resultMap="TestPlanResultMap">
        select t1.* 
        from (
            <include refid="biDetail"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listBiDetail"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestPlanSearchContext"  resultMap="TestPlanResultMap">
        select t1.*
        from (
            <include refid="biDetail"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchBiSearch"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestPlanSearchContext"  resultMap="TestPlanResultMap">
        select t1.* 
        from (
            <include refid="biSearch"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listBiSearch"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestPlanSearchContext"  resultMap="TestPlanResultMap">
        select t1.*
        from (
            <include refid="biSearch"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyAssignee"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestPlanSearchContext"  resultMap="TestPlanResultMap">
        select t1.* 
        from (
            <include refid="myAssignee"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyAssignee"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestPlanSearchContext"  resultMap="TestPlanResultMap">
        select t1.*
        from (
            <include refid="myAssignee"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyInProgress"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestPlanSearchContext"  resultMap="TestPlanResultMap">
        select t1.* 
        from (
            <include refid="myInProgress"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyInProgress"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestPlanSearchContext"  resultMap="TestPlanResultMap">
        select t1.*
        from (
            <include refid="myInProgress"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyParticipate"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestPlanSearchContext"  resultMap="TestPlanResultMap">
        select t1.* 
        from (
            <include refid="myParticipate"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyParticipate"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestPlanSearchContext"  resultMap="TestPlanResultMap">
        select t1.*
        from (
            <include refid="myParticipate"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchPendingAndInProgress"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestPlanSearchContext"  resultMap="TestPlanResultMap">
        select t1.* 
        from (
            <include refid="pendingAndInProgress"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listPendingAndInProgress"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestPlanSearchContext"  resultMap="TestPlanResultMap">
        select t1.*
        from (
            <include refid="pendingAndInProgress"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchQueryNoShiftIn"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestPlanSearchContext"  resultMap="TestPlanResultMap">
        select t1.* 
        from (
            <include refid="queryNoShiftIn"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listQueryNoShiftIn"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestPlanSearchContext"  resultMap="TestPlanResultMap">
        select t1.*
        from (
            <include refid="queryNoShiftIn"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchUnJoinPlan"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestPlanSearchContext"  resultMap="TestPlanResultMap">
        select t1.* 
        from (
            <include refid="unJoinPlan"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listUnJoinPlan"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestPlanSearchContext"  resultMap="TestPlanResultMap">
        select t1.*
        from (
            <include refid="unJoinPlan"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="listView"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestPlanSearchContext"  resultMap="TestPlanResultMap">
        select t1.*
        from (
            <include refid="view" />
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
    </select>

    <select id="findByLibraryId" resultMap="TestPlanResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where library_id in <foreach item="id" index="index" collection="libraryIds" open="(" separator="," close=")">#{id}</foreach>  order by UPDATE_TIME DESC
    </select>

    <select id="findByProjectId" resultMap="TestPlanResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where project_id in <foreach item="id" index="index" collection="projectIds" open="(" separator="," close=")">#{id}</foreach>  order by UPDATE_TIME DESC
    </select>

    <select id="findByReleaseId" resultMap="TestPlanResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where release_id in <foreach item="id" index="index" collection="releaseIds" open="(" separator="," close=")">#{id}</foreach>  order by UPDATE_TIME DESC
    </select>

    <select id="findBySprintId" resultMap="TestPlanResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where sprint_id in <foreach item="id" index="index" collection="sprintIds" open="(" separator="," close=")">#{id}</foreach>  order by UPDATE_TIME DESC
    </select>

    <select id="findById" resultMap="TestPlanResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where id in <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">#{id}</foreach>  order by UPDATE_TIME DESC
    </select>


</mapper>