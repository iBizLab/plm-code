<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="cn.ibizlab.plm.core.testmgmt.mapper.TestSuiteMapper">

        <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="TestSuiteResultMap" type="cn.ibizlab.plm.core.testmgmt.domain.TestSuite" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="isLeaf" column="is_leaf" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="updateMan" column="update_man" />
		<result property="createMan" column="create_man" />
		<result property="libraryId" column="library_id" />
		<result property="pid" column="pid" />
		<result property="libraryName" column="library_name" />
        <association property="library" javaType="cn.ibizlab.plm.core.testmgmt.domain.Library" column="library_id" select="cn.ibizlab.plm.core.testmgmt.mapper.LibraryMapper.selectById" fetchType="lazy"></association>
        <association property="testSuite" javaType="cn.ibizlab.plm.core.testmgmt.domain.TestSuite" column="pid" select="cn.ibizlab.plm.core.testmgmt.mapper.TestSuiteMapper.selectById" fetchType="lazy"></association>
    </resultMap>

    <select id="selectById"  resultMap="TestSuiteResultMap">
        <include refid="view" /> 
         where 
         t1.id=#{ id }
    </select>

    <select id="selectEntity" parameterType="cn.ibizlab.plm.core.testmgmt.domain.TestSuite" resultMap="TestSuiteResultMap">
        <include refid="view" /> 
         where 
         (t1.id = #{ id })
    </select>

    <select id="selectEntities" parameterType="java.util.List" resultMap="TestSuiteResultMap">
        <include refid="view" /> 
         where 
         (t1.id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </select>

    <delete id="deleteEntities" parameterType="java.util.List">
    delete from TEST_SUITE
    where (id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </delete>

    <sql id="default" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IS_LEAF`, t1.`LIBRARY_ID`, t21.`NAME` AS `LIBRARY_NAME`, t1.`NAME`, t1.`PID`, t11.`NAME` AS `PNAME`, t1.`SEQUENCE`, t1.`SUITES`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TEST_SUITE` t1  LEFT JOIN `TEST_SUITE` t11 ON t1.`PID` = t11.`ID`  LEFT JOIN `LIBRARY` t21 ON t1.`LIBRARY_ID` = t21.`ID`   ]]>  
    </sql>

    <sql id="noParent" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IS_LEAF`, t1.`LIBRARY_ID`, t21.`NAME` AS `LIBRARY_NAME`, t1.`NAME`, t1.`PID`, t11.`NAME` AS `PNAME`, t1.`SEQUENCE`, t1.`SUITES`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TEST_SUITE` t1  LEFT JOIN `TEST_SUITE` t11 ON t1.`PID` = t11.`ID`  LEFT JOIN `LIBRARY` t21 ON t1.`LIBRARY_ID` = t21.`ID`   ]]>  where  <![CDATA[ ( t1.`PID` IS NULL ) ]]> 
    </sql>

    <sql id="normal" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IS_LEAF`, t1.`LIBRARY_ID`, t21.`NAME` AS `LIBRARY_NAME`, t1.`NAME`, t1.`PID`, t11.`NAME` AS `PNAME`, t1.`SEQUENCE`, t1.`SUITES`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TEST_SUITE` t1  LEFT JOIN `TEST_SUITE` t11 ON t1.`PID` = t11.`ID`  LEFT JOIN `LIBRARY` t21 ON t1.`LIBRARY_ID` = t21.`ID`   ]]>  
    </sql>

    <sql id="root" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IS_LEAF`, t1.`LIBRARY_ID`, t21.`NAME` AS `LIBRARY_NAME`, t1.`NAME`, t1.`PID`, t11.`NAME` AS `PNAME`, t1.`SEQUENCE`, t1.`SUITES`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TEST_SUITE` t1  LEFT JOIN `TEST_SUITE` t11 ON t1.`PID` = t11.`ID`  LEFT JOIN `LIBRARY` t21 ON t1.`LIBRARY_ID` = t21.`ID`   ]]>  where  <![CDATA[ ( t1.`PID` IS NULL ) ]]> 
    </sql>

    <sql id="view" databaseId="mysql">
         <![CDATA[ SELECT t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`ID`, t1.`IS_LEAF`, t1.`LIBRARY_ID`, t21.`NAME` AS `LIBRARY_NAME`, t1.`NAME`, t1.`PID`, t11.`NAME` AS `PNAME`, t1.`SEQUENCE`, t1.`SUITES`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `TEST_SUITE` t1  LEFT JOIN `TEST_SUITE` t11 ON t1.`PID` = t11.`ID`  LEFT JOIN `LIBRARY` t21 ON t1.`LIBRARY_ID` = t21.`ID`   ]]>  
    </sql>

    <select id="searchDefault"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestSuiteSearchContext"  resultMap="TestSuiteResultMap">
        select t1.* 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDefault"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestSuiteSearchContext"  resultMap="TestSuiteResultMap">
        select t1.*
        from (
            <include refid="default"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNoParent"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestSuiteSearchContext"  resultMap="TestSuiteResultMap">
        select t1.* 
        from (
            <include refid="noParent"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNoParent"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestSuiteSearchContext"  resultMap="TestSuiteResultMap">
        select t1.*
        from (
            <include refid="noParent"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNormal"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestSuiteSearchContext"  resultMap="TestSuiteResultMap">
        select t1.* 
        from (
            <include refid="normal"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNormal"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestSuiteSearchContext"  resultMap="TestSuiteResultMap">
        select t1.*
        from (
            <include refid="normal"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchRoot"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestSuiteSearchContext"  resultMap="TestSuiteResultMap">
        select t1.* 
        from (
            <include refid="root"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listRoot"  parameterType="cn.ibizlab.plm.core.testmgmt.filter.TestSuiteSearchContext"  resultMap="TestSuiteResultMap">
        select t1.*
        from (
            <include refid="root"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="findByLibraryId" resultMap="TestSuiteResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where library_id in <foreach item="id" index="index" collection="libraryIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findByPid" resultMap="TestSuiteResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where pid in <foreach item="id" index="index" collection="pids" open="(" separator="," close=")">#{id}</foreach> 
    </select>


</mapper>