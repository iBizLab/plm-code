<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="cn.ibizlab.plm.core.wiki.mapper.ArticlePageMapper">

        <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="ArticlePageResultMap" type="cn.ibizlab.plm.core.wiki.domain.ArticlePage" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="formatType" column="format_type" />
		<result property="isFavorite" column="is_favorite" />
		<result property="isLeaf" column="is_leaf" />
		<result property="spaceIdentifier" column="space_identifier" />
		<result property="isArchived" column="is_archived" />
		<result property="isDeleted" column="is_deleted" />
		<result property="curVersionId" column="cur_version_id" />
		<result property="curVersionName" column="cur_version_name" />
		<result property="publishTime" column="publish_time" />
		<result property="isPublished" column="is_published" />
		<result property="publishMan" column="publish_man" />
		<result property="publishContent" column="publish_content" />
		<result property="showIdentifier" column="show_identifier" />
		<result property="publishName" column="publish_name" />
		<result property="isLock" column="is_lock" />
		<result property="createMan" column="create_man" />
		<result property="createTime" column="create_time" />
		<result property="updateMan" column="update_man" />
		<result property="updateTime" column="update_time" />
		<result property="spaceId" column="space_id" />
		<result property="parentId" column="parent_id" />
		<result property="spaceName" column="space_name" />
        <association property="page" javaType="cn.ibizlab.plm.core.wiki.domain.ArticlePage" column="parent_id" select="cn.ibizlab.plm.core.wiki.mapper.ArticlePageMapper.selectById" fetchType="lazy"></association>
        <association property="space" javaType="cn.ibizlab.plm.core.wiki.domain.Space" column="space_id" select="cn.ibizlab.plm.core.wiki.mapper.SpaceMapper.selectById" fetchType="lazy"></association>
    </resultMap>

    <select id="selectById"  resultMap="ArticlePageResultMap">
        <include refid="view" /> 
         where 
         t1.id=#{ id }
    </select>

    <select id="selectEntity" parameterType="cn.ibizlab.plm.core.wiki.domain.ArticlePage" resultMap="ArticlePageResultMap">
        <include refid="view" /> 
         where 
         (t1.id = #{ id })
    </select>

    <select id="selectEntities" parameterType="java.util.List" resultMap="ArticlePageResultMap">
        <include refid="view" /> 
         where 
         (t1.id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </select>

    <delete id="deleteEntities" parameterType="java.util.List">
    delete from PAGE
    where (id)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.id }) </foreach>)
    </delete>

    <sql id="default" databaseId="mysql">
         <![CDATA[ SELECT t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`CUR_VERSION_NAME`, t1.`FORMAT_TYPE`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, (select count(1) from favorite where create_man=#{ctx.sessioncontext.srfpersonid} and OWNER_ID=t1.`ID` ) AS `IS_FAVORITE`, t1.`IS_LEAF`, t1.`IS_LOCK`, t1.`IS_PUBLISHED`, t1.`NAME`, t1.`PARENT_ID`, t1.`PUBLISHED`, t1.`PUBLISH_MAN`, t1.`PUBLISH_NAME`, t1.`PUBLISH_TIME`, t1.`SEQUENCE`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPACE_ID`, t11.`IDENTIFIER` AS `SPACE_IDENTIFIER`, t11.`NAME` AS `SPACE_NAME`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `PAGE` t1  LEFT JOIN `SPACE` t11 ON t1.`SPACE_ID` = t11.`ID`   ]]>  
    </sql>

    <sql id="view" databaseId="mysql">
         <![CDATA[ SELECT t1.`CATEGORIES`, t1.`CONTENT`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`CUR_VERSION_NAME`, t1.`FORMAT_TYPE`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, (select count(1) from favorite where create_man=#{ctx.sessioncontext.srfpersonid} and OWNER_ID=t1.`ID` ) AS `IS_FAVORITE`, t1.`IS_LEAF`, t1.`IS_LOCK`, t1.`IS_PUBLISHED`, t1.`NAME`, t1.`PARENT_ID`, t1.`PUBLISHED`, t1.`PUBLISH_CONTENT`, t1.`PUBLISH_MAN`, t1.`PUBLISH_NAME`, t1.`PUBLISH_TIME`, t1.`SEQUENCE`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPACE_ID`, t11.`IDENTIFIER` AS `SPACE_IDENTIFIER`, t11.`NAME` AS `SPACE_NAME`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `PAGE` t1  LEFT JOIN `SPACE` t11 ON t1.`SPACE_ID` = t11.`ID`   ]]>  
    </sql>

    <sql id="advancedSearch" databaseId="mysql">
         <![CDATA[ SELECT t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`CUR_VERSION_NAME`, t1.`FORMAT_TYPE`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, (select count(1) from favorite where create_man=#{ctx.sessioncontext.srfpersonid} and OWNER_ID=t1.`ID` ) AS `IS_FAVORITE`, t1.`IS_LEAF`, t1.`IS_LOCK`, t1.`IS_PUBLISHED`, t1.`NAME`, t1.`PARENT_ID`, t1.`PUBLISHED`, t1.`PUBLISH_MAN`, t1.`PUBLISH_NAME`, t1.`PUBLISH_TIME`, t1.`SEQUENCE`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPACE_ID`, t11.`IDENTIFIER` AS `SPACE_IDENTIFIER`, t11.`NAME` AS `SPACE_NAME`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `PAGE` t1  LEFT JOIN `SPACE` t11 ON t1.`SPACE_ID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  exists(select 1 from space t2, space_member t3 where t1.space_id = t2.id and t2.id = t3.space_id and t3.user_id = #{ctx.sessioncontext.srfpersonid})  AND  t1.`IS_PUBLISHED` = 1  AND  t1.`TYPE` = '1' ) ]]> 
    </sql>

    <sql id="baselineChoosePage" databaseId="mysql">
         <![CDATA[ SELECT t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`CUR_VERSION_NAME`, t1.`FORMAT_TYPE`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, (select count(1) from favorite where create_man=#{ctx.sessioncontext.srfpersonid} and OWNER_ID=t1.`ID` ) AS `IS_FAVORITE`, t1.`IS_LEAF`, t1.`IS_LOCK`, t1.`IS_PUBLISHED`, t1.`NAME`, t1.`PARENT_ID`, t1.`PUBLISHED`, t1.`PUBLISH_MAN`, t1.`PUBLISH_NAME`, t1.`PUBLISH_TIME`, t1.`SEQUENCE`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPACE_ID`, t11.`IDENTIFIER` AS `SPACE_IDENTIFIER`, t11.`NAME` AS `SPACE_NAME`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `PAGE` t1  LEFT JOIN `SPACE` t11 ON t1.`SPACE_ID` = t11.`ID`   ]]>  where  <![CDATA[ NOT(EXISTS(SELECT * FROM `RELATION` t21   WHERE   t1.`ID` = t21.`TARGET_ID`  AND  ( t21.`PRINCIPAL_ID` = #{ctx.webcontext.baseline}  AND  t21.`TARGET_TYPE` = 'page'  AND  t21.`PRINCIPAL_TYPE` = 'baseline' ) )) ]]> and  <![CDATA[ ( t1.`IS_DELETED` = 0 ) ]]> 
    </sql>

    <sql id="childPage" databaseId="mysql">
         <![CDATA[ SELECT t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`CUR_VERSION_NAME`, t1.`FORMAT_TYPE`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, (select count(1) from favorite where create_man=#{ctx.sessioncontext.srfpersonid} and OWNER_ID=t1.`ID` ) AS `IS_FAVORITE`, t1.`IS_LEAF`, t1.`IS_LOCK`, t1.`IS_PUBLISHED`, t1.`NAME`, t1.`PARENT_ID`, t1.`PUBLISHED`, t1.`PUBLISH_MAN`, t1.`PUBLISH_NAME`, t1.`PUBLISH_TIME`, t1.`SEQUENCE`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPACE_ID`, t11.`IDENTIFIER` AS `SPACE_IDENTIFIER`, t11.`NAME` AS `SPACE_NAME`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `PAGE` t1  LEFT JOIN `SPACE` t11 ON t1.`SPACE_ID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`PARENT_ID` IS NOT NULL  AND  t1.`IS_PUBLISHED` = 1  AND  t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0 ) ]]> 
    </sql>

    <sql id="draftPage" databaseId="mysql">
         <![CDATA[ SELECT t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`CUR_VERSION_NAME`, t1.`FORMAT_TYPE`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, (select count(1) from favorite where create_man=#{ctx.sessioncontext.srfpersonid} and OWNER_ID=t1.`ID` ) AS `IS_FAVORITE`, t1.`IS_LEAF`, t1.`IS_LOCK`, t1.`IS_PUBLISHED`, t1.`NAME`, t1.`PARENT_ID`, t1.`PUBLISHED`, t1.`PUBLISH_MAN`, t1.`PUBLISH_NAME`, t1.`PUBLISH_TIME`, t1.`SEQUENCE`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPACE_ID`, t11.`IDENTIFIER` AS `SPACE_IDENTIFIER`, t11.`NAME` AS `SPACE_NAME`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `PAGE` t1  LEFT JOIN `SPACE` t11 ON t1.`SPACE_ID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_PUBLISHED` = 0  AND  t1.`IS_ARCHIVED` = 0 ) ]]> 
    </sql>

    <sql id="homePage" databaseId="mysql">
         <![CDATA[ SELECT t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`CUR_VERSION_NAME`, t1.`FORMAT_TYPE`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, (select count(1) from favorite where create_man=#{ctx.sessioncontext.srfpersonid} and OWNER_ID=t1.`ID` ) AS `IS_FAVORITE`, t1.`IS_LEAF`, t1.`IS_LOCK`, t1.`IS_PUBLISHED`, t1.`NAME`, t1.`PARENT_ID`, t1.`PUBLISHED`, t1.`PUBLISH_MAN`, t1.`PUBLISH_NAME`, t1.`PUBLISH_TIME`, t1.`SEQUENCE`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPACE_ID`, t11.`IDENTIFIER` AS `SPACE_IDENTIFIER`, t11.`NAME` AS `SPACE_NAME`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `PAGE` t1  LEFT JOIN `SPACE` t11 ON t1.`SPACE_ID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`ID` = #{ctx.webcontext.n_space_id_eq} ) ]]> 
    </sql>

    <sql id="isDeleted" databaseId="mysql">
         <![CDATA[ SELECT t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`CUR_VERSION_NAME`, t1.`FORMAT_TYPE`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, (select count(1) from favorite where create_man=#{ctx.sessioncontext.srfpersonid} and OWNER_ID=t1.`ID` ) AS `IS_FAVORITE`, t1.`IS_LEAF`, t1.`IS_LOCK`, t1.`IS_PUBLISHED`, t1.`NAME`, t1.`PARENT_ID`, t1.`PUBLISHED`, t1.`PUBLISH_MAN`, t1.`PUBLISH_NAME`, t1.`PUBLISH_TIME`, t1.`SEQUENCE`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPACE_ID`, t11.`IDENTIFIER` AS `SPACE_IDENTIFIER`, t11.`NAME` AS `SPACE_NAME`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `PAGE` t1  LEFT JOIN `SPACE` t11 ON t1.`SPACE_ID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 1 ) ]]> 
    </sql>

    <sql id="myFavoritePage" databaseId="mysql">
         <![CDATA[ SELECT t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`CUR_VERSION_NAME`, t1.`FORMAT_TYPE`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, (select count(1) from favorite where create_man=#{ctx.sessioncontext.srfpersonid} and OWNER_ID=t1.`ID` ) AS `IS_FAVORITE`, t1.`IS_LEAF`, t1.`IS_LOCK`, t1.`IS_PUBLISHED`, t1.`NAME`, t1.`PARENT_ID`, t1.`PUBLISHED`, t1.`PUBLISH_MAN`, t1.`PUBLISH_NAME`, t1.`PUBLISH_TIME`, t1.`SEQUENCE`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPACE_ID`, t11.`IDENTIFIER` AS `SPACE_IDENTIFIER`, t11.`NAME` AS `SPACE_NAME`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `PAGE` t1  LEFT JOIN `SPACE` t11 ON t1.`SPACE_ID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0  AND  (select count(1) from favorite where create_man=#{ctx.sessioncontext.srfpersonid} and OWNER_ID=t1.`ID` ) = '1' ) ]]> 
    </sql>

    <sql id="noParentPage" databaseId="mysql">
         <![CDATA[ SELECT t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`CUR_VERSION_NAME`, t1.`FORMAT_TYPE`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, (select count(1) from favorite where create_man=#{ctx.sessioncontext.srfpersonid} and OWNER_ID=t1.`ID` ) AS `IS_FAVORITE`, t1.`IS_LEAF`, t1.`IS_LOCK`, t1.`IS_PUBLISHED`, t1.`NAME`, t1.`PARENT_ID`, t1.`PUBLISHED`, t1.`PUBLISH_MAN`, t1.`PUBLISH_NAME`, t1.`PUBLISH_TIME`, t1.`SEQUENCE`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPACE_ID`, t11.`IDENTIFIER` AS `SPACE_IDENTIFIER`, t11.`NAME` AS `SPACE_NAME`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `PAGE` t1  LEFT JOIN `SPACE` t11 ON t1.`SPACE_ID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`PARENT_ID` IS NULL  AND  t1.`ID` <> #{ctx.webcontext.n_space_id_eq}  AND  t1.`IS_ARCHIVED` = 0  AND  t1.`IS_DELETED` = 0  AND  t1.`IS_PUBLISHED` = 1 ) ]]> 
    </sql>

    <sql id="normal" databaseId="mysql">
         <![CDATA[ SELECT t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`CUR_VERSION_NAME`, t1.`FORMAT_TYPE`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, (select count(1) from favorite where create_man=#{ctx.sessioncontext.srfpersonid} and OWNER_ID=t1.`ID` ) AS `IS_FAVORITE`, t1.`IS_LEAF`, t1.`IS_LOCK`, t1.`IS_PUBLISHED`, t1.`NAME`, t1.`PARENT_ID`, t1.`PUBLISHED`, t1.`PUBLISH_MAN`, t1.`PUBLISH_NAME`, t1.`PUBLISH_TIME`, t1.`SEQUENCE`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPACE_ID`, t11.`IDENTIFIER` AS `SPACE_IDENTIFIER`, t11.`NAME` AS `SPACE_NAME`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `PAGE` t1  LEFT JOIN `SPACE` t11 ON t1.`SPACE_ID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_ARCHIVED` = 0  AND  t1.`IS_PUBLISHED` = 1 ) ]]> 
    </sql>

    <sql id="onlyPage" databaseId="mysql">
         <![CDATA[ SELECT t1.`CATEGORIES`, t1.`CREATE_MAN`, t1.`CREATE_TIME`, t1.`CUR_VERSION_ID`, t1.`CUR_VERSION_NAME`, t1.`FORMAT_TYPE`, t1.`ID`, t1.`IDENTIFIER`, t1.`IS_ARCHIVED`, t1.`IS_DELETED`, (select count(1) from favorite where create_man=#{ctx.sessioncontext.srfpersonid} and OWNER_ID=t1.`ID` ) AS `IS_FAVORITE`, t1.`IS_LEAF`, t1.`IS_LOCK`, t1.`IS_PUBLISHED`, t1.`NAME`, t1.`PARENT_ID`, t1.`PUBLISHED`, t1.`PUBLISH_MAN`, t1.`PUBLISH_NAME`, t1.`PUBLISH_TIME`, t1.`SEQUENCE`, concat(t11.`IDENTIFIER`,'-',t1.`IDENTIFIER`) AS `SHOW_IDENTIFIER`, t1.`SPACE_ID`, t11.`IDENTIFIER` AS `SPACE_IDENTIFIER`, t11.`NAME` AS `SPACE_NAME`, t1.`TYPE`, t1.`UPDATE_MAN`, t1.`UPDATE_TIME` FROM `PAGE` t1  LEFT JOIN `SPACE` t11 ON t1.`SPACE_ID` = t11.`ID`   ]]>  where  <![CDATA[ ( t1.`IS_DELETED` = 0  AND  t1.`IS_PUBLISHED` = 1  AND  t1.`TYPE` = '1' ) ]]> 
    </sql>

    <select id="searchDefault"  parameterType="cn.ibizlab.plm.core.wiki.filter.ArticlePageSearchContext"  resultMap="ArticlePageResultMap">
        select t1.* 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDefault"  parameterType="cn.ibizlab.plm.core.wiki.filter.ArticlePageSearchContext"  resultMap="ArticlePageResultMap">
        select t1.*
        from (
            <include refid="default"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchAdvancedSearch"  parameterType="cn.ibizlab.plm.core.wiki.filter.ArticlePageSearchContext"  resultMap="ArticlePageResultMap">
        select t1.* 
        from (
            <include refid="advancedSearch"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listAdvancedSearch"  parameterType="cn.ibizlab.plm.core.wiki.filter.ArticlePageSearchContext"  resultMap="ArticlePageResultMap">
        select t1.*
        from (
            <include refid="advancedSearch"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchBaselineChoosePage"  parameterType="cn.ibizlab.plm.core.wiki.filter.ArticlePageSearchContext"  resultMap="ArticlePageResultMap">
        select t1.* 
        from (
            <include refid="baselineChoosePage"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listBaselineChoosePage"  parameterType="cn.ibizlab.plm.core.wiki.filter.ArticlePageSearchContext"  resultMap="ArticlePageResultMap">
        select t1.*
        from (
            <include refid="baselineChoosePage"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchDraftPage"  parameterType="cn.ibizlab.plm.core.wiki.filter.ArticlePageSearchContext"  resultMap="ArticlePageResultMap">
        select t1.* 
        from (
            <include refid="draftPage"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listDraftPage"  parameterType="cn.ibizlab.plm.core.wiki.filter.ArticlePageSearchContext"  resultMap="ArticlePageResultMap">
        select t1.*
        from (
            <include refid="draftPage"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchHomePage"  parameterType="cn.ibizlab.plm.core.wiki.filter.ArticlePageSearchContext"  resultMap="ArticlePageResultMap">
        select t1.* 
        from (
            <include refid="homePage"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listHomePage"  parameterType="cn.ibizlab.plm.core.wiki.filter.ArticlePageSearchContext"  resultMap="ArticlePageResultMap">
        select t1.*
        from (
            <include refid="homePage"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchIsDeleted"  parameterType="cn.ibizlab.plm.core.wiki.filter.ArticlePageSearchContext"  resultMap="ArticlePageResultMap">
        select t1.* 
        from (
            <include refid="isDeleted"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listIsDeleted"  parameterType="cn.ibizlab.plm.core.wiki.filter.ArticlePageSearchContext"  resultMap="ArticlePageResultMap">
        select t1.*
        from (
            <include refid="isDeleted"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchMyFavoritePage"  parameterType="cn.ibizlab.plm.core.wiki.filter.ArticlePageSearchContext"  resultMap="ArticlePageResultMap">
        select t1.* 
        from (
            <include refid="myFavoritePage"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listMyFavoritePage"  parameterType="cn.ibizlab.plm.core.wiki.filter.ArticlePageSearchContext"  resultMap="ArticlePageResultMap">
        select t1.*
        from (
            <include refid="myFavoritePage"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNoParentPage"  parameterType="cn.ibizlab.plm.core.wiki.filter.ArticlePageSearchContext"  resultMap="ArticlePageResultMap">
        select t1.* 
        from (
            <include refid="noParentPage"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNoParentPage"  parameterType="cn.ibizlab.plm.core.wiki.filter.ArticlePageSearchContext"  resultMap="ArticlePageResultMap">
        select t1.*
        from (
            <include refid="noParentPage"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchNormal"  parameterType="cn.ibizlab.plm.core.wiki.filter.ArticlePageSearchContext"  resultMap="ArticlePageResultMap">
        select t1.* 
        from (
            <include refid="normal"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listNormal"  parameterType="cn.ibizlab.plm.core.wiki.filter.ArticlePageSearchContext"  resultMap="ArticlePageResultMap">
        select t1.*
        from (
            <include refid="normal"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="searchOnlyPage"  parameterType="cn.ibizlab.plm.core.wiki.filter.ArticlePageSearchContext"  resultMap="ArticlePageResultMap">
        select t1.* 
        from (
            <include refid="onlyPage"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>


    <select id="listOnlyPage"  parameterType="cn.ibizlab.plm.core.wiki.filter.ArticlePageSearchContext"  resultMap="ArticlePageResultMap">
        select t1.*
        from (
            <include refid="onlyPage"/>
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
    </select>

    <select id="findByParentId" resultMap="ArticlePageResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where parent_id in <foreach item="id" index="index" collection="parentIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>

    <select id="findBySpaceId" resultMap="ArticlePageResultMap">
        select t1.* from (
            <include refid="default"/>
        ) t1
        where space_id in <foreach item="id" index="index" collection="spaceIds" open="(" separator="," close=")">#{id}</foreach> 
    </select>


</mapper>